/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// PaymentDetails struct for PaymentDetails
type PaymentDetails struct {
	Format *string `json:"format,omitempty"`
	Bic *string `json:"bic,omitempty"`
	BankFullname *string `json:"bank_fullname,omitempty"`
	BankShortname *string `json:"bank_shortname,omitempty"`
	BankAddress *string `json:"bank_address,omitempty"`
	BankCountry *string `json:"bank_country,omitempty"`
	OtherInfo *OtherInfo `json:"other_info,omitempty"`
}

// NewPaymentDetails instantiates a new PaymentDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentDetails() *PaymentDetails {
	this := PaymentDetails{}
	return &this
}

// NewPaymentDetailsWithDefaults instantiates a new PaymentDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentDetailsWithDefaults() *PaymentDetails {
	this := PaymentDetails{}
	return &this
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *PaymentDetails) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *PaymentDetails) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *PaymentDetails) SetFormat(v string) {
	o.Format = &v
}

// GetBic returns the Bic field value if set, zero value otherwise.
func (o *PaymentDetails) GetBic() string {
	if o == nil || o.Bic == nil {
		var ret string
		return ret
	}
	return *o.Bic
}

// GetBicOk returns a tuple with the Bic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetBicOk() (*string, bool) {
	if o == nil || o.Bic == nil {
		return nil, false
	}
	return o.Bic, true
}

// HasBic returns a boolean if a field has been set.
func (o *PaymentDetails) HasBic() bool {
	if o != nil && o.Bic != nil {
		return true
	}

	return false
}

// SetBic gets a reference to the given string and assigns it to the Bic field.
func (o *PaymentDetails) SetBic(v string) {
	o.Bic = &v
}

// GetBankFullname returns the BankFullname field value if set, zero value otherwise.
func (o *PaymentDetails) GetBankFullname() string {
	if o == nil || o.BankFullname == nil {
		var ret string
		return ret
	}
	return *o.BankFullname
}

// GetBankFullnameOk returns a tuple with the BankFullname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetBankFullnameOk() (*string, bool) {
	if o == nil || o.BankFullname == nil {
		return nil, false
	}
	return o.BankFullname, true
}

// HasBankFullname returns a boolean if a field has been set.
func (o *PaymentDetails) HasBankFullname() bool {
	if o != nil && o.BankFullname != nil {
		return true
	}

	return false
}

// SetBankFullname gets a reference to the given string and assigns it to the BankFullname field.
func (o *PaymentDetails) SetBankFullname(v string) {
	o.BankFullname = &v
}

// GetBankShortname returns the BankShortname field value if set, zero value otherwise.
func (o *PaymentDetails) GetBankShortname() string {
	if o == nil || o.BankShortname == nil {
		var ret string
		return ret
	}
	return *o.BankShortname
}

// GetBankShortnameOk returns a tuple with the BankShortname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetBankShortnameOk() (*string, bool) {
	if o == nil || o.BankShortname == nil {
		return nil, false
	}
	return o.BankShortname, true
}

// HasBankShortname returns a boolean if a field has been set.
func (o *PaymentDetails) HasBankShortname() bool {
	if o != nil && o.BankShortname != nil {
		return true
	}

	return false
}

// SetBankShortname gets a reference to the given string and assigns it to the BankShortname field.
func (o *PaymentDetails) SetBankShortname(v string) {
	o.BankShortname = &v
}

// GetBankAddress returns the BankAddress field value if set, zero value otherwise.
func (o *PaymentDetails) GetBankAddress() string {
	if o == nil || o.BankAddress == nil {
		var ret string
		return ret
	}
	return *o.BankAddress
}

// GetBankAddressOk returns a tuple with the BankAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetBankAddressOk() (*string, bool) {
	if o == nil || o.BankAddress == nil {
		return nil, false
	}
	return o.BankAddress, true
}

// HasBankAddress returns a boolean if a field has been set.
func (o *PaymentDetails) HasBankAddress() bool {
	if o != nil && o.BankAddress != nil {
		return true
	}

	return false
}

// SetBankAddress gets a reference to the given string and assigns it to the BankAddress field.
func (o *PaymentDetails) SetBankAddress(v string) {
	o.BankAddress = &v
}

// GetBankCountry returns the BankCountry field value if set, zero value otherwise.
func (o *PaymentDetails) GetBankCountry() string {
	if o == nil || o.BankCountry == nil {
		var ret string
		return ret
	}
	return *o.BankCountry
}

// GetBankCountryOk returns a tuple with the BankCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetBankCountryOk() (*string, bool) {
	if o == nil || o.BankCountry == nil {
		return nil, false
	}
	return o.BankCountry, true
}

// HasBankCountry returns a boolean if a field has been set.
func (o *PaymentDetails) HasBankCountry() bool {
	if o != nil && o.BankCountry != nil {
		return true
	}

	return false
}

// SetBankCountry gets a reference to the given string and assigns it to the BankCountry field.
func (o *PaymentDetails) SetBankCountry(v string) {
	o.BankCountry = &v
}

// GetOtherInfo returns the OtherInfo field value if set, zero value otherwise.
func (o *PaymentDetails) GetOtherInfo() OtherInfo {
	if o == nil || o.OtherInfo == nil {
		var ret OtherInfo
		return ret
	}
	return *o.OtherInfo
}

// GetOtherInfoOk returns a tuple with the OtherInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetOtherInfoOk() (*OtherInfo, bool) {
	if o == nil || o.OtherInfo == nil {
		return nil, false
	}
	return o.OtherInfo, true
}

// HasOtherInfo returns a boolean if a field has been set.
func (o *PaymentDetails) HasOtherInfo() bool {
	if o != nil && o.OtherInfo != nil {
		return true
	}

	return false
}

// SetOtherInfo gets a reference to the given OtherInfo and assigns it to the OtherInfo field.
func (o *PaymentDetails) SetOtherInfo(v OtherInfo) {
	o.OtherInfo = &v
}

func (o PaymentDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.Bic != nil {
		toSerialize["bic"] = o.Bic
	}
	if o.BankFullname != nil {
		toSerialize["bank_fullname"] = o.BankFullname
	}
	if o.BankShortname != nil {
		toSerialize["bank_shortname"] = o.BankShortname
	}
	if o.BankAddress != nil {
		toSerialize["bank_address"] = o.BankAddress
	}
	if o.BankCountry != nil {
		toSerialize["bank_country"] = o.BankCountry
	}
	if o.OtherInfo != nil {
		toSerialize["other_info"] = o.OtherInfo
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentDetails struct {
	value *PaymentDetails
	isSet bool
}

func (v NullablePaymentDetails) Get() *PaymentDetails {
	return v.value
}

func (v *NullablePaymentDetails) Set(val *PaymentDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentDetails(val *PaymentDetails) *NullablePaymentDetails {
	return &NullablePaymentDetails{value: val, isSet: true}
}

func (v NullablePaymentDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


