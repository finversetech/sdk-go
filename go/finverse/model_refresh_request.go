/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// RefreshRequest struct for RefreshRequest
type RefreshRequest struct {
	RefreshToken string `json:"refresh_token"`
}

// NewRefreshRequest instantiates a new RefreshRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshRequest(refreshToken string) *RefreshRequest {
	this := RefreshRequest{}
	this.RefreshToken = refreshToken
	return &this
}

// NewRefreshRequestWithDefaults instantiates a new RefreshRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshRequestWithDefaults() *RefreshRequest {
	this := RefreshRequest{}
	return &this
}

// GetRefreshToken returns the RefreshToken field value
func (o *RefreshRequest) GetRefreshToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value
// and a boolean to check if the value has been set.
func (o *RefreshRequest) GetRefreshTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RefreshToken, true
}

// SetRefreshToken sets field value
func (o *RefreshRequest) SetRefreshToken(v string) {
	o.RefreshToken = v
}

func (o RefreshRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	return json.Marshal(toSerialize)
}

type NullableRefreshRequest struct {
	value *RefreshRequest
	isSet bool
}

func (v NullableRefreshRequest) Get() *RefreshRequest {
	return v.value
}

func (v *NullableRefreshRequest) Set(val *RefreshRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshRequest(val *RefreshRequest) *NullableRefreshRequest {
	return &NullableRefreshRequest{value: val, isSet: true}
}

func (v NullableRefreshRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


