/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// MandateDetails struct for MandateDetails
type MandateDetails struct {
	// ISO currency code
	Currency string `json:"currency"`
	// YYYY-MM-DD, must be later than or the same as the date of creation. If unspecified, default to the date of creation.
	StartDate *string `json:"start_date,omitempty"`
	// YYYY-MM-DD, must be later than the date of creation.
	EndDate           *string            `json:"end_date,omitempty"`
	PaymentSchedule   *PaymentSchedule   `json:"payment_schedule,omitempty"`
	TransactionLimits *TransactionLimits `json:"transaction_limits,omitempty"`
	// End-user facing description of the mandate (used in notifications, and in payments if no description is provided)
	Description *string `json:"description,omitempty"`
}

// NewMandateDetails instantiates a new MandateDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMandateDetails(currency string) *MandateDetails {
	this := MandateDetails{}
	this.Currency = currency
	return &this
}

// NewMandateDetailsWithDefaults instantiates a new MandateDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMandateDetailsWithDefaults() *MandateDetails {
	this := MandateDetails{}
	return &this
}

// GetCurrency returns the Currency field value
func (o *MandateDetails) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *MandateDetails) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *MandateDetails) SetCurrency(v string) {
	o.Currency = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *MandateDetails) GetStartDate() string {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateDetails) GetStartDateOk() (*string, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *MandateDetails) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *MandateDetails) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *MandateDetails) GetEndDate() string {
	if o == nil || o.EndDate == nil {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateDetails) GetEndDateOk() (*string, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *MandateDetails) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *MandateDetails) SetEndDate(v string) {
	o.EndDate = &v
}

// GetPaymentSchedule returns the PaymentSchedule field value if set, zero value otherwise.
func (o *MandateDetails) GetPaymentSchedule() PaymentSchedule {
	if o == nil || o.PaymentSchedule == nil {
		var ret PaymentSchedule
		return ret
	}
	return *o.PaymentSchedule
}

// GetPaymentScheduleOk returns a tuple with the PaymentSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateDetails) GetPaymentScheduleOk() (*PaymentSchedule, bool) {
	if o == nil || o.PaymentSchedule == nil {
		return nil, false
	}
	return o.PaymentSchedule, true
}

// HasPaymentSchedule returns a boolean if a field has been set.
func (o *MandateDetails) HasPaymentSchedule() bool {
	if o != nil && o.PaymentSchedule != nil {
		return true
	}

	return false
}

// SetPaymentSchedule gets a reference to the given PaymentSchedule and assigns it to the PaymentSchedule field.
func (o *MandateDetails) SetPaymentSchedule(v PaymentSchedule) {
	o.PaymentSchedule = &v
}

// GetTransactionLimits returns the TransactionLimits field value if set, zero value otherwise.
func (o *MandateDetails) GetTransactionLimits() TransactionLimits {
	if o == nil || o.TransactionLimits == nil {
		var ret TransactionLimits
		return ret
	}
	return *o.TransactionLimits
}

// GetTransactionLimitsOk returns a tuple with the TransactionLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateDetails) GetTransactionLimitsOk() (*TransactionLimits, bool) {
	if o == nil || o.TransactionLimits == nil {
		return nil, false
	}
	return o.TransactionLimits, true
}

// HasTransactionLimits returns a boolean if a field has been set.
func (o *MandateDetails) HasTransactionLimits() bool {
	if o != nil && o.TransactionLimits != nil {
		return true
	}

	return false
}

// SetTransactionLimits gets a reference to the given TransactionLimits and assigns it to the TransactionLimits field.
func (o *MandateDetails) SetTransactionLimits(v TransactionLimits) {
	o.TransactionLimits = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MandateDetails) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateDetails) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MandateDetails) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MandateDetails) SetDescription(v string) {
	o.Description = &v
}

func (o MandateDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if o.StartDate != nil {
		toSerialize["start_date"] = o.StartDate
	}
	if o.EndDate != nil {
		toSerialize["end_date"] = o.EndDate
	}
	if o.PaymentSchedule != nil {
		toSerialize["payment_schedule"] = o.PaymentSchedule
	}
	if o.TransactionLimits != nil {
		toSerialize["transaction_limits"] = o.TransactionLimits
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableMandateDetails struct {
	value *MandateDetails
	isSet bool
}

func (v NullableMandateDetails) Get() *MandateDetails {
	return v.value
}

func (v *NullableMandateDetails) Set(val *MandateDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableMandateDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableMandateDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMandateDetails(val *MandateDetails) *NullableMandateDetails {
	return &NullableMandateDetails{value: val, isSet: true}
}

func (v NullableMandateDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMandateDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
