/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the ManualPaymentConfirmationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManualPaymentConfirmationResponse{}

// ManualPaymentConfirmationResponse struct for ManualPaymentConfirmationResponse
type ManualPaymentConfirmationResponse struct {
	PaymentId            *string `json:"payment_id,omitempty"`
	Status               *string `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ManualPaymentConfirmationResponse ManualPaymentConfirmationResponse

// NewManualPaymentConfirmationResponse instantiates a new ManualPaymentConfirmationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManualPaymentConfirmationResponse() *ManualPaymentConfirmationResponse {
	this := ManualPaymentConfirmationResponse{}
	return &this
}

// NewManualPaymentConfirmationResponseWithDefaults instantiates a new ManualPaymentConfirmationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManualPaymentConfirmationResponseWithDefaults() *ManualPaymentConfirmationResponse {
	this := ManualPaymentConfirmationResponse{}
	return &this
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *ManualPaymentConfirmationResponse) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualPaymentConfirmationResponse) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *ManualPaymentConfirmationResponse) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *ManualPaymentConfirmationResponse) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ManualPaymentConfirmationResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualPaymentConfirmationResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ManualPaymentConfirmationResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ManualPaymentConfirmationResponse) SetStatus(v string) {
	o.Status = &v
}

func (o ManualPaymentConfirmationResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManualPaymentConfirmationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentId) {
		toSerialize["payment_id"] = o.PaymentId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ManualPaymentConfirmationResponse) UnmarshalJSON(data []byte) (err error) {
	varManualPaymentConfirmationResponse := _ManualPaymentConfirmationResponse{}

	err = json.Unmarshal(data, &varManualPaymentConfirmationResponse)

	if err != nil {
		return err
	}

	*o = ManualPaymentConfirmationResponse(varManualPaymentConfirmationResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "payment_id")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManualPaymentConfirmationResponse struct {
	value *ManualPaymentConfirmationResponse
	isSet bool
}

func (v NullableManualPaymentConfirmationResponse) Get() *ManualPaymentConfirmationResponse {
	return v.value
}

func (v *NullableManualPaymentConfirmationResponse) Set(val *ManualPaymentConfirmationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableManualPaymentConfirmationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableManualPaymentConfirmationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManualPaymentConfirmationResponse(val *ManualPaymentConfirmationResponse) *NullableManualPaymentConfirmationResponse {
	return &NullableManualPaymentConfirmationResponse{value: val, isSet: true}
}

func (v NullableManualPaymentConfirmationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManualPaymentConfirmationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
