/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the LoginMethod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoginMethod{}

// LoginMethod struct for LoginMethod
type LoginMethod struct {
	Id                   *string      `json:"id,omitempty"`
	Name                 *string      `json:"name,omitempty"`
	IsDefaultMethod      NullableBool `json:"is_default_method,omitempty"`
	Status               *string      `json:"status,omitempty"`
	LoginFields          []LoginField `json:"login_fields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LoginMethod LoginMethod

// NewLoginMethod instantiates a new LoginMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginMethod() *LoginMethod {
	this := LoginMethod{}
	return &this
}

// NewLoginMethodWithDefaults instantiates a new LoginMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginMethodWithDefaults() *LoginMethod {
	this := LoginMethod{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LoginMethod) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginMethod) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LoginMethod) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LoginMethod) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LoginMethod) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginMethod) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LoginMethod) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LoginMethod) SetName(v string) {
	o.Name = &v
}

// GetIsDefaultMethod returns the IsDefaultMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LoginMethod) GetIsDefaultMethod() bool {
	if o == nil || IsNil(o.IsDefaultMethod.Get()) {
		var ret bool
		return ret
	}
	return *o.IsDefaultMethod.Get()
}

// GetIsDefaultMethodOk returns a tuple with the IsDefaultMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LoginMethod) GetIsDefaultMethodOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDefaultMethod.Get(), o.IsDefaultMethod.IsSet()
}

// HasIsDefaultMethod returns a boolean if a field has been set.
func (o *LoginMethod) HasIsDefaultMethod() bool {
	if o != nil && o.IsDefaultMethod.IsSet() {
		return true
	}

	return false
}

// SetIsDefaultMethod gets a reference to the given NullableBool and assigns it to the IsDefaultMethod field.
func (o *LoginMethod) SetIsDefaultMethod(v bool) {
	o.IsDefaultMethod.Set(&v)
}

// SetIsDefaultMethodNil sets the value for IsDefaultMethod to be an explicit nil
func (o *LoginMethod) SetIsDefaultMethodNil() {
	o.IsDefaultMethod.Set(nil)
}

// UnsetIsDefaultMethod ensures that no value is present for IsDefaultMethod, not even an explicit nil
func (o *LoginMethod) UnsetIsDefaultMethod() {
	o.IsDefaultMethod.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LoginMethod) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginMethod) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LoginMethod) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *LoginMethod) SetStatus(v string) {
	o.Status = &v
}

// GetLoginFields returns the LoginFields field value if set, zero value otherwise.
func (o *LoginMethod) GetLoginFields() []LoginField {
	if o == nil || IsNil(o.LoginFields) {
		var ret []LoginField
		return ret
	}
	return o.LoginFields
}

// GetLoginFieldsOk returns a tuple with the LoginFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginMethod) GetLoginFieldsOk() ([]LoginField, bool) {
	if o == nil || IsNil(o.LoginFields) {
		return nil, false
	}
	return o.LoginFields, true
}

// HasLoginFields returns a boolean if a field has been set.
func (o *LoginMethod) HasLoginFields() bool {
	if o != nil && !IsNil(o.LoginFields) {
		return true
	}

	return false
}

// SetLoginFields gets a reference to the given []LoginField and assigns it to the LoginFields field.
func (o *LoginMethod) SetLoginFields(v []LoginField) {
	o.LoginFields = v
}

func (o LoginMethod) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoginMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.IsDefaultMethod.IsSet() {
		toSerialize["is_default_method"] = o.IsDefaultMethod.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.LoginFields) {
		toSerialize["login_fields"] = o.LoginFields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LoginMethod) UnmarshalJSON(data []byte) (err error) {
	varLoginMethod := _LoginMethod{}

	err = json.Unmarshal(data, &varLoginMethod)

	if err != nil {
		return err
	}

	*o = LoginMethod(varLoginMethod)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "is_default_method")
		delete(additionalProperties, "status")
		delete(additionalProperties, "login_fields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLoginMethod struct {
	value *LoginMethod
	isSet bool
}

func (v NullableLoginMethod) Get() *LoginMethod {
	return v.value
}

func (v *NullableLoginMethod) Set(val *LoginMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginMethod(val *LoginMethod) *NullableLoginMethod {
	return &NullableLoginMethod{value: val, isSet: true}
}

func (v NullableLoginMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
