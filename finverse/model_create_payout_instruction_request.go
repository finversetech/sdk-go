/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// CreatePayoutInstructionRequest struct for CreatePayoutInstructionRequest
type CreatePayoutInstructionRequest struct {
	// The mandate used to execute payments for this payout instruction. Currency for the mandate must be supported by the recipient account
	MandateId string `json:"mandate_id"`
	// The recipient account to receive the payment
	RecipientAccountId string `json:"recipient_account_id"`
	// Amount to be paid, in currency's smallest unit or “minor unit”, as defined in ISO 4217. For example, HKD 100.01 is represented as amount = 10001 (minor unit = cents). For currencies without minor units (e.g. VND, JPY), the amount is represented as is, without modification. For example, VND 15101 is represented as amount = 15101.
	Amount int32 `json:"amount"`
	// YYYY-MM-DD, date (in UTC) to execute the payment, must be 1 day later than current date
	Date string `json:"date"`
	// A description for the payment (that will appear as the transaction description on bank statements)
	Description *string `json:"description,omitempty"`
	// The currency code as defined in ISO 4217.
	Currency string `json:"currency"`
}

// NewCreatePayoutInstructionRequest instantiates a new CreatePayoutInstructionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePayoutInstructionRequest(mandateId string, recipientAccountId string, amount int32, date string, currency string) *CreatePayoutInstructionRequest {
	this := CreatePayoutInstructionRequest{}
	this.MandateId = mandateId
	this.RecipientAccountId = recipientAccountId
	this.Amount = amount
	this.Date = date
	this.Currency = currency
	return &this
}

// NewCreatePayoutInstructionRequestWithDefaults instantiates a new CreatePayoutInstructionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePayoutInstructionRequestWithDefaults() *CreatePayoutInstructionRequest {
	this := CreatePayoutInstructionRequest{}
	return &this
}

// GetMandateId returns the MandateId field value
func (o *CreatePayoutInstructionRequest) GetMandateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MandateId
}

// GetMandateIdOk returns a tuple with the MandateId field value
// and a boolean to check if the value has been set.
func (o *CreatePayoutInstructionRequest) GetMandateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MandateId, true
}

// SetMandateId sets field value
func (o *CreatePayoutInstructionRequest) SetMandateId(v string) {
	o.MandateId = v
}

// GetRecipientAccountId returns the RecipientAccountId field value
func (o *CreatePayoutInstructionRequest) GetRecipientAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecipientAccountId
}

// GetRecipientAccountIdOk returns a tuple with the RecipientAccountId field value
// and a boolean to check if the value has been set.
func (o *CreatePayoutInstructionRequest) GetRecipientAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecipientAccountId, true
}

// SetRecipientAccountId sets field value
func (o *CreatePayoutInstructionRequest) SetRecipientAccountId(v string) {
	o.RecipientAccountId = v
}

// GetAmount returns the Amount field value
func (o *CreatePayoutInstructionRequest) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CreatePayoutInstructionRequest) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CreatePayoutInstructionRequest) SetAmount(v int32) {
	o.Amount = v
}

// GetDate returns the Date field value
func (o *CreatePayoutInstructionRequest) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *CreatePayoutInstructionRequest) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *CreatePayoutInstructionRequest) SetDate(v string) {
	o.Date = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreatePayoutInstructionRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePayoutInstructionRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreatePayoutInstructionRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreatePayoutInstructionRequest) SetDescription(v string) {
	o.Description = &v
}

// GetCurrency returns the Currency field value
func (o *CreatePayoutInstructionRequest) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *CreatePayoutInstructionRequest) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *CreatePayoutInstructionRequest) SetCurrency(v string) {
	o.Currency = v
}

func (o CreatePayoutInstructionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mandate_id"] = o.MandateId
	}
	if true {
		toSerialize["recipient_account_id"] = o.RecipientAccountId
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["date"] = o.Date
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePayoutInstructionRequest struct {
	value *CreatePayoutInstructionRequest
	isSet bool
}

func (v NullableCreatePayoutInstructionRequest) Get() *CreatePayoutInstructionRequest {
	return v.value
}

func (v *NullableCreatePayoutInstructionRequest) Set(val *CreatePayoutInstructionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePayoutInstructionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePayoutInstructionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePayoutInstructionRequest(val *CreatePayoutInstructionRequest) *NullableCreatePayoutInstructionRequest {
	return &NullableCreatePayoutInstructionRequest{value: val, isSet: true}
}

func (v NullableCreatePayoutInstructionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePayoutInstructionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
