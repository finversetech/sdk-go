/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// GetPaymentResponse struct for GetPaymentResponse
type GetPaymentResponse struct {
	// Finverse Payment ID
	PaymentId *string `json:"payment_id,omitempty"`
	// Amount to be paid, in currency’s smallest unit or “minor unit”, as defined in ISO 4217. For example, HKD 100.01 is represented as amount = 10001 (minor unit = cents). For currencies without minor units (e.g. VND, JPY), the amount is represented as is, without modification. For example, VND 15101 is represented as amount = 15101.
	Amount *int32 `json:"amount,omitempty"`
	// Indicates whether this is a mandate-based payment or one-off direct payment to an account. Possible values - MANDATE, SINGLE
	Type *string `json:"type,omitempty"`
	// Possible values - CREATED, AUTHORIZED, SUBMITTED, EXECUTED, FAILED, REJECTED, CANCELLED.
	Status         *string          `json:"status,omitempty"`
	PaymentDetails *PaymentDetails2 `json:"payment_details,omitempty"`
}

// NewGetPaymentResponse instantiates a new GetPaymentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPaymentResponse() *GetPaymentResponse {
	this := GetPaymentResponse{}
	return &this
}

// NewGetPaymentResponseWithDefaults instantiates a new GetPaymentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPaymentResponseWithDefaults() *GetPaymentResponse {
	this := GetPaymentResponse{}
	return &this
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *GetPaymentResponse) GetPaymentId() string {
	if o == nil || o.PaymentId == nil {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentResponse) GetPaymentIdOk() (*string, bool) {
	if o == nil || o.PaymentId == nil {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *GetPaymentResponse) HasPaymentId() bool {
	if o != nil && o.PaymentId != nil {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *GetPaymentResponse) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetPaymentResponse) GetAmount() int32 {
	if o == nil || o.Amount == nil {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentResponse) GetAmountOk() (*int32, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetPaymentResponse) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *GetPaymentResponse) SetAmount(v int32) {
	o.Amount = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetPaymentResponse) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentResponse) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetPaymentResponse) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetPaymentResponse) SetType(v string) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetPaymentResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetPaymentResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetPaymentResponse) SetStatus(v string) {
	o.Status = &v
}

// GetPaymentDetails returns the PaymentDetails field value if set, zero value otherwise.
func (o *GetPaymentResponse) GetPaymentDetails() PaymentDetails2 {
	if o == nil || o.PaymentDetails == nil {
		var ret PaymentDetails2
		return ret
	}
	return *o.PaymentDetails
}

// GetPaymentDetailsOk returns a tuple with the PaymentDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentResponse) GetPaymentDetailsOk() (*PaymentDetails2, bool) {
	if o == nil || o.PaymentDetails == nil {
		return nil, false
	}
	return o.PaymentDetails, true
}

// HasPaymentDetails returns a boolean if a field has been set.
func (o *GetPaymentResponse) HasPaymentDetails() bool {
	if o != nil && o.PaymentDetails != nil {
		return true
	}

	return false
}

// SetPaymentDetails gets a reference to the given PaymentDetails2 and assigns it to the PaymentDetails field.
func (o *GetPaymentResponse) SetPaymentDetails(v PaymentDetails2) {
	o.PaymentDetails = &v
}

func (o GetPaymentResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PaymentId != nil {
		toSerialize["payment_id"] = o.PaymentId
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.PaymentDetails != nil {
		toSerialize["payment_details"] = o.PaymentDetails
	}
	return json.Marshal(toSerialize)
}

type NullableGetPaymentResponse struct {
	value *GetPaymentResponse
	isSet bool
}

func (v NullableGetPaymentResponse) Get() *GetPaymentResponse {
	return v.value
}

func (v *NullableGetPaymentResponse) Set(val *GetPaymentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPaymentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPaymentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPaymentResponse(val *GetPaymentResponse) *NullableGetPaymentResponse {
	return &NullableGetPaymentResponse{value: val, isSet: true}
}

func (v NullableGetPaymentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPaymentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
