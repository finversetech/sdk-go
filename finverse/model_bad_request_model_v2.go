/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the BadRequestModelV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BadRequestModelV2{}

// BadRequestModelV2 struct for BadRequestModelV2
type BadRequestModelV2 struct {
	Error                *BadRequestModelV2Error `json:"error,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BadRequestModelV2 BadRequestModelV2

// NewBadRequestModelV2 instantiates a new BadRequestModelV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBadRequestModelV2() *BadRequestModelV2 {
	this := BadRequestModelV2{}
	return &this
}

// NewBadRequestModelV2WithDefaults instantiates a new BadRequestModelV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBadRequestModelV2WithDefaults() *BadRequestModelV2 {
	this := BadRequestModelV2{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *BadRequestModelV2) GetError() BadRequestModelV2Error {
	if o == nil || IsNil(o.Error) {
		var ret BadRequestModelV2Error
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BadRequestModelV2) GetErrorOk() (*BadRequestModelV2Error, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *BadRequestModelV2) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given BadRequestModelV2Error and assigns it to the Error field.
func (o *BadRequestModelV2) SetError(v BadRequestModelV2Error) {
	o.Error = &v
}

func (o BadRequestModelV2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BadRequestModelV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BadRequestModelV2) UnmarshalJSON(data []byte) (err error) {
	varBadRequestModelV2 := _BadRequestModelV2{}

	err = json.Unmarshal(data, &varBadRequestModelV2)

	if err != nil {
		return err
	}

	*o = BadRequestModelV2(varBadRequestModelV2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "error")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBadRequestModelV2 struct {
	value *BadRequestModelV2
	isSet bool
}

func (v NullableBadRequestModelV2) Get() *BadRequestModelV2 {
	return v.value
}

func (v *NullableBadRequestModelV2) Set(val *BadRequestModelV2) {
	v.value = val
	v.isSet = true
}

func (v NullableBadRequestModelV2) IsSet() bool {
	return v.isSet
}

func (v *NullableBadRequestModelV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBadRequestModelV2(val *BadRequestModelV2) *NullableBadRequestModelV2 {
	return &NullableBadRequestModelV2{value: val, isSet: true}
}

func (v NullableBadRequestModelV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBadRequestModelV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
