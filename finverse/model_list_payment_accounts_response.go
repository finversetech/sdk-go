/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// ListPaymentAccountsResponse struct for ListPaymentAccountsResponse
type ListPaymentAccountsResponse struct {
	PaymentAccounts []PaymentAccountDetails `json:"payment_accounts,omitempty"`
}

// NewListPaymentAccountsResponse instantiates a new ListPaymentAccountsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPaymentAccountsResponse() *ListPaymentAccountsResponse {
	this := ListPaymentAccountsResponse{}
	return &this
}

// NewListPaymentAccountsResponseWithDefaults instantiates a new ListPaymentAccountsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPaymentAccountsResponseWithDefaults() *ListPaymentAccountsResponse {
	this := ListPaymentAccountsResponse{}
	return &this
}

// GetPaymentAccounts returns the PaymentAccounts field value if set, zero value otherwise.
func (o *ListPaymentAccountsResponse) GetPaymentAccounts() []PaymentAccountDetails {
	if o == nil || o.PaymentAccounts == nil {
		var ret []PaymentAccountDetails
		return ret
	}
	return o.PaymentAccounts
}

// GetPaymentAccountsOk returns a tuple with the PaymentAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPaymentAccountsResponse) GetPaymentAccountsOk() ([]PaymentAccountDetails, bool) {
	if o == nil || o.PaymentAccounts == nil {
		return nil, false
	}
	return o.PaymentAccounts, true
}

// HasPaymentAccounts returns a boolean if a field has been set.
func (o *ListPaymentAccountsResponse) HasPaymentAccounts() bool {
	if o != nil && o.PaymentAccounts != nil {
		return true
	}

	return false
}

// SetPaymentAccounts gets a reference to the given []PaymentAccountDetails and assigns it to the PaymentAccounts field.
func (o *ListPaymentAccountsResponse) SetPaymentAccounts(v []PaymentAccountDetails) {
	o.PaymentAccounts = v
}

func (o ListPaymentAccountsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PaymentAccounts != nil {
		toSerialize["payment_accounts"] = o.PaymentAccounts
	}
	return json.Marshal(toSerialize)
}

type NullableListPaymentAccountsResponse struct {
	value *ListPaymentAccountsResponse
	isSet bool
}

func (v NullableListPaymentAccountsResponse) Get() *ListPaymentAccountsResponse {
	return v.value
}

func (v *NullableListPaymentAccountsResponse) Set(val *ListPaymentAccountsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListPaymentAccountsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListPaymentAccountsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPaymentAccountsResponse(val *ListPaymentAccountsResponse) *NullableListPaymentAccountsResponse {
	return &NullableListPaymentAccountsResponse{value: val, isSet: true}
}

func (v NullableListPaymentAccountsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPaymentAccountsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
