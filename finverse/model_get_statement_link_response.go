/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the GetStatementLinkResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetStatementLinkResponse{}

// GetStatementLinkResponse struct for GetStatementLinkResponse
type GetStatementLinkResponse struct {
	StatementLinks       []StatementLink `json:"statement_links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetStatementLinkResponse GetStatementLinkResponse

// NewGetStatementLinkResponse instantiates a new GetStatementLinkResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStatementLinkResponse() *GetStatementLinkResponse {
	this := GetStatementLinkResponse{}
	return &this
}

// NewGetStatementLinkResponseWithDefaults instantiates a new GetStatementLinkResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStatementLinkResponseWithDefaults() *GetStatementLinkResponse {
	this := GetStatementLinkResponse{}
	return &this
}

// GetStatementLinks returns the StatementLinks field value if set, zero value otherwise.
func (o *GetStatementLinkResponse) GetStatementLinks() []StatementLink {
	if o == nil || IsNil(o.StatementLinks) {
		var ret []StatementLink
		return ret
	}
	return o.StatementLinks
}

// GetStatementLinksOk returns a tuple with the StatementLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStatementLinkResponse) GetStatementLinksOk() ([]StatementLink, bool) {
	if o == nil || IsNil(o.StatementLinks) {
		return nil, false
	}
	return o.StatementLinks, true
}

// HasStatementLinks returns a boolean if a field has been set.
func (o *GetStatementLinkResponse) HasStatementLinks() bool {
	if o != nil && !IsNil(o.StatementLinks) {
		return true
	}

	return false
}

// SetStatementLinks gets a reference to the given []StatementLink and assigns it to the StatementLinks field.
func (o *GetStatementLinkResponse) SetStatementLinks(v []StatementLink) {
	o.StatementLinks = v
}

func (o GetStatementLinkResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetStatementLinkResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StatementLinks) {
		toSerialize["statement_links"] = o.StatementLinks
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetStatementLinkResponse) UnmarshalJSON(data []byte) (err error) {
	varGetStatementLinkResponse := _GetStatementLinkResponse{}

	err = json.Unmarshal(data, &varGetStatementLinkResponse)

	if err != nil {
		return err
	}

	*o = GetStatementLinkResponse(varGetStatementLinkResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "statement_links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetStatementLinkResponse struct {
	value *GetStatementLinkResponse
	isSet bool
}

func (v NullableGetStatementLinkResponse) Get() *GetStatementLinkResponse {
	return v.value
}

func (v *NullableGetStatementLinkResponse) Set(val *GetStatementLinkResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStatementLinkResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStatementLinkResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStatementLinkResponse(val *GetStatementLinkResponse) *NullableGetStatementLinkResponse {
	return &NullableGetStatementLinkResponse{value: val, isSet: true}
}

func (v NullableGetStatementLinkResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStatementLinkResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
