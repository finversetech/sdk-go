/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"fmt"
)

// checks if the CreatePaymentLinkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePaymentLinkRequest{}

// CreatePaymentLinkRequest struct for CreatePaymentLinkRequest
type CreatePaymentLinkRequest struct {
	// The amount of the payment. Expressed in currency's smallest unit or “minor unit”, as defined in ISO 4217.
	Amount             *int32                     `json:"amount,omitempty"`
	Currency           string                     `json:"currency"`
	LinkCustomizations *PaymentLinkCustomizations `json:"link_customizations,omitempty"`
	// The payment link mode
	Mode           string              `json:"mode"`
	PaymentDetails *PaymentLinkDetails `json:"payment_details,omitempty"`
	Sender         PaymentLinkSender   `json:"sender"`
	// Unique reference id to identifying the payment to be collected.
	UniqueReferenceId    string                      `json:"unique_reference_id"`
	PaymentSetupOptions  *PaymentSetupOptions        `json:"payment_setup_options,omitempty"`
	Metadata             *map[string]string          `json:"metadata,omitempty"`
	PaymentMetadata      *map[string]string          `json:"payment_metadata,omitempty"`
	IntegrationMetadata  *IntegrationMetadataRequest `json:"integration_metadata,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreatePaymentLinkRequest CreatePaymentLinkRequest

// NewCreatePaymentLinkRequest instantiates a new CreatePaymentLinkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePaymentLinkRequest(currency string, mode string, sender PaymentLinkSender, uniqueReferenceId string) *CreatePaymentLinkRequest {
	this := CreatePaymentLinkRequest{}
	this.Currency = currency
	this.Mode = mode
	this.Sender = sender
	this.UniqueReferenceId = uniqueReferenceId
	return &this
}

// NewCreatePaymentLinkRequestWithDefaults instantiates a new CreatePaymentLinkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePaymentLinkRequestWithDefaults() *CreatePaymentLinkRequest {
	this := CreatePaymentLinkRequest{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CreatePaymentLinkRequest) GetAmount() int32 {
	if o == nil || IsNil(o.Amount) {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentLinkRequest) GetAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CreatePaymentLinkRequest) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *CreatePaymentLinkRequest) SetAmount(v int32) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value
func (o *CreatePaymentLinkRequest) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentLinkRequest) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *CreatePaymentLinkRequest) SetCurrency(v string) {
	o.Currency = v
}

// GetLinkCustomizations returns the LinkCustomizations field value if set, zero value otherwise.
func (o *CreatePaymentLinkRequest) GetLinkCustomizations() PaymentLinkCustomizations {
	if o == nil || IsNil(o.LinkCustomizations) {
		var ret PaymentLinkCustomizations
		return ret
	}
	return *o.LinkCustomizations
}

// GetLinkCustomizationsOk returns a tuple with the LinkCustomizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentLinkRequest) GetLinkCustomizationsOk() (*PaymentLinkCustomizations, bool) {
	if o == nil || IsNil(o.LinkCustomizations) {
		return nil, false
	}
	return o.LinkCustomizations, true
}

// HasLinkCustomizations returns a boolean if a field has been set.
func (o *CreatePaymentLinkRequest) HasLinkCustomizations() bool {
	if o != nil && !IsNil(o.LinkCustomizations) {
		return true
	}

	return false
}

// SetLinkCustomizations gets a reference to the given PaymentLinkCustomizations and assigns it to the LinkCustomizations field.
func (o *CreatePaymentLinkRequest) SetLinkCustomizations(v PaymentLinkCustomizations) {
	o.LinkCustomizations = &v
}

// GetMode returns the Mode field value
func (o *CreatePaymentLinkRequest) GetMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentLinkRequest) GetModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *CreatePaymentLinkRequest) SetMode(v string) {
	o.Mode = v
}

// GetPaymentDetails returns the PaymentDetails field value if set, zero value otherwise.
func (o *CreatePaymentLinkRequest) GetPaymentDetails() PaymentLinkDetails {
	if o == nil || IsNil(o.PaymentDetails) {
		var ret PaymentLinkDetails
		return ret
	}
	return *o.PaymentDetails
}

// GetPaymentDetailsOk returns a tuple with the PaymentDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentLinkRequest) GetPaymentDetailsOk() (*PaymentLinkDetails, bool) {
	if o == nil || IsNil(o.PaymentDetails) {
		return nil, false
	}
	return o.PaymentDetails, true
}

// HasPaymentDetails returns a boolean if a field has been set.
func (o *CreatePaymentLinkRequest) HasPaymentDetails() bool {
	if o != nil && !IsNil(o.PaymentDetails) {
		return true
	}

	return false
}

// SetPaymentDetails gets a reference to the given PaymentLinkDetails and assigns it to the PaymentDetails field.
func (o *CreatePaymentLinkRequest) SetPaymentDetails(v PaymentLinkDetails) {
	o.PaymentDetails = &v
}

// GetSender returns the Sender field value
func (o *CreatePaymentLinkRequest) GetSender() PaymentLinkSender {
	if o == nil {
		var ret PaymentLinkSender
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentLinkRequest) GetSenderOk() (*PaymentLinkSender, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *CreatePaymentLinkRequest) SetSender(v PaymentLinkSender) {
	o.Sender = v
}

// GetUniqueReferenceId returns the UniqueReferenceId field value
func (o *CreatePaymentLinkRequest) GetUniqueReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UniqueReferenceId
}

// GetUniqueReferenceIdOk returns a tuple with the UniqueReferenceId field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentLinkRequest) GetUniqueReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UniqueReferenceId, true
}

// SetUniqueReferenceId sets field value
func (o *CreatePaymentLinkRequest) SetUniqueReferenceId(v string) {
	o.UniqueReferenceId = v
}

// GetPaymentSetupOptions returns the PaymentSetupOptions field value if set, zero value otherwise.
func (o *CreatePaymentLinkRequest) GetPaymentSetupOptions() PaymentSetupOptions {
	if o == nil || IsNil(o.PaymentSetupOptions) {
		var ret PaymentSetupOptions
		return ret
	}
	return *o.PaymentSetupOptions
}

// GetPaymentSetupOptionsOk returns a tuple with the PaymentSetupOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentLinkRequest) GetPaymentSetupOptionsOk() (*PaymentSetupOptions, bool) {
	if o == nil || IsNil(o.PaymentSetupOptions) {
		return nil, false
	}
	return o.PaymentSetupOptions, true
}

// HasPaymentSetupOptions returns a boolean if a field has been set.
func (o *CreatePaymentLinkRequest) HasPaymentSetupOptions() bool {
	if o != nil && !IsNil(o.PaymentSetupOptions) {
		return true
	}

	return false
}

// SetPaymentSetupOptions gets a reference to the given PaymentSetupOptions and assigns it to the PaymentSetupOptions field.
func (o *CreatePaymentLinkRequest) SetPaymentSetupOptions(v PaymentSetupOptions) {
	o.PaymentSetupOptions = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CreatePaymentLinkRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentLinkRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreatePaymentLinkRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CreatePaymentLinkRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetPaymentMetadata returns the PaymentMetadata field value if set, zero value otherwise.
func (o *CreatePaymentLinkRequest) GetPaymentMetadata() map[string]string {
	if o == nil || IsNil(o.PaymentMetadata) {
		var ret map[string]string
		return ret
	}
	return *o.PaymentMetadata
}

// GetPaymentMetadataOk returns a tuple with the PaymentMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentLinkRequest) GetPaymentMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.PaymentMetadata) {
		return nil, false
	}
	return o.PaymentMetadata, true
}

// HasPaymentMetadata returns a boolean if a field has been set.
func (o *CreatePaymentLinkRequest) HasPaymentMetadata() bool {
	if o != nil && !IsNil(o.PaymentMetadata) {
		return true
	}

	return false
}

// SetPaymentMetadata gets a reference to the given map[string]string and assigns it to the PaymentMetadata field.
func (o *CreatePaymentLinkRequest) SetPaymentMetadata(v map[string]string) {
	o.PaymentMetadata = &v
}

// GetIntegrationMetadata returns the IntegrationMetadata field value if set, zero value otherwise.
func (o *CreatePaymentLinkRequest) GetIntegrationMetadata() IntegrationMetadataRequest {
	if o == nil || IsNil(o.IntegrationMetadata) {
		var ret IntegrationMetadataRequest
		return ret
	}
	return *o.IntegrationMetadata
}

// GetIntegrationMetadataOk returns a tuple with the IntegrationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentLinkRequest) GetIntegrationMetadataOk() (*IntegrationMetadataRequest, bool) {
	if o == nil || IsNil(o.IntegrationMetadata) {
		return nil, false
	}
	return o.IntegrationMetadata, true
}

// HasIntegrationMetadata returns a boolean if a field has been set.
func (o *CreatePaymentLinkRequest) HasIntegrationMetadata() bool {
	if o != nil && !IsNil(o.IntegrationMetadata) {
		return true
	}

	return false
}

// SetIntegrationMetadata gets a reference to the given IntegrationMetadataRequest and assigns it to the IntegrationMetadata field.
func (o *CreatePaymentLinkRequest) SetIntegrationMetadata(v IntegrationMetadataRequest) {
	o.IntegrationMetadata = &v
}

func (o CreatePaymentLinkRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePaymentLinkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	toSerialize["currency"] = o.Currency
	if !IsNil(o.LinkCustomizations) {
		toSerialize["link_customizations"] = o.LinkCustomizations
	}
	toSerialize["mode"] = o.Mode
	if !IsNil(o.PaymentDetails) {
		toSerialize["payment_details"] = o.PaymentDetails
	}
	toSerialize["sender"] = o.Sender
	toSerialize["unique_reference_id"] = o.UniqueReferenceId
	if !IsNil(o.PaymentSetupOptions) {
		toSerialize["payment_setup_options"] = o.PaymentSetupOptions
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.PaymentMetadata) {
		toSerialize["payment_metadata"] = o.PaymentMetadata
	}
	if !IsNil(o.IntegrationMetadata) {
		toSerialize["integration_metadata"] = o.IntegrationMetadata
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreatePaymentLinkRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"currency",
		"mode",
		"sender",
		"unique_reference_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreatePaymentLinkRequest := _CreatePaymentLinkRequest{}

	err = json.Unmarshal(data, &varCreatePaymentLinkRequest)

	if err != nil {
		return err
	}

	*o = CreatePaymentLinkRequest(varCreatePaymentLinkRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "amount")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "link_customizations")
		delete(additionalProperties, "mode")
		delete(additionalProperties, "payment_details")
		delete(additionalProperties, "sender")
		delete(additionalProperties, "unique_reference_id")
		delete(additionalProperties, "payment_setup_options")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "payment_metadata")
		delete(additionalProperties, "integration_metadata")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreatePaymentLinkRequest struct {
	value *CreatePaymentLinkRequest
	isSet bool
}

func (v NullableCreatePaymentLinkRequest) Get() *CreatePaymentLinkRequest {
	return v.value
}

func (v *NullableCreatePaymentLinkRequest) Set(val *CreatePaymentLinkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePaymentLinkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePaymentLinkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePaymentLinkRequest(val *CreatePaymentLinkRequest) *NullableCreatePaymentLinkRequest {
	return &NullableCreatePaymentLinkRequest{value: val, isSet: true}
}

func (v NullableCreatePaymentLinkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePaymentLinkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
