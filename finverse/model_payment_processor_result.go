/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the PaymentProcessorResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentProcessorResult{}

// PaymentProcessorResult struct for PaymentProcessorResult
type PaymentProcessorResult struct {
	// Payment processor's decline code (e.g. \"2\")
	DeclineCode *string `json:"decline_code,omitempty"`
	// Payment processor's decline explanation (e.g. \"Blocked card\")
	DeclineReason *string `json:"decline_reason,omitempty"`
	// Payment processor's result code (e.g. \"Authorized\", \"Refused\").
	ResultCode           *string `json:"result_code,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentProcessorResult PaymentProcessorResult

// NewPaymentProcessorResult instantiates a new PaymentProcessorResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentProcessorResult() *PaymentProcessorResult {
	this := PaymentProcessorResult{}
	return &this
}

// NewPaymentProcessorResultWithDefaults instantiates a new PaymentProcessorResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentProcessorResultWithDefaults() *PaymentProcessorResult {
	this := PaymentProcessorResult{}
	return &this
}

// GetDeclineCode returns the DeclineCode field value if set, zero value otherwise.
func (o *PaymentProcessorResult) GetDeclineCode() string {
	if o == nil || IsNil(o.DeclineCode) {
		var ret string
		return ret
	}
	return *o.DeclineCode
}

// GetDeclineCodeOk returns a tuple with the DeclineCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentProcessorResult) GetDeclineCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DeclineCode) {
		return nil, false
	}
	return o.DeclineCode, true
}

// HasDeclineCode returns a boolean if a field has been set.
func (o *PaymentProcessorResult) HasDeclineCode() bool {
	if o != nil && !IsNil(o.DeclineCode) {
		return true
	}

	return false
}

// SetDeclineCode gets a reference to the given string and assigns it to the DeclineCode field.
func (o *PaymentProcessorResult) SetDeclineCode(v string) {
	o.DeclineCode = &v
}

// GetDeclineReason returns the DeclineReason field value if set, zero value otherwise.
func (o *PaymentProcessorResult) GetDeclineReason() string {
	if o == nil || IsNil(o.DeclineReason) {
		var ret string
		return ret
	}
	return *o.DeclineReason
}

// GetDeclineReasonOk returns a tuple with the DeclineReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentProcessorResult) GetDeclineReasonOk() (*string, bool) {
	if o == nil || IsNil(o.DeclineReason) {
		return nil, false
	}
	return o.DeclineReason, true
}

// HasDeclineReason returns a boolean if a field has been set.
func (o *PaymentProcessorResult) HasDeclineReason() bool {
	if o != nil && !IsNil(o.DeclineReason) {
		return true
	}

	return false
}

// SetDeclineReason gets a reference to the given string and assigns it to the DeclineReason field.
func (o *PaymentProcessorResult) SetDeclineReason(v string) {
	o.DeclineReason = &v
}

// GetResultCode returns the ResultCode field value if set, zero value otherwise.
func (o *PaymentProcessorResult) GetResultCode() string {
	if o == nil || IsNil(o.ResultCode) {
		var ret string
		return ret
	}
	return *o.ResultCode
}

// GetResultCodeOk returns a tuple with the ResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentProcessorResult) GetResultCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ResultCode) {
		return nil, false
	}
	return o.ResultCode, true
}

// HasResultCode returns a boolean if a field has been set.
func (o *PaymentProcessorResult) HasResultCode() bool {
	if o != nil && !IsNil(o.ResultCode) {
		return true
	}

	return false
}

// SetResultCode gets a reference to the given string and assigns it to the ResultCode field.
func (o *PaymentProcessorResult) SetResultCode(v string) {
	o.ResultCode = &v
}

func (o PaymentProcessorResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentProcessorResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeclineCode) {
		toSerialize["decline_code"] = o.DeclineCode
	}
	if !IsNil(o.DeclineReason) {
		toSerialize["decline_reason"] = o.DeclineReason
	}
	if !IsNil(o.ResultCode) {
		toSerialize["result_code"] = o.ResultCode
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentProcessorResult) UnmarshalJSON(data []byte) (err error) {
	varPaymentProcessorResult := _PaymentProcessorResult{}

	err = json.Unmarshal(data, &varPaymentProcessorResult)

	if err != nil {
		return err
	}

	*o = PaymentProcessorResult(varPaymentProcessorResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "decline_code")
		delete(additionalProperties, "decline_reason")
		delete(additionalProperties, "result_code")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentProcessorResult struct {
	value *PaymentProcessorResult
	isSet bool
}

func (v NullablePaymentProcessorResult) Get() *PaymentProcessorResult {
	return v.value
}

func (v *NullablePaymentProcessorResult) Set(val *PaymentProcessorResult) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentProcessorResult) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentProcessorResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentProcessorResult(val *PaymentProcessorResult) *NullablePaymentProcessorResult {
	return &NullablePaymentProcessorResult{value: val, isSet: true}
}

func (v NullablePaymentProcessorResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentProcessorResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
