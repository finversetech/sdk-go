/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// FpsQrCodeResponse struct for FpsQrCodeResponse
type FpsQrCodeResponse struct {
	// The FPS QR code in base64
	QrCode string `json:"qr_code"`
}

// NewFpsQrCodeResponse instantiates a new FpsQrCodeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFpsQrCodeResponse(qrCode string) *FpsQrCodeResponse {
	this := FpsQrCodeResponse{}
	this.QrCode = qrCode
	return &this
}

// NewFpsQrCodeResponseWithDefaults instantiates a new FpsQrCodeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFpsQrCodeResponseWithDefaults() *FpsQrCodeResponse {
	this := FpsQrCodeResponse{}
	return &this
}

// GetQrCode returns the QrCode field value
func (o *FpsQrCodeResponse) GetQrCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QrCode
}

// GetQrCodeOk returns a tuple with the QrCode field value
// and a boolean to check if the value has been set.
func (o *FpsQrCodeResponse) GetQrCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QrCode, true
}

// SetQrCode sets field value
func (o *FpsQrCodeResponse) SetQrCode(v string) {
	o.QrCode = v
}

func (o FpsQrCodeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["qr_code"] = o.QrCode
	}
	return json.Marshal(toSerialize)
}

type NullableFpsQrCodeResponse struct {
	value *FpsQrCodeResponse
	isSet bool
}

func (v NullableFpsQrCodeResponse) Get() *FpsQrCodeResponse {
	return v.value
}

func (v *NullableFpsQrCodeResponse) Set(val *FpsQrCodeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFpsQrCodeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFpsQrCodeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFpsQrCodeResponse(val *FpsQrCodeResponse) *NullableFpsQrCodeResponse {
	return &NullableFpsQrCodeResponse{value: val, isSet: true}
}

func (v NullableFpsQrCodeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFpsQrCodeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
