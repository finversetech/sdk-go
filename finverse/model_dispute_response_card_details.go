/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the DisputeResponseCardDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisputeResponseCardDetails{}

// DisputeResponseCardDetails struct for DisputeResponseCardDetails
type DisputeResponseCardDetails struct {
	Brand                *string `json:"brand,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DisputeResponseCardDetails DisputeResponseCardDetails

// NewDisputeResponseCardDetails instantiates a new DisputeResponseCardDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisputeResponseCardDetails() *DisputeResponseCardDetails {
	this := DisputeResponseCardDetails{}
	return &this
}

// NewDisputeResponseCardDetailsWithDefaults instantiates a new DisputeResponseCardDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisputeResponseCardDetailsWithDefaults() *DisputeResponseCardDetails {
	this := DisputeResponseCardDetails{}
	return &this
}

// GetBrand returns the Brand field value if set, zero value otherwise.
func (o *DisputeResponseCardDetails) GetBrand() string {
	if o == nil || IsNil(o.Brand) {
		var ret string
		return ret
	}
	return *o.Brand
}

// GetBrandOk returns a tuple with the Brand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisputeResponseCardDetails) GetBrandOk() (*string, bool) {
	if o == nil || IsNil(o.Brand) {
		return nil, false
	}
	return o.Brand, true
}

// HasBrand returns a boolean if a field has been set.
func (o *DisputeResponseCardDetails) HasBrand() bool {
	if o != nil && !IsNil(o.Brand) {
		return true
	}

	return false
}

// SetBrand gets a reference to the given string and assigns it to the Brand field.
func (o *DisputeResponseCardDetails) SetBrand(v string) {
	o.Brand = &v
}

func (o DisputeResponseCardDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisputeResponseCardDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Brand) {
		toSerialize["brand"] = o.Brand
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DisputeResponseCardDetails) UnmarshalJSON(data []byte) (err error) {
	varDisputeResponseCardDetails := _DisputeResponseCardDetails{}

	err = json.Unmarshal(data, &varDisputeResponseCardDetails)

	if err != nil {
		return err
	}

	*o = DisputeResponseCardDetails(varDisputeResponseCardDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "brand")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDisputeResponseCardDetails struct {
	value *DisputeResponseCardDetails
	isSet bool
}

func (v NullableDisputeResponseCardDetails) Get() *DisputeResponseCardDetails {
	return v.value
}

func (v *NullableDisputeResponseCardDetails) Set(val *DisputeResponseCardDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDisputeResponseCardDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDisputeResponseCardDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisputeResponseCardDetails(val *DisputeResponseCardDetails) *NullableDisputeResponseCardDetails {
	return &NullableDisputeResponseCardDetails{value: val, isSet: true}
}

func (v NullableDisputeResponseCardDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisputeResponseCardDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
