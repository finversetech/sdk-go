/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// PaymentDetailsReferences struct for PaymentDetailsReferences
type PaymentDetailsReferences struct {
	FinverseTransactionReference *string `json:"finverse_transaction_reference,omitempty"`
}

// NewPaymentDetailsReferences instantiates a new PaymentDetailsReferences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentDetailsReferences() *PaymentDetailsReferences {
	this := PaymentDetailsReferences{}
	return &this
}

// NewPaymentDetailsReferencesWithDefaults instantiates a new PaymentDetailsReferences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentDetailsReferencesWithDefaults() *PaymentDetailsReferences {
	this := PaymentDetailsReferences{}
	return &this
}

// GetFinverseTransactionReference returns the FinverseTransactionReference field value if set, zero value otherwise.
func (o *PaymentDetailsReferences) GetFinverseTransactionReference() string {
	if o == nil || o.FinverseTransactionReference == nil {
		var ret string
		return ret
	}
	return *o.FinverseTransactionReference
}

// GetFinverseTransactionReferenceOk returns a tuple with the FinverseTransactionReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetailsReferences) GetFinverseTransactionReferenceOk() (*string, bool) {
	if o == nil || o.FinverseTransactionReference == nil {
		return nil, false
	}
	return o.FinverseTransactionReference, true
}

// HasFinverseTransactionReference returns a boolean if a field has been set.
func (o *PaymentDetailsReferences) HasFinverseTransactionReference() bool {
	if o != nil && o.FinverseTransactionReference != nil {
		return true
	}

	return false
}

// SetFinverseTransactionReference gets a reference to the given string and assigns it to the FinverseTransactionReference field.
func (o *PaymentDetailsReferences) SetFinverseTransactionReference(v string) {
	o.FinverseTransactionReference = &v
}

func (o PaymentDetailsReferences) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FinverseTransactionReference != nil {
		toSerialize["finverse_transaction_reference"] = o.FinverseTransactionReference
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentDetailsReferences struct {
	value *PaymentDetailsReferences
	isSet bool
}

func (v NullablePaymentDetailsReferences) Get() *PaymentDetailsReferences {
	return v.value
}

func (v *NullablePaymentDetailsReferences) Set(val *PaymentDetailsReferences) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentDetailsReferences) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentDetailsReferences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentDetailsReferences(val *PaymentDetailsReferences) *NullablePaymentDetailsReferences {
	return &NullablePaymentDetailsReferences{value: val, isSet: true}
}

func (v NullablePaymentDetailsReferences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentDetailsReferences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
