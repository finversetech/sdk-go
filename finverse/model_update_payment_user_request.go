/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"time"
)

// checks if the UpdatePaymentUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePaymentUserRequest{}

// UpdatePaymentUserRequest struct for UpdatePaymentUserRequest
type UpdatePaymentUserRequest struct {
	AutopayConsent       NullableBool      `json:"autopay_consent,omitempty"`
	Email                NullableString    `json:"email,omitempty"`
	Metadata             map[string]string `json:"metadata,omitempty"`
	Name                 NullableString    `json:"name,omitempty"`
	NextBillUpdate       NullableTime      `json:"next_bill_update,omitempty"`
	UserType             NullableString    `json:"user_type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdatePaymentUserRequest UpdatePaymentUserRequest

// NewUpdatePaymentUserRequest instantiates a new UpdatePaymentUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePaymentUserRequest() *UpdatePaymentUserRequest {
	this := UpdatePaymentUserRequest{}
	return &this
}

// NewUpdatePaymentUserRequestWithDefaults instantiates a new UpdatePaymentUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePaymentUserRequestWithDefaults() *UpdatePaymentUserRequest {
	this := UpdatePaymentUserRequest{}
	return &this
}

// GetAutopayConsent returns the AutopayConsent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePaymentUserRequest) GetAutopayConsent() bool {
	if o == nil || IsNil(o.AutopayConsent.Get()) {
		var ret bool
		return ret
	}
	return *o.AutopayConsent.Get()
}

// GetAutopayConsentOk returns a tuple with the AutopayConsent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePaymentUserRequest) GetAutopayConsentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutopayConsent.Get(), o.AutopayConsent.IsSet()
}

// HasAutopayConsent returns a boolean if a field has been set.
func (o *UpdatePaymentUserRequest) HasAutopayConsent() bool {
	if o != nil && o.AutopayConsent.IsSet() {
		return true
	}

	return false
}

// SetAutopayConsent gets a reference to the given NullableBool and assigns it to the AutopayConsent field.
func (o *UpdatePaymentUserRequest) SetAutopayConsent(v bool) {
	o.AutopayConsent.Set(&v)
}

// SetAutopayConsentNil sets the value for AutopayConsent to be an explicit nil
func (o *UpdatePaymentUserRequest) SetAutopayConsentNil() {
	o.AutopayConsent.Set(nil)
}

// UnsetAutopayConsent ensures that no value is present for AutopayConsent, not even an explicit nil
func (o *UpdatePaymentUserRequest) UnsetAutopayConsent() {
	o.AutopayConsent.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePaymentUserRequest) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePaymentUserRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *UpdatePaymentUserRequest) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *UpdatePaymentUserRequest) SetEmail(v string) {
	o.Email.Set(&v)
}

// SetEmailNil sets the value for Email to be an explicit nil
func (o *UpdatePaymentUserRequest) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *UpdatePaymentUserRequest) UnsetEmail() {
	o.Email.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePaymentUserRequest) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePaymentUserRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UpdatePaymentUserRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *UpdatePaymentUserRequest) SetMetadata(v map[string]string) {
	o.Metadata = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePaymentUserRequest) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePaymentUserRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *UpdatePaymentUserRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *UpdatePaymentUserRequest) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *UpdatePaymentUserRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *UpdatePaymentUserRequest) UnsetName() {
	o.Name.Unset()
}

// GetNextBillUpdate returns the NextBillUpdate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePaymentUserRequest) GetNextBillUpdate() time.Time {
	if o == nil || IsNil(o.NextBillUpdate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.NextBillUpdate.Get()
}

// GetNextBillUpdateOk returns a tuple with the NextBillUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePaymentUserRequest) GetNextBillUpdateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextBillUpdate.Get(), o.NextBillUpdate.IsSet()
}

// HasNextBillUpdate returns a boolean if a field has been set.
func (o *UpdatePaymentUserRequest) HasNextBillUpdate() bool {
	if o != nil && o.NextBillUpdate.IsSet() {
		return true
	}

	return false
}

// SetNextBillUpdate gets a reference to the given NullableTime and assigns it to the NextBillUpdate field.
func (o *UpdatePaymentUserRequest) SetNextBillUpdate(v time.Time) {
	o.NextBillUpdate.Set(&v)
}

// SetNextBillUpdateNil sets the value for NextBillUpdate to be an explicit nil
func (o *UpdatePaymentUserRequest) SetNextBillUpdateNil() {
	o.NextBillUpdate.Set(nil)
}

// UnsetNextBillUpdate ensures that no value is present for NextBillUpdate, not even an explicit nil
func (o *UpdatePaymentUserRequest) UnsetNextBillUpdate() {
	o.NextBillUpdate.Unset()
}

// GetUserType returns the UserType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePaymentUserRequest) GetUserType() string {
	if o == nil || IsNil(o.UserType.Get()) {
		var ret string
		return ret
	}
	return *o.UserType.Get()
}

// GetUserTypeOk returns a tuple with the UserType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePaymentUserRequest) GetUserTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserType.Get(), o.UserType.IsSet()
}

// HasUserType returns a boolean if a field has been set.
func (o *UpdatePaymentUserRequest) HasUserType() bool {
	if o != nil && o.UserType.IsSet() {
		return true
	}

	return false
}

// SetUserType gets a reference to the given NullableString and assigns it to the UserType field.
func (o *UpdatePaymentUserRequest) SetUserType(v string) {
	o.UserType.Set(&v)
}

// SetUserTypeNil sets the value for UserType to be an explicit nil
func (o *UpdatePaymentUserRequest) SetUserTypeNil() {
	o.UserType.Set(nil)
}

// UnsetUserType ensures that no value is present for UserType, not even an explicit nil
func (o *UpdatePaymentUserRequest) UnsetUserType() {
	o.UserType.Unset()
}

func (o UpdatePaymentUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePaymentUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AutopayConsent.IsSet() {
		toSerialize["autopay_consent"] = o.AutopayConsent.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.NextBillUpdate.IsSet() {
		toSerialize["next_bill_update"] = o.NextBillUpdate.Get()
	}
	if o.UserType.IsSet() {
		toSerialize["user_type"] = o.UserType.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdatePaymentUserRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdatePaymentUserRequest := _UpdatePaymentUserRequest{}

	err = json.Unmarshal(data, &varUpdatePaymentUserRequest)

	if err != nil {
		return err
	}

	*o = UpdatePaymentUserRequest(varUpdatePaymentUserRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "autopay_consent")
		delete(additionalProperties, "email")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "name")
		delete(additionalProperties, "next_bill_update")
		delete(additionalProperties, "user_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdatePaymentUserRequest struct {
	value *UpdatePaymentUserRequest
	isSet bool
}

func (v NullableUpdatePaymentUserRequest) Get() *UpdatePaymentUserRequest {
	return v.value
}

func (v *NullableUpdatePaymentUserRequest) Set(val *UpdatePaymentUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePaymentUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePaymentUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePaymentUserRequest(val *UpdatePaymentUserRequest) *NullableUpdatePaymentUserRequest {
	return &NullableUpdatePaymentUserRequest{value: val, isSet: true}
}

func (v NullableUpdatePaymentUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePaymentUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
