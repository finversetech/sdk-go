/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// PaymentInstruction struct for PaymentInstruction
type PaymentInstruction struct {
	// What type of payment is being created
	PaymentType string `json:"payment_type"`
	// The customer provided userId that needs to match the one passed when generating link token
	UserId string `json:"user_id"`
	// The recipient name
	RecipientName *string `json:"recipient_name,omitempty"`
	// The recipient account Id
	RecipientAccountId *string `json:"recipient_account_id,omitempty"`
	// The sender name
	SenderName *string `json:"sender_name,omitempty"`
	// The sender account Id
	SenderAccountId *string `json:"sender_account_id,omitempty"`
	// When the payment should start
	StartDate NullableString `json:"start_date,omitempty"`
	// When the payment should stop
	EndDate NullableString `json:"end_date,omitempty"`
	// The currency for the payment
	Currency *string `json:"currency,omitempty"`
	// The payment amount
	Amount *float32 `json:"amount,omitempty"`
	// How often the payment is executed
	Frequency *string `json:"frequency,omitempty"`
	// Related remarks
	Remarks *string `json:"remarks,omitempty"`
	// A customer provided key to ensure ideompotency
	IdempotenceKey *string `json:"idempotence_key,omitempty"`
	// Status of the payment
	PaymentStatus *string `json:"payment_status,omitempty"`
}

// NewPaymentInstruction instantiates a new PaymentInstruction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentInstruction(paymentType string, userId string) *PaymentInstruction {
	this := PaymentInstruction{}
	this.PaymentType = paymentType
	this.UserId = userId
	return &this
}

// NewPaymentInstructionWithDefaults instantiates a new PaymentInstruction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentInstructionWithDefaults() *PaymentInstruction {
	this := PaymentInstruction{}
	return &this
}

// GetPaymentType returns the PaymentType field value
func (o *PaymentInstruction) GetPaymentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentType
}

// GetPaymentTypeOk returns a tuple with the PaymentType field value
// and a boolean to check if the value has been set.
func (o *PaymentInstruction) GetPaymentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentType, true
}

// SetPaymentType sets field value
func (o *PaymentInstruction) SetPaymentType(v string) {
	o.PaymentType = v
}

// GetUserId returns the UserId field value
func (o *PaymentInstruction) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *PaymentInstruction) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *PaymentInstruction) SetUserId(v string) {
	o.UserId = v
}

// GetRecipientName returns the RecipientName field value if set, zero value otherwise.
func (o *PaymentInstruction) GetRecipientName() string {
	if o == nil || o.RecipientName == nil {
		var ret string
		return ret
	}
	return *o.RecipientName
}

// GetRecipientNameOk returns a tuple with the RecipientName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInstruction) GetRecipientNameOk() (*string, bool) {
	if o == nil || o.RecipientName == nil {
		return nil, false
	}
	return o.RecipientName, true
}

// HasRecipientName returns a boolean if a field has been set.
func (o *PaymentInstruction) HasRecipientName() bool {
	if o != nil && o.RecipientName != nil {
		return true
	}

	return false
}

// SetRecipientName gets a reference to the given string and assigns it to the RecipientName field.
func (o *PaymentInstruction) SetRecipientName(v string) {
	o.RecipientName = &v
}

// GetRecipientAccountId returns the RecipientAccountId field value if set, zero value otherwise.
func (o *PaymentInstruction) GetRecipientAccountId() string {
	if o == nil || o.RecipientAccountId == nil {
		var ret string
		return ret
	}
	return *o.RecipientAccountId
}

// GetRecipientAccountIdOk returns a tuple with the RecipientAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInstruction) GetRecipientAccountIdOk() (*string, bool) {
	if o == nil || o.RecipientAccountId == nil {
		return nil, false
	}
	return o.RecipientAccountId, true
}

// HasRecipientAccountId returns a boolean if a field has been set.
func (o *PaymentInstruction) HasRecipientAccountId() bool {
	if o != nil && o.RecipientAccountId != nil {
		return true
	}

	return false
}

// SetRecipientAccountId gets a reference to the given string and assigns it to the RecipientAccountId field.
func (o *PaymentInstruction) SetRecipientAccountId(v string) {
	o.RecipientAccountId = &v
}

// GetSenderName returns the SenderName field value if set, zero value otherwise.
func (o *PaymentInstruction) GetSenderName() string {
	if o == nil || o.SenderName == nil {
		var ret string
		return ret
	}
	return *o.SenderName
}

// GetSenderNameOk returns a tuple with the SenderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInstruction) GetSenderNameOk() (*string, bool) {
	if o == nil || o.SenderName == nil {
		return nil, false
	}
	return o.SenderName, true
}

// HasSenderName returns a boolean if a field has been set.
func (o *PaymentInstruction) HasSenderName() bool {
	if o != nil && o.SenderName != nil {
		return true
	}

	return false
}

// SetSenderName gets a reference to the given string and assigns it to the SenderName field.
func (o *PaymentInstruction) SetSenderName(v string) {
	o.SenderName = &v
}

// GetSenderAccountId returns the SenderAccountId field value if set, zero value otherwise.
func (o *PaymentInstruction) GetSenderAccountId() string {
	if o == nil || o.SenderAccountId == nil {
		var ret string
		return ret
	}
	return *o.SenderAccountId
}

// GetSenderAccountIdOk returns a tuple with the SenderAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInstruction) GetSenderAccountIdOk() (*string, bool) {
	if o == nil || o.SenderAccountId == nil {
		return nil, false
	}
	return o.SenderAccountId, true
}

// HasSenderAccountId returns a boolean if a field has been set.
func (o *PaymentInstruction) HasSenderAccountId() bool {
	if o != nil && o.SenderAccountId != nil {
		return true
	}

	return false
}

// SetSenderAccountId gets a reference to the given string and assigns it to the SenderAccountId field.
func (o *PaymentInstruction) SetSenderAccountId(v string) {
	o.SenderAccountId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentInstruction) GetStartDate() string {
	if o == nil || o.StartDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentInstruction) GetStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *PaymentInstruction) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableString and assigns it to the StartDate field.
func (o *PaymentInstruction) SetStartDate(v string) {
	o.StartDate.Set(&v)
}

// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *PaymentInstruction) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *PaymentInstruction) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentInstruction) GetEndDate() string {
	if o == nil || o.EndDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentInstruction) GetEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// HasEndDate returns a boolean if a field has been set.
func (o *PaymentInstruction) HasEndDate() bool {
	if o != nil && o.EndDate.IsSet() {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given NullableString and assigns it to the EndDate field.
func (o *PaymentInstruction) SetEndDate(v string) {
	o.EndDate.Set(&v)
}

// SetEndDateNil sets the value for EndDate to be an explicit nil
func (o *PaymentInstruction) SetEndDateNil() {
	o.EndDate.Set(nil)
}

// UnsetEndDate ensures that no value is present for EndDate, not even an explicit nil
func (o *PaymentInstruction) UnsetEndDate() {
	o.EndDate.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PaymentInstruction) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInstruction) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PaymentInstruction) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *PaymentInstruction) SetCurrency(v string) {
	o.Currency = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PaymentInstruction) GetAmount() float32 {
	if o == nil || o.Amount == nil {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInstruction) GetAmountOk() (*float32, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PaymentInstruction) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *PaymentInstruction) SetAmount(v float32) {
	o.Amount = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *PaymentInstruction) GetFrequency() string {
	if o == nil || o.Frequency == nil {
		var ret string
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInstruction) GetFrequencyOk() (*string, bool) {
	if o == nil || o.Frequency == nil {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *PaymentInstruction) HasFrequency() bool {
	if o != nil && o.Frequency != nil {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given string and assigns it to the Frequency field.
func (o *PaymentInstruction) SetFrequency(v string) {
	o.Frequency = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *PaymentInstruction) GetRemarks() string {
	if o == nil || o.Remarks == nil {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInstruction) GetRemarksOk() (*string, bool) {
	if o == nil || o.Remarks == nil {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *PaymentInstruction) HasRemarks() bool {
	if o != nil && o.Remarks != nil {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *PaymentInstruction) SetRemarks(v string) {
	o.Remarks = &v
}

// GetIdempotenceKey returns the IdempotenceKey field value if set, zero value otherwise.
func (o *PaymentInstruction) GetIdempotenceKey() string {
	if o == nil || o.IdempotenceKey == nil {
		var ret string
		return ret
	}
	return *o.IdempotenceKey
}

// GetIdempotenceKeyOk returns a tuple with the IdempotenceKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInstruction) GetIdempotenceKeyOk() (*string, bool) {
	if o == nil || o.IdempotenceKey == nil {
		return nil, false
	}
	return o.IdempotenceKey, true
}

// HasIdempotenceKey returns a boolean if a field has been set.
func (o *PaymentInstruction) HasIdempotenceKey() bool {
	if o != nil && o.IdempotenceKey != nil {
		return true
	}

	return false
}

// SetIdempotenceKey gets a reference to the given string and assigns it to the IdempotenceKey field.
func (o *PaymentInstruction) SetIdempotenceKey(v string) {
	o.IdempotenceKey = &v
}

// GetPaymentStatus returns the PaymentStatus field value if set, zero value otherwise.
func (o *PaymentInstruction) GetPaymentStatus() string {
	if o == nil || o.PaymentStatus == nil {
		var ret string
		return ret
	}
	return *o.PaymentStatus
}

// GetPaymentStatusOk returns a tuple with the PaymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentInstruction) GetPaymentStatusOk() (*string, bool) {
	if o == nil || o.PaymentStatus == nil {
		return nil, false
	}
	return o.PaymentStatus, true
}

// HasPaymentStatus returns a boolean if a field has been set.
func (o *PaymentInstruction) HasPaymentStatus() bool {
	if o != nil && o.PaymentStatus != nil {
		return true
	}

	return false
}

// SetPaymentStatus gets a reference to the given string and assigns it to the PaymentStatus field.
func (o *PaymentInstruction) SetPaymentStatus(v string) {
	o.PaymentStatus = &v
}

func (o PaymentInstruction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["payment_type"] = o.PaymentType
	}
	if true {
		toSerialize["user_id"] = o.UserId
	}
	if o.RecipientName != nil {
		toSerialize["recipient_name"] = o.RecipientName
	}
	if o.RecipientAccountId != nil {
		toSerialize["recipient_account_id"] = o.RecipientAccountId
	}
	if o.SenderName != nil {
		toSerialize["sender_name"] = o.SenderName
	}
	if o.SenderAccountId != nil {
		toSerialize["sender_account_id"] = o.SenderAccountId
	}
	if o.StartDate.IsSet() {
		toSerialize["start_date"] = o.StartDate.Get()
	}
	if o.EndDate.IsSet() {
		toSerialize["end_date"] = o.EndDate.Get()
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Frequency != nil {
		toSerialize["frequency"] = o.Frequency
	}
	if o.Remarks != nil {
		toSerialize["remarks"] = o.Remarks
	}
	if o.IdempotenceKey != nil {
		toSerialize["idempotence_key"] = o.IdempotenceKey
	}
	if o.PaymentStatus != nil {
		toSerialize["payment_status"] = o.PaymentStatus
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentInstruction struct {
	value *PaymentInstruction
	isSet bool
}

func (v NullablePaymentInstruction) Get() *PaymentInstruction {
	return v.value
}

func (v *NullablePaymentInstruction) Set(val *PaymentInstruction) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentInstruction) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentInstruction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentInstruction(val *PaymentInstruction) *NullablePaymentInstruction {
	return &NullablePaymentInstruction{value: val, isSet: true}
}

func (v NullablePaymentInstruction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentInstruction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
