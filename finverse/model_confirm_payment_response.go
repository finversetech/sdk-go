/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// ConfirmPaymentResponse struct for ConfirmPaymentResponse
type ConfirmPaymentResponse struct {
	Success bool `json:"success"`
}

// NewConfirmPaymentResponse instantiates a new ConfirmPaymentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfirmPaymentResponse(success bool) *ConfirmPaymentResponse {
	this := ConfirmPaymentResponse{}
	this.Success = success
	return &this
}

// NewConfirmPaymentResponseWithDefaults instantiates a new ConfirmPaymentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfirmPaymentResponseWithDefaults() *ConfirmPaymentResponse {
	this := ConfirmPaymentResponse{}
	return &this
}

// GetSuccess returns the Success field value
func (o *ConfirmPaymentResponse) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *ConfirmPaymentResponse) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *ConfirmPaymentResponse) SetSuccess(v bool) {
	o.Success = v
}

func (o ConfirmPaymentResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullableConfirmPaymentResponse struct {
	value *ConfirmPaymentResponse
	isSet bool
}

func (v NullableConfirmPaymentResponse) Get() *ConfirmPaymentResponse {
	return v.value
}

func (v *NullableConfirmPaymentResponse) Set(val *ConfirmPaymentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableConfirmPaymentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableConfirmPaymentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfirmPaymentResponse(val *ConfirmPaymentResponse) *NullableConfirmPaymentResponse {
	return &NullableConfirmPaymentResponse{value: val, isSet: true}
}

func (v NullableConfirmPaymentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfirmPaymentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
