/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"time"
)

// PayoutInstructionResponse struct for PayoutInstructionResponse
type PayoutInstructionResponse struct {
	// Amount to be paid, in currency's smallest unit or “minor unit”, as defined in ISO 4217. For example, HKD 100.01 is represented as amount = 10001 (minor unit = cents). For currencies without minor units (e.g. VND, JPY), the amount is represented as is, without modification. For example, VND 15101 is represented as amount = 15101.
	Amount *int32 `json:"amount,omitempty"`
	// The currency code as defined in ISO 4217.
	Currency       *string                `json:"currency,omitempty"`
	PaymentDetails *PayoutDetailsResponse `json:"payment_details,omitempty"`
	Recipient      *PayoutRecipient       `json:"recipient,omitempty"`
	Sender         *PayoutSender          `json:"sender,omitempty"`
	// Finverse Payout Instruction ID
	PayoutInstructionId *string `json:"payout_instruction_id,omitempty"`
	// Possible values - CREATED, PROCESSING, EXECUTED, CANCELLED, FAILED.
	Status *string `json:"status,omitempty"`
	// Timestamp of when the recipient was created in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Timestamp of when the recipient was last updated in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
	UpdatedAt *time.Time      `json:"updated_at,omitempty"`
	Error     *FvErrorModelV2 `json:"error,omitempty"`
}

// NewPayoutInstructionResponse instantiates a new PayoutInstructionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayoutInstructionResponse() *PayoutInstructionResponse {
	this := PayoutInstructionResponse{}
	return &this
}

// NewPayoutInstructionResponseWithDefaults instantiates a new PayoutInstructionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayoutInstructionResponseWithDefaults() *PayoutInstructionResponse {
	this := PayoutInstructionResponse{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PayoutInstructionResponse) GetAmount() int32 {
	if o == nil || o.Amount == nil {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetAmountOk() (*int32, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PayoutInstructionResponse) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *PayoutInstructionResponse) SetAmount(v int32) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PayoutInstructionResponse) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PayoutInstructionResponse) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *PayoutInstructionResponse) SetCurrency(v string) {
	o.Currency = &v
}

// GetPaymentDetails returns the PaymentDetails field value if set, zero value otherwise.
func (o *PayoutInstructionResponse) GetPaymentDetails() PayoutDetailsResponse {
	if o == nil || o.PaymentDetails == nil {
		var ret PayoutDetailsResponse
		return ret
	}
	return *o.PaymentDetails
}

// GetPaymentDetailsOk returns a tuple with the PaymentDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetPaymentDetailsOk() (*PayoutDetailsResponse, bool) {
	if o == nil || o.PaymentDetails == nil {
		return nil, false
	}
	return o.PaymentDetails, true
}

// HasPaymentDetails returns a boolean if a field has been set.
func (o *PayoutInstructionResponse) HasPaymentDetails() bool {
	if o != nil && o.PaymentDetails != nil {
		return true
	}

	return false
}

// SetPaymentDetails gets a reference to the given PayoutDetailsResponse and assigns it to the PaymentDetails field.
func (o *PayoutInstructionResponse) SetPaymentDetails(v PayoutDetailsResponse) {
	o.PaymentDetails = &v
}

// GetRecipient returns the Recipient field value if set, zero value otherwise.
func (o *PayoutInstructionResponse) GetRecipient() PayoutRecipient {
	if o == nil || o.Recipient == nil {
		var ret PayoutRecipient
		return ret
	}
	return *o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetRecipientOk() (*PayoutRecipient, bool) {
	if o == nil || o.Recipient == nil {
		return nil, false
	}
	return o.Recipient, true
}

// HasRecipient returns a boolean if a field has been set.
func (o *PayoutInstructionResponse) HasRecipient() bool {
	if o != nil && o.Recipient != nil {
		return true
	}

	return false
}

// SetRecipient gets a reference to the given PayoutRecipient and assigns it to the Recipient field.
func (o *PayoutInstructionResponse) SetRecipient(v PayoutRecipient) {
	o.Recipient = &v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *PayoutInstructionResponse) GetSender() PayoutSender {
	if o == nil || o.Sender == nil {
		var ret PayoutSender
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetSenderOk() (*PayoutSender, bool) {
	if o == nil || o.Sender == nil {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *PayoutInstructionResponse) HasSender() bool {
	if o != nil && o.Sender != nil {
		return true
	}

	return false
}

// SetSender gets a reference to the given PayoutSender and assigns it to the Sender field.
func (o *PayoutInstructionResponse) SetSender(v PayoutSender) {
	o.Sender = &v
}

// GetPayoutInstructionId returns the PayoutInstructionId field value if set, zero value otherwise.
func (o *PayoutInstructionResponse) GetPayoutInstructionId() string {
	if o == nil || o.PayoutInstructionId == nil {
		var ret string
		return ret
	}
	return *o.PayoutInstructionId
}

// GetPayoutInstructionIdOk returns a tuple with the PayoutInstructionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetPayoutInstructionIdOk() (*string, bool) {
	if o == nil || o.PayoutInstructionId == nil {
		return nil, false
	}
	return o.PayoutInstructionId, true
}

// HasPayoutInstructionId returns a boolean if a field has been set.
func (o *PayoutInstructionResponse) HasPayoutInstructionId() bool {
	if o != nil && o.PayoutInstructionId != nil {
		return true
	}

	return false
}

// SetPayoutInstructionId gets a reference to the given string and assigns it to the PayoutInstructionId field.
func (o *PayoutInstructionResponse) SetPayoutInstructionId(v string) {
	o.PayoutInstructionId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PayoutInstructionResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PayoutInstructionResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PayoutInstructionResponse) SetStatus(v string) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PayoutInstructionResponse) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PayoutInstructionResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PayoutInstructionResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PayoutInstructionResponse) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PayoutInstructionResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PayoutInstructionResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *PayoutInstructionResponse) GetError() FvErrorModelV2 {
	if o == nil || o.Error == nil {
		var ret FvErrorModelV2
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetErrorOk() (*FvErrorModelV2, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *PayoutInstructionResponse) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given FvErrorModelV2 and assigns it to the Error field.
func (o *PayoutInstructionResponse) SetError(v FvErrorModelV2) {
	o.Error = &v
}

func (o PayoutInstructionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.PaymentDetails != nil {
		toSerialize["payment_details"] = o.PaymentDetails
	}
	if o.Recipient != nil {
		toSerialize["recipient"] = o.Recipient
	}
	if o.Sender != nil {
		toSerialize["sender"] = o.Sender
	}
	if o.PayoutInstructionId != nil {
		toSerialize["payout_instruction_id"] = o.PayoutInstructionId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullablePayoutInstructionResponse struct {
	value *PayoutInstructionResponse
	isSet bool
}

func (v NullablePayoutInstructionResponse) Get() *PayoutInstructionResponse {
	return v.value
}

func (v *NullablePayoutInstructionResponse) Set(val *PayoutInstructionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePayoutInstructionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePayoutInstructionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayoutInstructionResponse(val *PayoutInstructionResponse) *NullablePayoutInstructionResponse {
	return &NullablePayoutInstructionResponse{value: val, isSet: true}
}

func (v NullablePayoutInstructionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayoutInstructionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
