/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// PayoutInstructionResponse struct for PayoutInstructionResponse
type PayoutInstructionResponse struct {
	// Finverse Payout Instruction ID
	PayoutInstructionId string `json:"payout_instruction_id"`
	// Possible values - CREATED, PROCESSING, EXECUTED, CANCELLED, FAILED.
	Status string        `json:"status"`
	Error  *FvErrorModel `json:"error,omitempty"`
}

// NewPayoutInstructionResponse instantiates a new PayoutInstructionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayoutInstructionResponse(payoutInstructionId string, status string) *PayoutInstructionResponse {
	this := PayoutInstructionResponse{}
	this.PayoutInstructionId = payoutInstructionId
	this.Status = status
	return &this
}

// NewPayoutInstructionResponseWithDefaults instantiates a new PayoutInstructionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayoutInstructionResponseWithDefaults() *PayoutInstructionResponse {
	this := PayoutInstructionResponse{}
	return &this
}

// GetPayoutInstructionId returns the PayoutInstructionId field value
func (o *PayoutInstructionResponse) GetPayoutInstructionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayoutInstructionId
}

// GetPayoutInstructionIdOk returns a tuple with the PayoutInstructionId field value
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetPayoutInstructionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayoutInstructionId, true
}

// SetPayoutInstructionId sets field value
func (o *PayoutInstructionResponse) SetPayoutInstructionId(v string) {
	o.PayoutInstructionId = v
}

// GetStatus returns the Status field value
func (o *PayoutInstructionResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PayoutInstructionResponse) SetStatus(v string) {
	o.Status = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *PayoutInstructionResponse) GetError() FvErrorModel {
	if o == nil || o.Error == nil {
		var ret FvErrorModel
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutInstructionResponse) GetErrorOk() (*FvErrorModel, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *PayoutInstructionResponse) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given FvErrorModel and assigns it to the Error field.
func (o *PayoutInstructionResponse) SetError(v FvErrorModel) {
	o.Error = &v
}

func (o PayoutInstructionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["payout_instruction_id"] = o.PayoutInstructionId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullablePayoutInstructionResponse struct {
	value *PayoutInstructionResponse
	isSet bool
}

func (v NullablePayoutInstructionResponse) Get() *PayoutInstructionResponse {
	return v.value
}

func (v *NullablePayoutInstructionResponse) Set(val *PayoutInstructionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePayoutInstructionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePayoutInstructionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayoutInstructionResponse(val *PayoutInstructionResponse) *NullablePayoutInstructionResponse {
	return &NullablePayoutInstructionResponse{value: val, isSet: true}
}

func (v NullablePayoutInstructionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayoutInstructionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
