/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the LoginIdentity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoginIdentity{}

// LoginIdentity struct for LoginIdentity
type LoginIdentity struct {
	LoginIdentityId       *string                             `json:"login_identity_id,omitempty"`
	CustomerAppId         string                              `json:"customer_app_id"`
	UserId                string                              `json:"user_id"`
	LoginMethodsAvailable *LoginIdentityLoginMethodsAvailable `json:"login_methods_available,omitempty"`
	PermissionsGrantDate  *time.Time                          `json:"permissions_grant_date,omitempty"`
	PermissionsExpiryDate *time.Time                          `json:"permissions_expiry_date,omitempty"`
	Permissions           []string                            `json:"permissions,omitempty"`
	BillingDetails        *LoginIdentityBillingDetails        `json:"billing_details,omitempty"`
	Status                *string                             `json:"status,omitempty"`
	StatusDetails         *LoginIdentityStatusDetails         `json:"status_details,omitempty"`
	ProductStatus         *AllProductStatus                   `json:"product_status,omitempty"`
	AuthenticationStatus  *ProductStatus                      `json:"authentication_status,omitempty"`
	Error                 *LoginIdentityError                 `json:"error,omitempty"`
	LastSuccess           *time.Time                          `json:"last_success,omitempty"`
	FirstSuccess          *time.Time                          `json:"first_success,omitempty"`
	Webhook               *string                             `json:"webhook,omitempty"`
	SessionStatus         *string                             `json:"session_status,omitempty"`
	InstitutionId         string                              `json:"institution_id"`
	CreatedAt             *time.Time                          `json:"created_at,omitempty"`
	UpdatedAt             *time.Time                          `json:"updated_at,omitempty"`
	// a login attempt id which is unique per login_identity
	LinkingAttemptId *string `json:"linking_attempt_id,omitempty"`
	// a successful login attempt id which is unique per login_identity
	AuthenticationId     *string      `json:"authentication_id,omitempty"`
	LastSessionId        *string      `json:"last_session_id,omitempty"`
	Refresh              *RefreshData `json:"refresh,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LoginIdentity LoginIdentity

// NewLoginIdentity instantiates a new LoginIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginIdentity(customerAppId string, userId string, institutionId string) *LoginIdentity {
	this := LoginIdentity{}
	this.CustomerAppId = customerAppId
	this.UserId = userId
	this.InstitutionId = institutionId
	return &this
}

// NewLoginIdentityWithDefaults instantiates a new LoginIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginIdentityWithDefaults() *LoginIdentity {
	this := LoginIdentity{}
	return &this
}

// GetLoginIdentityId returns the LoginIdentityId field value if set, zero value otherwise.
func (o *LoginIdentity) GetLoginIdentityId() string {
	if o == nil || IsNil(o.LoginIdentityId) {
		var ret string
		return ret
	}
	return *o.LoginIdentityId
}

// GetLoginIdentityIdOk returns a tuple with the LoginIdentityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetLoginIdentityIdOk() (*string, bool) {
	if o == nil || IsNil(o.LoginIdentityId) {
		return nil, false
	}
	return o.LoginIdentityId, true
}

// HasLoginIdentityId returns a boolean if a field has been set.
func (o *LoginIdentity) HasLoginIdentityId() bool {
	if o != nil && !IsNil(o.LoginIdentityId) {
		return true
	}

	return false
}

// SetLoginIdentityId gets a reference to the given string and assigns it to the LoginIdentityId field.
func (o *LoginIdentity) SetLoginIdentityId(v string) {
	o.LoginIdentityId = &v
}

// GetCustomerAppId returns the CustomerAppId field value
func (o *LoginIdentity) GetCustomerAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerAppId
}

// GetCustomerAppIdOk returns a tuple with the CustomerAppId field value
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetCustomerAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerAppId, true
}

// SetCustomerAppId sets field value
func (o *LoginIdentity) SetCustomerAppId(v string) {
	o.CustomerAppId = v
}

// GetUserId returns the UserId field value
func (o *LoginIdentity) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *LoginIdentity) SetUserId(v string) {
	o.UserId = v
}

// GetLoginMethodsAvailable returns the LoginMethodsAvailable field value if set, zero value otherwise.
func (o *LoginIdentity) GetLoginMethodsAvailable() LoginIdentityLoginMethodsAvailable {
	if o == nil || IsNil(o.LoginMethodsAvailable) {
		var ret LoginIdentityLoginMethodsAvailable
		return ret
	}
	return *o.LoginMethodsAvailable
}

// GetLoginMethodsAvailableOk returns a tuple with the LoginMethodsAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetLoginMethodsAvailableOk() (*LoginIdentityLoginMethodsAvailable, bool) {
	if o == nil || IsNil(o.LoginMethodsAvailable) {
		return nil, false
	}
	return o.LoginMethodsAvailable, true
}

// HasLoginMethodsAvailable returns a boolean if a field has been set.
func (o *LoginIdentity) HasLoginMethodsAvailable() bool {
	if o != nil && !IsNil(o.LoginMethodsAvailable) {
		return true
	}

	return false
}

// SetLoginMethodsAvailable gets a reference to the given LoginIdentityLoginMethodsAvailable and assigns it to the LoginMethodsAvailable field.
func (o *LoginIdentity) SetLoginMethodsAvailable(v LoginIdentityLoginMethodsAvailable) {
	o.LoginMethodsAvailable = &v
}

// GetPermissionsGrantDate returns the PermissionsGrantDate field value if set, zero value otherwise.
func (o *LoginIdentity) GetPermissionsGrantDate() time.Time {
	if o == nil || IsNil(o.PermissionsGrantDate) {
		var ret time.Time
		return ret
	}
	return *o.PermissionsGrantDate
}

// GetPermissionsGrantDateOk returns a tuple with the PermissionsGrantDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetPermissionsGrantDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PermissionsGrantDate) {
		return nil, false
	}
	return o.PermissionsGrantDate, true
}

// HasPermissionsGrantDate returns a boolean if a field has been set.
func (o *LoginIdentity) HasPermissionsGrantDate() bool {
	if o != nil && !IsNil(o.PermissionsGrantDate) {
		return true
	}

	return false
}

// SetPermissionsGrantDate gets a reference to the given time.Time and assigns it to the PermissionsGrantDate field.
func (o *LoginIdentity) SetPermissionsGrantDate(v time.Time) {
	o.PermissionsGrantDate = &v
}

// GetPermissionsExpiryDate returns the PermissionsExpiryDate field value if set, zero value otherwise.
func (o *LoginIdentity) GetPermissionsExpiryDate() time.Time {
	if o == nil || IsNil(o.PermissionsExpiryDate) {
		var ret time.Time
		return ret
	}
	return *o.PermissionsExpiryDate
}

// GetPermissionsExpiryDateOk returns a tuple with the PermissionsExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetPermissionsExpiryDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PermissionsExpiryDate) {
		return nil, false
	}
	return o.PermissionsExpiryDate, true
}

// HasPermissionsExpiryDate returns a boolean if a field has been set.
func (o *LoginIdentity) HasPermissionsExpiryDate() bool {
	if o != nil && !IsNil(o.PermissionsExpiryDate) {
		return true
	}

	return false
}

// SetPermissionsExpiryDate gets a reference to the given time.Time and assigns it to the PermissionsExpiryDate field.
func (o *LoginIdentity) SetPermissionsExpiryDate(v time.Time) {
	o.PermissionsExpiryDate = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *LoginIdentity) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *LoginIdentity) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *LoginIdentity) SetPermissions(v []string) {
	o.Permissions = v
}

// GetBillingDetails returns the BillingDetails field value if set, zero value otherwise.
func (o *LoginIdentity) GetBillingDetails() LoginIdentityBillingDetails {
	if o == nil || IsNil(o.BillingDetails) {
		var ret LoginIdentityBillingDetails
		return ret
	}
	return *o.BillingDetails
}

// GetBillingDetailsOk returns a tuple with the BillingDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetBillingDetailsOk() (*LoginIdentityBillingDetails, bool) {
	if o == nil || IsNil(o.BillingDetails) {
		return nil, false
	}
	return o.BillingDetails, true
}

// HasBillingDetails returns a boolean if a field has been set.
func (o *LoginIdentity) HasBillingDetails() bool {
	if o != nil && !IsNil(o.BillingDetails) {
		return true
	}

	return false
}

// SetBillingDetails gets a reference to the given LoginIdentityBillingDetails and assigns it to the BillingDetails field.
func (o *LoginIdentity) SetBillingDetails(v LoginIdentityBillingDetails) {
	o.BillingDetails = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LoginIdentity) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LoginIdentity) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *LoginIdentity) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDetails returns the StatusDetails field value if set, zero value otherwise.
func (o *LoginIdentity) GetStatusDetails() LoginIdentityStatusDetails {
	if o == nil || IsNil(o.StatusDetails) {
		var ret LoginIdentityStatusDetails
		return ret
	}
	return *o.StatusDetails
}

// GetStatusDetailsOk returns a tuple with the StatusDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetStatusDetailsOk() (*LoginIdentityStatusDetails, bool) {
	if o == nil || IsNil(o.StatusDetails) {
		return nil, false
	}
	return o.StatusDetails, true
}

// HasStatusDetails returns a boolean if a field has been set.
func (o *LoginIdentity) HasStatusDetails() bool {
	if o != nil && !IsNil(o.StatusDetails) {
		return true
	}

	return false
}

// SetStatusDetails gets a reference to the given LoginIdentityStatusDetails and assigns it to the StatusDetails field.
func (o *LoginIdentity) SetStatusDetails(v LoginIdentityStatusDetails) {
	o.StatusDetails = &v
}

// GetProductStatus returns the ProductStatus field value if set, zero value otherwise.
func (o *LoginIdentity) GetProductStatus() AllProductStatus {
	if o == nil || IsNil(o.ProductStatus) {
		var ret AllProductStatus
		return ret
	}
	return *o.ProductStatus
}

// GetProductStatusOk returns a tuple with the ProductStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetProductStatusOk() (*AllProductStatus, bool) {
	if o == nil || IsNil(o.ProductStatus) {
		return nil, false
	}
	return o.ProductStatus, true
}

// HasProductStatus returns a boolean if a field has been set.
func (o *LoginIdentity) HasProductStatus() bool {
	if o != nil && !IsNil(o.ProductStatus) {
		return true
	}

	return false
}

// SetProductStatus gets a reference to the given AllProductStatus and assigns it to the ProductStatus field.
func (o *LoginIdentity) SetProductStatus(v AllProductStatus) {
	o.ProductStatus = &v
}

// GetAuthenticationStatus returns the AuthenticationStatus field value if set, zero value otherwise.
func (o *LoginIdentity) GetAuthenticationStatus() ProductStatus {
	if o == nil || IsNil(o.AuthenticationStatus) {
		var ret ProductStatus
		return ret
	}
	return *o.AuthenticationStatus
}

// GetAuthenticationStatusOk returns a tuple with the AuthenticationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetAuthenticationStatusOk() (*ProductStatus, bool) {
	if o == nil || IsNil(o.AuthenticationStatus) {
		return nil, false
	}
	return o.AuthenticationStatus, true
}

// HasAuthenticationStatus returns a boolean if a field has been set.
func (o *LoginIdentity) HasAuthenticationStatus() bool {
	if o != nil && !IsNil(o.AuthenticationStatus) {
		return true
	}

	return false
}

// SetAuthenticationStatus gets a reference to the given ProductStatus and assigns it to the AuthenticationStatus field.
func (o *LoginIdentity) SetAuthenticationStatus(v ProductStatus) {
	o.AuthenticationStatus = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *LoginIdentity) GetError() LoginIdentityError {
	if o == nil || IsNil(o.Error) {
		var ret LoginIdentityError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetErrorOk() (*LoginIdentityError, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *LoginIdentity) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given LoginIdentityError and assigns it to the Error field.
func (o *LoginIdentity) SetError(v LoginIdentityError) {
	o.Error = &v
}

// GetLastSuccess returns the LastSuccess field value if set, zero value otherwise.
func (o *LoginIdentity) GetLastSuccess() time.Time {
	if o == nil || IsNil(o.LastSuccess) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccess
}

// GetLastSuccessOk returns a tuple with the LastSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetLastSuccessOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccess) {
		return nil, false
	}
	return o.LastSuccess, true
}

// HasLastSuccess returns a boolean if a field has been set.
func (o *LoginIdentity) HasLastSuccess() bool {
	if o != nil && !IsNil(o.LastSuccess) {
		return true
	}

	return false
}

// SetLastSuccess gets a reference to the given time.Time and assigns it to the LastSuccess field.
func (o *LoginIdentity) SetLastSuccess(v time.Time) {
	o.LastSuccess = &v
}

// GetFirstSuccess returns the FirstSuccess field value if set, zero value otherwise.
func (o *LoginIdentity) GetFirstSuccess() time.Time {
	if o == nil || IsNil(o.FirstSuccess) {
		var ret time.Time
		return ret
	}
	return *o.FirstSuccess
}

// GetFirstSuccessOk returns a tuple with the FirstSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetFirstSuccessOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FirstSuccess) {
		return nil, false
	}
	return o.FirstSuccess, true
}

// HasFirstSuccess returns a boolean if a field has been set.
func (o *LoginIdentity) HasFirstSuccess() bool {
	if o != nil && !IsNil(o.FirstSuccess) {
		return true
	}

	return false
}

// SetFirstSuccess gets a reference to the given time.Time and assigns it to the FirstSuccess field.
func (o *LoginIdentity) SetFirstSuccess(v time.Time) {
	o.FirstSuccess = &v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *LoginIdentity) GetWebhook() string {
	if o == nil || IsNil(o.Webhook) {
		var ret string
		return ret
	}
	return *o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetWebhookOk() (*string, bool) {
	if o == nil || IsNil(o.Webhook) {
		return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *LoginIdentity) HasWebhook() bool {
	if o != nil && !IsNil(o.Webhook) {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given string and assigns it to the Webhook field.
func (o *LoginIdentity) SetWebhook(v string) {
	o.Webhook = &v
}

// GetSessionStatus returns the SessionStatus field value if set, zero value otherwise.
func (o *LoginIdentity) GetSessionStatus() string {
	if o == nil || IsNil(o.SessionStatus) {
		var ret string
		return ret
	}
	return *o.SessionStatus
}

// GetSessionStatusOk returns a tuple with the SessionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetSessionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SessionStatus) {
		return nil, false
	}
	return o.SessionStatus, true
}

// HasSessionStatus returns a boolean if a field has been set.
func (o *LoginIdentity) HasSessionStatus() bool {
	if o != nil && !IsNil(o.SessionStatus) {
		return true
	}

	return false
}

// SetSessionStatus gets a reference to the given string and assigns it to the SessionStatus field.
func (o *LoginIdentity) SetSessionStatus(v string) {
	o.SessionStatus = &v
}

// GetInstitutionId returns the InstitutionId field value
func (o *LoginIdentity) GetInstitutionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetInstitutionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstitutionId, true
}

// SetInstitutionId sets field value
func (o *LoginIdentity) SetInstitutionId(v string) {
	o.InstitutionId = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *LoginIdentity) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *LoginIdentity) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *LoginIdentity) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *LoginIdentity) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *LoginIdentity) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *LoginIdentity) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetLinkingAttemptId returns the LinkingAttemptId field value if set, zero value otherwise.
func (o *LoginIdentity) GetLinkingAttemptId() string {
	if o == nil || IsNil(o.LinkingAttemptId) {
		var ret string
		return ret
	}
	return *o.LinkingAttemptId
}

// GetLinkingAttemptIdOk returns a tuple with the LinkingAttemptId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetLinkingAttemptIdOk() (*string, bool) {
	if o == nil || IsNil(o.LinkingAttemptId) {
		return nil, false
	}
	return o.LinkingAttemptId, true
}

// HasLinkingAttemptId returns a boolean if a field has been set.
func (o *LoginIdentity) HasLinkingAttemptId() bool {
	if o != nil && !IsNil(o.LinkingAttemptId) {
		return true
	}

	return false
}

// SetLinkingAttemptId gets a reference to the given string and assigns it to the LinkingAttemptId field.
func (o *LoginIdentity) SetLinkingAttemptId(v string) {
	o.LinkingAttemptId = &v
}

// GetAuthenticationId returns the AuthenticationId field value if set, zero value otherwise.
func (o *LoginIdentity) GetAuthenticationId() string {
	if o == nil || IsNil(o.AuthenticationId) {
		var ret string
		return ret
	}
	return *o.AuthenticationId
}

// GetAuthenticationIdOk returns a tuple with the AuthenticationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetAuthenticationIdOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationId) {
		return nil, false
	}
	return o.AuthenticationId, true
}

// HasAuthenticationId returns a boolean if a field has been set.
func (o *LoginIdentity) HasAuthenticationId() bool {
	if o != nil && !IsNil(o.AuthenticationId) {
		return true
	}

	return false
}

// SetAuthenticationId gets a reference to the given string and assigns it to the AuthenticationId field.
func (o *LoginIdentity) SetAuthenticationId(v string) {
	o.AuthenticationId = &v
}

// GetLastSessionId returns the LastSessionId field value if set, zero value otherwise.
func (o *LoginIdentity) GetLastSessionId() string {
	if o == nil || IsNil(o.LastSessionId) {
		var ret string
		return ret
	}
	return *o.LastSessionId
}

// GetLastSessionIdOk returns a tuple with the LastSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetLastSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastSessionId) {
		return nil, false
	}
	return o.LastSessionId, true
}

// HasLastSessionId returns a boolean if a field has been set.
func (o *LoginIdentity) HasLastSessionId() bool {
	if o != nil && !IsNil(o.LastSessionId) {
		return true
	}

	return false
}

// SetLastSessionId gets a reference to the given string and assigns it to the LastSessionId field.
func (o *LoginIdentity) SetLastSessionId(v string) {
	o.LastSessionId = &v
}

// GetRefresh returns the Refresh field value if set, zero value otherwise.
func (o *LoginIdentity) GetRefresh() RefreshData {
	if o == nil || IsNil(o.Refresh) {
		var ret RefreshData
		return ret
	}
	return *o.Refresh
}

// GetRefreshOk returns a tuple with the Refresh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentity) GetRefreshOk() (*RefreshData, bool) {
	if o == nil || IsNil(o.Refresh) {
		return nil, false
	}
	return o.Refresh, true
}

// HasRefresh returns a boolean if a field has been set.
func (o *LoginIdentity) HasRefresh() bool {
	if o != nil && !IsNil(o.Refresh) {
		return true
	}

	return false
}

// SetRefresh gets a reference to the given RefreshData and assigns it to the Refresh field.
func (o *LoginIdentity) SetRefresh(v RefreshData) {
	o.Refresh = &v
}

func (o LoginIdentity) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoginIdentity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoginIdentityId) {
		toSerialize["login_identity_id"] = o.LoginIdentityId
	}
	toSerialize["customer_app_id"] = o.CustomerAppId
	toSerialize["user_id"] = o.UserId
	if !IsNil(o.LoginMethodsAvailable) {
		toSerialize["login_methods_available"] = o.LoginMethodsAvailable
	}
	if !IsNil(o.PermissionsGrantDate) {
		toSerialize["permissions_grant_date"] = o.PermissionsGrantDate
	}
	if !IsNil(o.PermissionsExpiryDate) {
		toSerialize["permissions_expiry_date"] = o.PermissionsExpiryDate
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.BillingDetails) {
		toSerialize["billing_details"] = o.BillingDetails
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusDetails) {
		toSerialize["status_details"] = o.StatusDetails
	}
	if !IsNil(o.ProductStatus) {
		toSerialize["product_status"] = o.ProductStatus
	}
	if !IsNil(o.AuthenticationStatus) {
		toSerialize["authentication_status"] = o.AuthenticationStatus
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.LastSuccess) {
		toSerialize["last_success"] = o.LastSuccess
	}
	if !IsNil(o.FirstSuccess) {
		toSerialize["first_success"] = o.FirstSuccess
	}
	if !IsNil(o.Webhook) {
		toSerialize["webhook"] = o.Webhook
	}
	if !IsNil(o.SessionStatus) {
		toSerialize["session_status"] = o.SessionStatus
	}
	toSerialize["institution_id"] = o.InstitutionId
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.LinkingAttemptId) {
		toSerialize["linking_attempt_id"] = o.LinkingAttemptId
	}
	if !IsNil(o.AuthenticationId) {
		toSerialize["authentication_id"] = o.AuthenticationId
	}
	if !IsNil(o.LastSessionId) {
		toSerialize["last_session_id"] = o.LastSessionId
	}
	if !IsNil(o.Refresh) {
		toSerialize["refresh"] = o.Refresh
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LoginIdentity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customer_app_id",
		"user_id",
		"institution_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLoginIdentity := _LoginIdentity{}

	err = json.Unmarshal(data, &varLoginIdentity)

	if err != nil {
		return err
	}

	*o = LoginIdentity(varLoginIdentity)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "login_identity_id")
		delete(additionalProperties, "customer_app_id")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "login_methods_available")
		delete(additionalProperties, "permissions_grant_date")
		delete(additionalProperties, "permissions_expiry_date")
		delete(additionalProperties, "permissions")
		delete(additionalProperties, "billing_details")
		delete(additionalProperties, "status")
		delete(additionalProperties, "status_details")
		delete(additionalProperties, "product_status")
		delete(additionalProperties, "authentication_status")
		delete(additionalProperties, "error")
		delete(additionalProperties, "last_success")
		delete(additionalProperties, "first_success")
		delete(additionalProperties, "webhook")
		delete(additionalProperties, "session_status")
		delete(additionalProperties, "institution_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "linking_attempt_id")
		delete(additionalProperties, "authentication_id")
		delete(additionalProperties, "last_session_id")
		delete(additionalProperties, "refresh")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLoginIdentity struct {
	value *LoginIdentity
	isSet bool
}

func (v NullableLoginIdentity) Get() *LoginIdentity {
	return v.value
}

func (v *NullableLoginIdentity) Set(val *LoginIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginIdentity(val *LoginIdentity) *NullableLoginIdentity {
	return &NullableLoginIdentity{value: val, isSet: true}
}

func (v NullableLoginIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
