/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"fmt"
)

// checks if the PaymentMethodIntegrationMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethodIntegrationMetadata{}

// PaymentMethodIntegrationMetadata struct for PaymentMethodIntegrationMetadata
type PaymentMethodIntegrationMetadata struct {
	IntegrationId        string                                               `json:"integration_id"`
	StripeMetadata       *PaymentMethodIntegrationMetadataStripeMetadata      `json:"stripe_metadata,omitempty"`
	CybersourceMetadata  *PaymentMethodIntegrationMetadataCybersourceMetadata `json:"cybersource_metadata,omitempty"`
	AdyenMetadata        *PaymentMethodIntegrationMetadataAdyenMetadata       `json:"adyen_metadata,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentMethodIntegrationMetadata PaymentMethodIntegrationMetadata

// NewPaymentMethodIntegrationMetadata instantiates a new PaymentMethodIntegrationMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodIntegrationMetadata(integrationId string) *PaymentMethodIntegrationMetadata {
	this := PaymentMethodIntegrationMetadata{}
	this.IntegrationId = integrationId
	return &this
}

// NewPaymentMethodIntegrationMetadataWithDefaults instantiates a new PaymentMethodIntegrationMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodIntegrationMetadataWithDefaults() *PaymentMethodIntegrationMetadata {
	this := PaymentMethodIntegrationMetadata{}
	return &this
}

// GetIntegrationId returns the IntegrationId field value
func (o *PaymentMethodIntegrationMetadata) GetIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodIntegrationMetadata) GetIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationId, true
}

// SetIntegrationId sets field value
func (o *PaymentMethodIntegrationMetadata) SetIntegrationId(v string) {
	o.IntegrationId = v
}

// GetStripeMetadata returns the StripeMetadata field value if set, zero value otherwise.
func (o *PaymentMethodIntegrationMetadata) GetStripeMetadata() PaymentMethodIntegrationMetadataStripeMetadata {
	if o == nil || IsNil(o.StripeMetadata) {
		var ret PaymentMethodIntegrationMetadataStripeMetadata
		return ret
	}
	return *o.StripeMetadata
}

// GetStripeMetadataOk returns a tuple with the StripeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodIntegrationMetadata) GetStripeMetadataOk() (*PaymentMethodIntegrationMetadataStripeMetadata, bool) {
	if o == nil || IsNil(o.StripeMetadata) {
		return nil, false
	}
	return o.StripeMetadata, true
}

// HasStripeMetadata returns a boolean if a field has been set.
func (o *PaymentMethodIntegrationMetadata) HasStripeMetadata() bool {
	if o != nil && !IsNil(o.StripeMetadata) {
		return true
	}

	return false
}

// SetStripeMetadata gets a reference to the given PaymentMethodIntegrationMetadataStripeMetadata and assigns it to the StripeMetadata field.
func (o *PaymentMethodIntegrationMetadata) SetStripeMetadata(v PaymentMethodIntegrationMetadataStripeMetadata) {
	o.StripeMetadata = &v
}

// GetCybersourceMetadata returns the CybersourceMetadata field value if set, zero value otherwise.
func (o *PaymentMethodIntegrationMetadata) GetCybersourceMetadata() PaymentMethodIntegrationMetadataCybersourceMetadata {
	if o == nil || IsNil(o.CybersourceMetadata) {
		var ret PaymentMethodIntegrationMetadataCybersourceMetadata
		return ret
	}
	return *o.CybersourceMetadata
}

// GetCybersourceMetadataOk returns a tuple with the CybersourceMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodIntegrationMetadata) GetCybersourceMetadataOk() (*PaymentMethodIntegrationMetadataCybersourceMetadata, bool) {
	if o == nil || IsNil(o.CybersourceMetadata) {
		return nil, false
	}
	return o.CybersourceMetadata, true
}

// HasCybersourceMetadata returns a boolean if a field has been set.
func (o *PaymentMethodIntegrationMetadata) HasCybersourceMetadata() bool {
	if o != nil && !IsNil(o.CybersourceMetadata) {
		return true
	}

	return false
}

// SetCybersourceMetadata gets a reference to the given PaymentMethodIntegrationMetadataCybersourceMetadata and assigns it to the CybersourceMetadata field.
func (o *PaymentMethodIntegrationMetadata) SetCybersourceMetadata(v PaymentMethodIntegrationMetadataCybersourceMetadata) {
	o.CybersourceMetadata = &v
}

// GetAdyenMetadata returns the AdyenMetadata field value if set, zero value otherwise.
func (o *PaymentMethodIntegrationMetadata) GetAdyenMetadata() PaymentMethodIntegrationMetadataAdyenMetadata {
	if o == nil || IsNil(o.AdyenMetadata) {
		var ret PaymentMethodIntegrationMetadataAdyenMetadata
		return ret
	}
	return *o.AdyenMetadata
}

// GetAdyenMetadataOk returns a tuple with the AdyenMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodIntegrationMetadata) GetAdyenMetadataOk() (*PaymentMethodIntegrationMetadataAdyenMetadata, bool) {
	if o == nil || IsNil(o.AdyenMetadata) {
		return nil, false
	}
	return o.AdyenMetadata, true
}

// HasAdyenMetadata returns a boolean if a field has been set.
func (o *PaymentMethodIntegrationMetadata) HasAdyenMetadata() bool {
	if o != nil && !IsNil(o.AdyenMetadata) {
		return true
	}

	return false
}

// SetAdyenMetadata gets a reference to the given PaymentMethodIntegrationMetadataAdyenMetadata and assigns it to the AdyenMetadata field.
func (o *PaymentMethodIntegrationMetadata) SetAdyenMetadata(v PaymentMethodIntegrationMetadataAdyenMetadata) {
	o.AdyenMetadata = &v
}

func (o PaymentMethodIntegrationMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethodIntegrationMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["integration_id"] = o.IntegrationId
	if !IsNil(o.StripeMetadata) {
		toSerialize["stripe_metadata"] = o.StripeMetadata
	}
	if !IsNil(o.CybersourceMetadata) {
		toSerialize["cybersource_metadata"] = o.CybersourceMetadata
	}
	if !IsNil(o.AdyenMetadata) {
		toSerialize["adyen_metadata"] = o.AdyenMetadata
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentMethodIntegrationMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"integration_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentMethodIntegrationMetadata := _PaymentMethodIntegrationMetadata{}

	err = json.Unmarshal(data, &varPaymentMethodIntegrationMetadata)

	if err != nil {
		return err
	}

	*o = PaymentMethodIntegrationMetadata(varPaymentMethodIntegrationMetadata)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "integration_id")
		delete(additionalProperties, "stripe_metadata")
		delete(additionalProperties, "cybersource_metadata")
		delete(additionalProperties, "adyen_metadata")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentMethodIntegrationMetadata struct {
	value *PaymentMethodIntegrationMetadata
	isSet bool
}

func (v NullablePaymentMethodIntegrationMetadata) Get() *PaymentMethodIntegrationMetadata {
	return v.value
}

func (v *NullablePaymentMethodIntegrationMetadata) Set(val *PaymentMethodIntegrationMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodIntegrationMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodIntegrationMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodIntegrationMetadata(val *PaymentMethodIntegrationMetadata) *NullablePaymentMethodIntegrationMetadata {
	return &NullablePaymentMethodIntegrationMetadata{value: val, isSet: true}
}

func (v NullablePaymentMethodIntegrationMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodIntegrationMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
