/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the GetIdentityResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIdentityResponse{}

// GetIdentityResponse struct for GetIdentityResponse
type GetIdentityResponse struct {
	Identity             *Identity           `json:"identity,omitempty"`
	LoginIdentity        *LoginIdentityShort `json:"login_identity,omitempty"`
	Institution          *InstitutionShort   `json:"institution,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetIdentityResponse GetIdentityResponse

// NewGetIdentityResponse instantiates a new GetIdentityResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIdentityResponse() *GetIdentityResponse {
	this := GetIdentityResponse{}
	return &this
}

// NewGetIdentityResponseWithDefaults instantiates a new GetIdentityResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIdentityResponseWithDefaults() *GetIdentityResponse {
	this := GetIdentityResponse{}
	return &this
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *GetIdentityResponse) GetIdentity() Identity {
	if o == nil || IsNil(o.Identity) {
		var ret Identity
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentityResponse) GetIdentityOk() (*Identity, bool) {
	if o == nil || IsNil(o.Identity) {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *GetIdentityResponse) HasIdentity() bool {
	if o != nil && !IsNil(o.Identity) {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given Identity and assigns it to the Identity field.
func (o *GetIdentityResponse) SetIdentity(v Identity) {
	o.Identity = &v
}

// GetLoginIdentity returns the LoginIdentity field value if set, zero value otherwise.
func (o *GetIdentityResponse) GetLoginIdentity() LoginIdentityShort {
	if o == nil || IsNil(o.LoginIdentity) {
		var ret LoginIdentityShort
		return ret
	}
	return *o.LoginIdentity
}

// GetLoginIdentityOk returns a tuple with the LoginIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentityResponse) GetLoginIdentityOk() (*LoginIdentityShort, bool) {
	if o == nil || IsNil(o.LoginIdentity) {
		return nil, false
	}
	return o.LoginIdentity, true
}

// HasLoginIdentity returns a boolean if a field has been set.
func (o *GetIdentityResponse) HasLoginIdentity() bool {
	if o != nil && !IsNil(o.LoginIdentity) {
		return true
	}

	return false
}

// SetLoginIdentity gets a reference to the given LoginIdentityShort and assigns it to the LoginIdentity field.
func (o *GetIdentityResponse) SetLoginIdentity(v LoginIdentityShort) {
	o.LoginIdentity = &v
}

// GetInstitution returns the Institution field value if set, zero value otherwise.
func (o *GetIdentityResponse) GetInstitution() InstitutionShort {
	if o == nil || IsNil(o.Institution) {
		var ret InstitutionShort
		return ret
	}
	return *o.Institution
}

// GetInstitutionOk returns a tuple with the Institution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentityResponse) GetInstitutionOk() (*InstitutionShort, bool) {
	if o == nil || IsNil(o.Institution) {
		return nil, false
	}
	return o.Institution, true
}

// HasInstitution returns a boolean if a field has been set.
func (o *GetIdentityResponse) HasInstitution() bool {
	if o != nil && !IsNil(o.Institution) {
		return true
	}

	return false
}

// SetInstitution gets a reference to the given InstitutionShort and assigns it to the Institution field.
func (o *GetIdentityResponse) SetInstitution(v InstitutionShort) {
	o.Institution = &v
}

func (o GetIdentityResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIdentityResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Identity) {
		toSerialize["identity"] = o.Identity
	}
	if !IsNil(o.LoginIdentity) {
		toSerialize["login_identity"] = o.LoginIdentity
	}
	if !IsNil(o.Institution) {
		toSerialize["institution"] = o.Institution
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetIdentityResponse) UnmarshalJSON(data []byte) (err error) {
	varGetIdentityResponse := _GetIdentityResponse{}

	err = json.Unmarshal(data, &varGetIdentityResponse)

	if err != nil {
		return err
	}

	*o = GetIdentityResponse(varGetIdentityResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "identity")
		delete(additionalProperties, "login_identity")
		delete(additionalProperties, "institution")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetIdentityResponse struct {
	value *GetIdentityResponse
	isSet bool
}

func (v NullableGetIdentityResponse) Get() *GetIdentityResponse {
	return v.value
}

func (v *NullableGetIdentityResponse) Set(val *GetIdentityResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIdentityResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIdentityResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIdentityResponse(val *GetIdentityResponse) *NullableGetIdentityResponse {
	return &NullableGetIdentityResponse{value: val, isSet: true}
}

func (v NullableGetIdentityResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIdentityResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
