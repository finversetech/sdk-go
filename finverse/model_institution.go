/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"time"
)

// Institution struct for Institution
type Institution struct {
	InstitutionId         string                 `json:"institution_id"`
	Countries             []string               `json:"countries"`
	Tags                  []string               `json:"tags,omitempty"`
	InstitutionType       string                 `json:"institution_type"`
	ProductsSupported     []string               `json:"products_supported"`
	ParentInstitutionName *string                `json:"parent_institution_name,omitempty"`
	InstitutionName       string                 `json:"institution_name"`
	PortalName            *string                `json:"portal_name,omitempty"`
	UserType              string                 `json:"user_type"`
	Status                string                 `json:"status"`
	StatusDetails         map[string]interface{} `json:"status_details,omitempty"`
	LoginUrl              *string                `json:"login_url,omitempty"`
	LoginDetails          map[string]interface{} `json:"login_details,omitempty"`
	LoginMethods          []LoginMethod          `json:"login_methods,omitempty"`
	Color                 *string                `json:"color,omitempty"`
	UpdatedAt             *time.Time             `json:"updated_at,omitempty"`
}

// NewInstitution instantiates a new Institution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstitution(institutionId string, countries []string, institutionType string, productsSupported []string, institutionName string, userType string, status string) *Institution {
	this := Institution{}
	this.InstitutionId = institutionId
	this.Countries = countries
	this.InstitutionType = institutionType
	this.ProductsSupported = productsSupported
	this.InstitutionName = institutionName
	this.UserType = userType
	this.Status = status
	return &this
}

// NewInstitutionWithDefaults instantiates a new Institution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstitutionWithDefaults() *Institution {
	this := Institution{}
	return &this
}

// GetInstitutionId returns the InstitutionId field value
func (o *Institution) GetInstitutionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value
// and a boolean to check if the value has been set.
func (o *Institution) GetInstitutionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstitutionId, true
}

// SetInstitutionId sets field value
func (o *Institution) SetInstitutionId(v string) {
	o.InstitutionId = v
}

// GetCountries returns the Countries field value
func (o *Institution) GetCountries() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value
// and a boolean to check if the value has been set.
func (o *Institution) GetCountriesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Countries, true
}

// SetCountries sets field value
func (o *Institution) SetCountries(v []string) {
	o.Countries = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Institution) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Institution) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Institution) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Institution) SetTags(v []string) {
	o.Tags = v
}

// GetInstitutionType returns the InstitutionType field value
func (o *Institution) GetInstitutionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionType
}

// GetInstitutionTypeOk returns a tuple with the InstitutionType field value
// and a boolean to check if the value has been set.
func (o *Institution) GetInstitutionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstitutionType, true
}

// SetInstitutionType sets field value
func (o *Institution) SetInstitutionType(v string) {
	o.InstitutionType = v
}

// GetProductsSupported returns the ProductsSupported field value
func (o *Institution) GetProductsSupported() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ProductsSupported
}

// GetProductsSupportedOk returns a tuple with the ProductsSupported field value
// and a boolean to check if the value has been set.
func (o *Institution) GetProductsSupportedOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductsSupported, true
}

// SetProductsSupported sets field value
func (o *Institution) SetProductsSupported(v []string) {
	o.ProductsSupported = v
}

// GetParentInstitutionName returns the ParentInstitutionName field value if set, zero value otherwise.
func (o *Institution) GetParentInstitutionName() string {
	if o == nil || o.ParentInstitutionName == nil {
		var ret string
		return ret
	}
	return *o.ParentInstitutionName
}

// GetParentInstitutionNameOk returns a tuple with the ParentInstitutionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Institution) GetParentInstitutionNameOk() (*string, bool) {
	if o == nil || o.ParentInstitutionName == nil {
		return nil, false
	}
	return o.ParentInstitutionName, true
}

// HasParentInstitutionName returns a boolean if a field has been set.
func (o *Institution) HasParentInstitutionName() bool {
	if o != nil && o.ParentInstitutionName != nil {
		return true
	}

	return false
}

// SetParentInstitutionName gets a reference to the given string and assigns it to the ParentInstitutionName field.
func (o *Institution) SetParentInstitutionName(v string) {
	o.ParentInstitutionName = &v
}

// GetInstitutionName returns the InstitutionName field value
func (o *Institution) GetInstitutionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionName
}

// GetInstitutionNameOk returns a tuple with the InstitutionName field value
// and a boolean to check if the value has been set.
func (o *Institution) GetInstitutionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstitutionName, true
}

// SetInstitutionName sets field value
func (o *Institution) SetInstitutionName(v string) {
	o.InstitutionName = v
}

// GetPortalName returns the PortalName field value if set, zero value otherwise.
func (o *Institution) GetPortalName() string {
	if o == nil || o.PortalName == nil {
		var ret string
		return ret
	}
	return *o.PortalName
}

// GetPortalNameOk returns a tuple with the PortalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Institution) GetPortalNameOk() (*string, bool) {
	if o == nil || o.PortalName == nil {
		return nil, false
	}
	return o.PortalName, true
}

// HasPortalName returns a boolean if a field has been set.
func (o *Institution) HasPortalName() bool {
	if o != nil && o.PortalName != nil {
		return true
	}

	return false
}

// SetPortalName gets a reference to the given string and assigns it to the PortalName field.
func (o *Institution) SetPortalName(v string) {
	o.PortalName = &v
}

// GetUserType returns the UserType field value
func (o *Institution) GetUserType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserType
}

// GetUserTypeOk returns a tuple with the UserType field value
// and a boolean to check if the value has been set.
func (o *Institution) GetUserTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserType, true
}

// SetUserType sets field value
func (o *Institution) SetUserType(v string) {
	o.UserType = v
}

// GetStatus returns the Status field value
func (o *Institution) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Institution) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Institution) SetStatus(v string) {
	o.Status = v
}

// GetStatusDetails returns the StatusDetails field value if set, zero value otherwise.
func (o *Institution) GetStatusDetails() map[string]interface{} {
	if o == nil || o.StatusDetails == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.StatusDetails
}

// GetStatusDetailsOk returns a tuple with the StatusDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Institution) GetStatusDetailsOk() (map[string]interface{}, bool) {
	if o == nil || o.StatusDetails == nil {
		return nil, false
	}
	return o.StatusDetails, true
}

// HasStatusDetails returns a boolean if a field has been set.
func (o *Institution) HasStatusDetails() bool {
	if o != nil && o.StatusDetails != nil {
		return true
	}

	return false
}

// SetStatusDetails gets a reference to the given map[string]interface{} and assigns it to the StatusDetails field.
func (o *Institution) SetStatusDetails(v map[string]interface{}) {
	o.StatusDetails = v
}

// GetLoginUrl returns the LoginUrl field value if set, zero value otherwise.
func (o *Institution) GetLoginUrl() string {
	if o == nil || o.LoginUrl == nil {
		var ret string
		return ret
	}
	return *o.LoginUrl
}

// GetLoginUrlOk returns a tuple with the LoginUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Institution) GetLoginUrlOk() (*string, bool) {
	if o == nil || o.LoginUrl == nil {
		return nil, false
	}
	return o.LoginUrl, true
}

// HasLoginUrl returns a boolean if a field has been set.
func (o *Institution) HasLoginUrl() bool {
	if o != nil && o.LoginUrl != nil {
		return true
	}

	return false
}

// SetLoginUrl gets a reference to the given string and assigns it to the LoginUrl field.
func (o *Institution) SetLoginUrl(v string) {
	o.LoginUrl = &v
}

// GetLoginDetails returns the LoginDetails field value if set, zero value otherwise.
func (o *Institution) GetLoginDetails() map[string]interface{} {
	if o == nil || o.LoginDetails == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.LoginDetails
}

// GetLoginDetailsOk returns a tuple with the LoginDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Institution) GetLoginDetailsOk() (map[string]interface{}, bool) {
	if o == nil || o.LoginDetails == nil {
		return nil, false
	}
	return o.LoginDetails, true
}

// HasLoginDetails returns a boolean if a field has been set.
func (o *Institution) HasLoginDetails() bool {
	if o != nil && o.LoginDetails != nil {
		return true
	}

	return false
}

// SetLoginDetails gets a reference to the given map[string]interface{} and assigns it to the LoginDetails field.
func (o *Institution) SetLoginDetails(v map[string]interface{}) {
	o.LoginDetails = v
}

// GetLoginMethods returns the LoginMethods field value if set, zero value otherwise.
func (o *Institution) GetLoginMethods() []LoginMethod {
	if o == nil || o.LoginMethods == nil {
		var ret []LoginMethod
		return ret
	}
	return o.LoginMethods
}

// GetLoginMethodsOk returns a tuple with the LoginMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Institution) GetLoginMethodsOk() ([]LoginMethod, bool) {
	if o == nil || o.LoginMethods == nil {
		return nil, false
	}
	return o.LoginMethods, true
}

// HasLoginMethods returns a boolean if a field has been set.
func (o *Institution) HasLoginMethods() bool {
	if o != nil && o.LoginMethods != nil {
		return true
	}

	return false
}

// SetLoginMethods gets a reference to the given []LoginMethod and assigns it to the LoginMethods field.
func (o *Institution) SetLoginMethods(v []LoginMethod) {
	o.LoginMethods = v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *Institution) GetColor() string {
	if o == nil || o.Color == nil {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Institution) GetColorOk() (*string, bool) {
	if o == nil || o.Color == nil {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *Institution) HasColor() bool {
	if o != nil && o.Color != nil {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *Institution) SetColor(v string) {
	o.Color = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Institution) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Institution) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Institution) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Institution) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o Institution) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["institution_id"] = o.InstitutionId
	}
	if true {
		toSerialize["countries"] = o.Countries
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if true {
		toSerialize["institution_type"] = o.InstitutionType
	}
	if true {
		toSerialize["products_supported"] = o.ProductsSupported
	}
	if o.ParentInstitutionName != nil {
		toSerialize["parent_institution_name"] = o.ParentInstitutionName
	}
	if true {
		toSerialize["institution_name"] = o.InstitutionName
	}
	if o.PortalName != nil {
		toSerialize["portal_name"] = o.PortalName
	}
	if true {
		toSerialize["user_type"] = o.UserType
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.StatusDetails != nil {
		toSerialize["status_details"] = o.StatusDetails
	}
	if o.LoginUrl != nil {
		toSerialize["login_url"] = o.LoginUrl
	}
	if o.LoginDetails != nil {
		toSerialize["login_details"] = o.LoginDetails
	}
	if o.LoginMethods != nil {
		toSerialize["login_methods"] = o.LoginMethods
	}
	if o.Color != nil {
		toSerialize["color"] = o.Color
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableInstitution struct {
	value *Institution
	isSet bool
}

func (v NullableInstitution) Get() *Institution {
	return v.value
}

func (v *NullableInstitution) Set(val *Institution) {
	v.value = val
	v.isSet = true
}

func (v NullableInstitution) IsSet() bool {
	return v.isSet
}

func (v *NullableInstitution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstitution(val *Institution) *NullableInstitution {
	return &NullableInstitution{value: val, isSet: true}
}

func (v NullableInstitution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstitution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
