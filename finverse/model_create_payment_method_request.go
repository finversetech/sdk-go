/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"fmt"
)

// checks if the CreatePaymentMethodRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePaymentMethodRequest{}

// CreatePaymentMethodRequest struct for CreatePaymentMethodRequest
type CreatePaymentMethodRequest struct {
	Card                 *CreateCardRequest                    `json:"card,omitempty"`
	Mandate              *CreateMandateRequestWithDdaReference `json:"mandate,omitempty"`
	IntegrationMetadata  *PaymentMethodIntegrationMetadata     `json:"integration_metadata,omitempty"`
	PaymentMethodType    string                                `json:"payment_method_type"`
	AdditionalProperties map[string]interface{}
}

type _CreatePaymentMethodRequest CreatePaymentMethodRequest

// NewCreatePaymentMethodRequest instantiates a new CreatePaymentMethodRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePaymentMethodRequest(paymentMethodType string) *CreatePaymentMethodRequest {
	this := CreatePaymentMethodRequest{}
	this.PaymentMethodType = paymentMethodType
	return &this
}

// NewCreatePaymentMethodRequestWithDefaults instantiates a new CreatePaymentMethodRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePaymentMethodRequestWithDefaults() *CreatePaymentMethodRequest {
	this := CreatePaymentMethodRequest{}
	return &this
}

// GetCard returns the Card field value if set, zero value otherwise.
func (o *CreatePaymentMethodRequest) GetCard() CreateCardRequest {
	if o == nil || IsNil(o.Card) {
		var ret CreateCardRequest
		return ret
	}
	return *o.Card
}

// GetCardOk returns a tuple with the Card field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentMethodRequest) GetCardOk() (*CreateCardRequest, bool) {
	if o == nil || IsNil(o.Card) {
		return nil, false
	}
	return o.Card, true
}

// HasCard returns a boolean if a field has been set.
func (o *CreatePaymentMethodRequest) HasCard() bool {
	if o != nil && !IsNil(o.Card) {
		return true
	}

	return false
}

// SetCard gets a reference to the given CreateCardRequest and assigns it to the Card field.
func (o *CreatePaymentMethodRequest) SetCard(v CreateCardRequest) {
	o.Card = &v
}

// GetMandate returns the Mandate field value if set, zero value otherwise.
func (o *CreatePaymentMethodRequest) GetMandate() CreateMandateRequestWithDdaReference {
	if o == nil || IsNil(o.Mandate) {
		var ret CreateMandateRequestWithDdaReference
		return ret
	}
	return *o.Mandate
}

// GetMandateOk returns a tuple with the Mandate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentMethodRequest) GetMandateOk() (*CreateMandateRequestWithDdaReference, bool) {
	if o == nil || IsNil(o.Mandate) {
		return nil, false
	}
	return o.Mandate, true
}

// HasMandate returns a boolean if a field has been set.
func (o *CreatePaymentMethodRequest) HasMandate() bool {
	if o != nil && !IsNil(o.Mandate) {
		return true
	}

	return false
}

// SetMandate gets a reference to the given CreateMandateRequestWithDdaReference and assigns it to the Mandate field.
func (o *CreatePaymentMethodRequest) SetMandate(v CreateMandateRequestWithDdaReference) {
	o.Mandate = &v
}

// GetIntegrationMetadata returns the IntegrationMetadata field value if set, zero value otherwise.
func (o *CreatePaymentMethodRequest) GetIntegrationMetadata() PaymentMethodIntegrationMetadata {
	if o == nil || IsNil(o.IntegrationMetadata) {
		var ret PaymentMethodIntegrationMetadata
		return ret
	}
	return *o.IntegrationMetadata
}

// GetIntegrationMetadataOk returns a tuple with the IntegrationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentMethodRequest) GetIntegrationMetadataOk() (*PaymentMethodIntegrationMetadata, bool) {
	if o == nil || IsNil(o.IntegrationMetadata) {
		return nil, false
	}
	return o.IntegrationMetadata, true
}

// HasIntegrationMetadata returns a boolean if a field has been set.
func (o *CreatePaymentMethodRequest) HasIntegrationMetadata() bool {
	if o != nil && !IsNil(o.IntegrationMetadata) {
		return true
	}

	return false
}

// SetIntegrationMetadata gets a reference to the given PaymentMethodIntegrationMetadata and assigns it to the IntegrationMetadata field.
func (o *CreatePaymentMethodRequest) SetIntegrationMetadata(v PaymentMethodIntegrationMetadata) {
	o.IntegrationMetadata = &v
}

// GetPaymentMethodType returns the PaymentMethodType field value
func (o *CreatePaymentMethodRequest) GetPaymentMethodType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentMethodType
}

// GetPaymentMethodTypeOk returns a tuple with the PaymentMethodType field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentMethodRequest) GetPaymentMethodTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethodType, true
}

// SetPaymentMethodType sets field value
func (o *CreatePaymentMethodRequest) SetPaymentMethodType(v string) {
	o.PaymentMethodType = v
}

func (o CreatePaymentMethodRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePaymentMethodRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Card) {
		toSerialize["card"] = o.Card
	}
	if !IsNil(o.Mandate) {
		toSerialize["mandate"] = o.Mandate
	}
	if !IsNil(o.IntegrationMetadata) {
		toSerialize["integration_metadata"] = o.IntegrationMetadata
	}
	toSerialize["payment_method_type"] = o.PaymentMethodType

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreatePaymentMethodRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"payment_method_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreatePaymentMethodRequest := _CreatePaymentMethodRequest{}

	err = json.Unmarshal(data, &varCreatePaymentMethodRequest)

	if err != nil {
		return err
	}

	*o = CreatePaymentMethodRequest(varCreatePaymentMethodRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "card")
		delete(additionalProperties, "mandate")
		delete(additionalProperties, "integration_metadata")
		delete(additionalProperties, "payment_method_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreatePaymentMethodRequest struct {
	value *CreatePaymentMethodRequest
	isSet bool
}

func (v NullableCreatePaymentMethodRequest) Get() *CreatePaymentMethodRequest {
	return v.value
}

func (v *NullableCreatePaymentMethodRequest) Set(val *CreatePaymentMethodRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePaymentMethodRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePaymentMethodRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePaymentMethodRequest(val *CreatePaymentMethodRequest) *NullableCreatePaymentMethodRequest {
	return &NullableCreatePaymentMethodRequest{value: val, isSet: true}
}

func (v NullableCreatePaymentMethodRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePaymentMethodRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
