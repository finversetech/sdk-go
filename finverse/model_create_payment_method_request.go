/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// CreatePaymentMethodRequest struct for CreatePaymentMethodRequest
type CreatePaymentMethodRequest struct {
	Card                CreateCardRequest                `json:"card"`
	IntegrationMetadata PaymentMethodIntegrationMetadata `json:"integration_metadata"`
	PaymentMethodType   string                           `json:"payment_method_type"`
}

// NewCreatePaymentMethodRequest instantiates a new CreatePaymentMethodRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePaymentMethodRequest(card CreateCardRequest, integrationMetadata PaymentMethodIntegrationMetadata, paymentMethodType string) *CreatePaymentMethodRequest {
	this := CreatePaymentMethodRequest{}
	this.Card = card
	this.IntegrationMetadata = integrationMetadata
	this.PaymentMethodType = paymentMethodType
	return &this
}

// NewCreatePaymentMethodRequestWithDefaults instantiates a new CreatePaymentMethodRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePaymentMethodRequestWithDefaults() *CreatePaymentMethodRequest {
	this := CreatePaymentMethodRequest{}
	return &this
}

// GetCard returns the Card field value
func (o *CreatePaymentMethodRequest) GetCard() CreateCardRequest {
	if o == nil {
		var ret CreateCardRequest
		return ret
	}

	return o.Card
}

// GetCardOk returns a tuple with the Card field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentMethodRequest) GetCardOk() (*CreateCardRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Card, true
}

// SetCard sets field value
func (o *CreatePaymentMethodRequest) SetCard(v CreateCardRequest) {
	o.Card = v
}

// GetIntegrationMetadata returns the IntegrationMetadata field value
func (o *CreatePaymentMethodRequest) GetIntegrationMetadata() PaymentMethodIntegrationMetadata {
	if o == nil {
		var ret PaymentMethodIntegrationMetadata
		return ret
	}

	return o.IntegrationMetadata
}

// GetIntegrationMetadataOk returns a tuple with the IntegrationMetadata field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentMethodRequest) GetIntegrationMetadataOk() (*PaymentMethodIntegrationMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationMetadata, true
}

// SetIntegrationMetadata sets field value
func (o *CreatePaymentMethodRequest) SetIntegrationMetadata(v PaymentMethodIntegrationMetadata) {
	o.IntegrationMetadata = v
}

// GetPaymentMethodType returns the PaymentMethodType field value
func (o *CreatePaymentMethodRequest) GetPaymentMethodType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentMethodType
}

// GetPaymentMethodTypeOk returns a tuple with the PaymentMethodType field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentMethodRequest) GetPaymentMethodTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethodType, true
}

// SetPaymentMethodType sets field value
func (o *CreatePaymentMethodRequest) SetPaymentMethodType(v string) {
	o.PaymentMethodType = v
}

func (o CreatePaymentMethodRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["card"] = o.Card
	}
	if true {
		toSerialize["integration_metadata"] = o.IntegrationMetadata
	}
	if true {
		toSerialize["payment_method_type"] = o.PaymentMethodType
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePaymentMethodRequest struct {
	value *CreatePaymentMethodRequest
	isSet bool
}

func (v NullableCreatePaymentMethodRequest) Get() *CreatePaymentMethodRequest {
	return v.value
}

func (v *NullableCreatePaymentMethodRequest) Set(val *CreatePaymentMethodRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePaymentMethodRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePaymentMethodRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePaymentMethodRequest(val *CreatePaymentMethodRequest) *NullableCreatePaymentMethodRequest {
	return &NullableCreatePaymentMethodRequest{value: val, isSet: true}
}

func (v NullableCreatePaymentMethodRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePaymentMethodRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
