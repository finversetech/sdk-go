/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// FVCardDetails struct for FVCardDetails
type FVCardDetails struct {
	// The credit card brand
	Brand *string `json:"brand,omitempty"`
	// Last 4 digits of the credit card number
	Last4 *string `json:"last4,omitempty"`
}

// NewFVCardDetails instantiates a new FVCardDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFVCardDetails() *FVCardDetails {
	this := FVCardDetails{}
	return &this
}

// NewFVCardDetailsWithDefaults instantiates a new FVCardDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFVCardDetailsWithDefaults() *FVCardDetails {
	this := FVCardDetails{}
	return &this
}

// GetBrand returns the Brand field value if set, zero value otherwise.
func (o *FVCardDetails) GetBrand() string {
	if o == nil || o.Brand == nil {
		var ret string
		return ret
	}
	return *o.Brand
}

// GetBrandOk returns a tuple with the Brand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FVCardDetails) GetBrandOk() (*string, bool) {
	if o == nil || o.Brand == nil {
		return nil, false
	}
	return o.Brand, true
}

// HasBrand returns a boolean if a field has been set.
func (o *FVCardDetails) HasBrand() bool {
	if o != nil && o.Brand != nil {
		return true
	}

	return false
}

// SetBrand gets a reference to the given string and assigns it to the Brand field.
func (o *FVCardDetails) SetBrand(v string) {
	o.Brand = &v
}

// GetLast4 returns the Last4 field value if set, zero value otherwise.
func (o *FVCardDetails) GetLast4() string {
	if o == nil || o.Last4 == nil {
		var ret string
		return ret
	}
	return *o.Last4
}

// GetLast4Ok returns a tuple with the Last4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FVCardDetails) GetLast4Ok() (*string, bool) {
	if o == nil || o.Last4 == nil {
		return nil, false
	}
	return o.Last4, true
}

// HasLast4 returns a boolean if a field has been set.
func (o *FVCardDetails) HasLast4() bool {
	if o != nil && o.Last4 != nil {
		return true
	}

	return false
}

// SetLast4 gets a reference to the given string and assigns it to the Last4 field.
func (o *FVCardDetails) SetLast4(v string) {
	o.Last4 = &v
}

func (o FVCardDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Brand != nil {
		toSerialize["brand"] = o.Brand
	}
	if o.Last4 != nil {
		toSerialize["last4"] = o.Last4
	}
	return json.Marshal(toSerialize)
}

type NullableFVCardDetails struct {
	value *FVCardDetails
	isSet bool
}

func (v NullableFVCardDetails) Get() *FVCardDetails {
	return v.value
}

func (v *NullableFVCardDetails) Set(val *FVCardDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableFVCardDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableFVCardDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFVCardDetails(val *FVCardDetails) *NullableFVCardDetails {
	return &NullableFVCardDetails{value: val, isSet: true}
}

func (v NullableFVCardDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFVCardDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
