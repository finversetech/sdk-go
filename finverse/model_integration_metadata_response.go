/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// IntegrationMetadataResponse struct for IntegrationMetadataResponse
type IntegrationMetadataResponse struct {
	IntegrationId     *string                    `json:"integration_id,omitempty"`
	RapidstorMetadata *RapidstorMetadataResponse `json:"rapidstor_metadata,omitempty"`
}

// NewIntegrationMetadataResponse instantiates a new IntegrationMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationMetadataResponse() *IntegrationMetadataResponse {
	this := IntegrationMetadataResponse{}
	return &this
}

// NewIntegrationMetadataResponseWithDefaults instantiates a new IntegrationMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationMetadataResponseWithDefaults() *IntegrationMetadataResponse {
	this := IntegrationMetadataResponse{}
	return &this
}

// GetIntegrationId returns the IntegrationId field value if set, zero value otherwise.
func (o *IntegrationMetadataResponse) GetIntegrationId() string {
	if o == nil || o.IntegrationId == nil {
		var ret string
		return ret
	}
	return *o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationMetadataResponse) GetIntegrationIdOk() (*string, bool) {
	if o == nil || o.IntegrationId == nil {
		return nil, false
	}
	return o.IntegrationId, true
}

// HasIntegrationId returns a boolean if a field has been set.
func (o *IntegrationMetadataResponse) HasIntegrationId() bool {
	if o != nil && o.IntegrationId != nil {
		return true
	}

	return false
}

// SetIntegrationId gets a reference to the given string and assigns it to the IntegrationId field.
func (o *IntegrationMetadataResponse) SetIntegrationId(v string) {
	o.IntegrationId = &v
}

// GetRapidstorMetadata returns the RapidstorMetadata field value if set, zero value otherwise.
func (o *IntegrationMetadataResponse) GetRapidstorMetadata() RapidstorMetadataResponse {
	if o == nil || o.RapidstorMetadata == nil {
		var ret RapidstorMetadataResponse
		return ret
	}
	return *o.RapidstorMetadata
}

// GetRapidstorMetadataOk returns a tuple with the RapidstorMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationMetadataResponse) GetRapidstorMetadataOk() (*RapidstorMetadataResponse, bool) {
	if o == nil || o.RapidstorMetadata == nil {
		return nil, false
	}
	return o.RapidstorMetadata, true
}

// HasRapidstorMetadata returns a boolean if a field has been set.
func (o *IntegrationMetadataResponse) HasRapidstorMetadata() bool {
	if o != nil && o.RapidstorMetadata != nil {
		return true
	}

	return false
}

// SetRapidstorMetadata gets a reference to the given RapidstorMetadataResponse and assigns it to the RapidstorMetadata field.
func (o *IntegrationMetadataResponse) SetRapidstorMetadata(v RapidstorMetadataResponse) {
	o.RapidstorMetadata = &v
}

func (o IntegrationMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IntegrationId != nil {
		toSerialize["integration_id"] = o.IntegrationId
	}
	if o.RapidstorMetadata != nil {
		toSerialize["rapidstor_metadata"] = o.RapidstorMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableIntegrationMetadataResponse struct {
	value *IntegrationMetadataResponse
	isSet bool
}

func (v NullableIntegrationMetadataResponse) Get() *IntegrationMetadataResponse {
	return v.value
}

func (v *NullableIntegrationMetadataResponse) Set(val *IntegrationMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationMetadataResponse(val *IntegrationMetadataResponse) *NullableIntegrationMetadataResponse {
	return &NullableIntegrationMetadataResponse{value: val, isSet: true}
}

func (v NullableIntegrationMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
