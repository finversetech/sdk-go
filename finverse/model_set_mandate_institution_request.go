/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"fmt"
)

// checks if the SetMandateInstitutionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetMandateInstitutionRequest{}

// SetMandateInstitutionRequest struct for SetMandateInstitutionRequest
type SetMandateInstitutionRequest struct {
	// Finverse Institution ID
	InstitutionId        string `json:"institution_id"`
	AdditionalProperties map[string]interface{}
}

type _SetMandateInstitutionRequest SetMandateInstitutionRequest

// NewSetMandateInstitutionRequest instantiates a new SetMandateInstitutionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetMandateInstitutionRequest(institutionId string) *SetMandateInstitutionRequest {
	this := SetMandateInstitutionRequest{}
	this.InstitutionId = institutionId
	return &this
}

// NewSetMandateInstitutionRequestWithDefaults instantiates a new SetMandateInstitutionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetMandateInstitutionRequestWithDefaults() *SetMandateInstitutionRequest {
	this := SetMandateInstitutionRequest{}
	return &this
}

// GetInstitutionId returns the InstitutionId field value
func (o *SetMandateInstitutionRequest) GetInstitutionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value
// and a boolean to check if the value has been set.
func (o *SetMandateInstitutionRequest) GetInstitutionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstitutionId, true
}

// SetInstitutionId sets field value
func (o *SetMandateInstitutionRequest) SetInstitutionId(v string) {
	o.InstitutionId = v
}

func (o SetMandateInstitutionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetMandateInstitutionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["institution_id"] = o.InstitutionId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SetMandateInstitutionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"institution_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetMandateInstitutionRequest := _SetMandateInstitutionRequest{}

	err = json.Unmarshal(data, &varSetMandateInstitutionRequest)

	if err != nil {
		return err
	}

	*o = SetMandateInstitutionRequest(varSetMandateInstitutionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "institution_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSetMandateInstitutionRequest struct {
	value *SetMandateInstitutionRequest
	isSet bool
}

func (v NullableSetMandateInstitutionRequest) Get() *SetMandateInstitutionRequest {
	return v.value
}

func (v *NullableSetMandateInstitutionRequest) Set(val *SetMandateInstitutionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetMandateInstitutionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetMandateInstitutionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetMandateInstitutionRequest(val *SetMandateInstitutionRequest) *NullableSetMandateInstitutionRequest {
	return &NullableSetMandateInstitutionRequest{value: val, isSet: true}
}

func (v NullableSetMandateInstitutionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetMandateInstitutionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
