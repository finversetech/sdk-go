/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// MandateSenderAccount struct for MandateSenderAccount
type MandateSenderAccount struct {
	// A unique identifier generated after creating sender account
	AccountId *string `json:"account_id,omitempty"`
	// Accountholder name of the sender's account
	AccountholderName *string                 `json:"accountholder_name,omitempty"`
	AccountNumber     *RecipientAccountNumber `json:"account_number,omitempty"`
	// Masked Account number of the sender’s account
	AccountNumberMasked *string `json:"account_number_masked,omitempty"`
	// Type of sender account.
	AccountType *string `json:"account_type,omitempty"`
	// Finverse Institution ID for the sender’s institution.
	InstitutionId *string `json:"institution_id,omitempty"`
	// A unique identifier generated after creating sender (Finverse Payment User ID)
	UserId *string `json:"user_id,omitempty"`
	// Additional attributes of the sender account in key:value format (e.g. sender_id: 1234). It supports up to 10 key:value pairs, whereas the key and value supports up to 50 and 500 characters respectively.
	Metadata *map[string]string `json:"metadata,omitempty"`
}

// NewMandateSenderAccount instantiates a new MandateSenderAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMandateSenderAccount() *MandateSenderAccount {
	this := MandateSenderAccount{}
	return &this
}

// NewMandateSenderAccountWithDefaults instantiates a new MandateSenderAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMandateSenderAccountWithDefaults() *MandateSenderAccount {
	this := MandateSenderAccount{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *MandateSenderAccount) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateSenderAccount) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *MandateSenderAccount) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *MandateSenderAccount) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAccountholderName returns the AccountholderName field value if set, zero value otherwise.
func (o *MandateSenderAccount) GetAccountholderName() string {
	if o == nil || o.AccountholderName == nil {
		var ret string
		return ret
	}
	return *o.AccountholderName
}

// GetAccountholderNameOk returns a tuple with the AccountholderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateSenderAccount) GetAccountholderNameOk() (*string, bool) {
	if o == nil || o.AccountholderName == nil {
		return nil, false
	}
	return o.AccountholderName, true
}

// HasAccountholderName returns a boolean if a field has been set.
func (o *MandateSenderAccount) HasAccountholderName() bool {
	if o != nil && o.AccountholderName != nil {
		return true
	}

	return false
}

// SetAccountholderName gets a reference to the given string and assigns it to the AccountholderName field.
func (o *MandateSenderAccount) SetAccountholderName(v string) {
	o.AccountholderName = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *MandateSenderAccount) GetAccountNumber() RecipientAccountNumber {
	if o == nil || o.AccountNumber == nil {
		var ret RecipientAccountNumber
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateSenderAccount) GetAccountNumberOk() (*RecipientAccountNumber, bool) {
	if o == nil || o.AccountNumber == nil {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *MandateSenderAccount) HasAccountNumber() bool {
	if o != nil && o.AccountNumber != nil {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given RecipientAccountNumber and assigns it to the AccountNumber field.
func (o *MandateSenderAccount) SetAccountNumber(v RecipientAccountNumber) {
	o.AccountNumber = &v
}

// GetAccountNumberMasked returns the AccountNumberMasked field value if set, zero value otherwise.
func (o *MandateSenderAccount) GetAccountNumberMasked() string {
	if o == nil || o.AccountNumberMasked == nil {
		var ret string
		return ret
	}
	return *o.AccountNumberMasked
}

// GetAccountNumberMaskedOk returns a tuple with the AccountNumberMasked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateSenderAccount) GetAccountNumberMaskedOk() (*string, bool) {
	if o == nil || o.AccountNumberMasked == nil {
		return nil, false
	}
	return o.AccountNumberMasked, true
}

// HasAccountNumberMasked returns a boolean if a field has been set.
func (o *MandateSenderAccount) HasAccountNumberMasked() bool {
	if o != nil && o.AccountNumberMasked != nil {
		return true
	}

	return false
}

// SetAccountNumberMasked gets a reference to the given string and assigns it to the AccountNumberMasked field.
func (o *MandateSenderAccount) SetAccountNumberMasked(v string) {
	o.AccountNumberMasked = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *MandateSenderAccount) GetAccountType() string {
	if o == nil || o.AccountType == nil {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateSenderAccount) GetAccountTypeOk() (*string, bool) {
	if o == nil || o.AccountType == nil {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *MandateSenderAccount) HasAccountType() bool {
	if o != nil && o.AccountType != nil {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *MandateSenderAccount) SetAccountType(v string) {
	o.AccountType = &v
}

// GetInstitutionId returns the InstitutionId field value if set, zero value otherwise.
func (o *MandateSenderAccount) GetInstitutionId() string {
	if o == nil || o.InstitutionId == nil {
		var ret string
		return ret
	}
	return *o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateSenderAccount) GetInstitutionIdOk() (*string, bool) {
	if o == nil || o.InstitutionId == nil {
		return nil, false
	}
	return o.InstitutionId, true
}

// HasInstitutionId returns a boolean if a field has been set.
func (o *MandateSenderAccount) HasInstitutionId() bool {
	if o != nil && o.InstitutionId != nil {
		return true
	}

	return false
}

// SetInstitutionId gets a reference to the given string and assigns it to the InstitutionId field.
func (o *MandateSenderAccount) SetInstitutionId(v string) {
	o.InstitutionId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *MandateSenderAccount) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateSenderAccount) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *MandateSenderAccount) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *MandateSenderAccount) SetUserId(v string) {
	o.UserId = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *MandateSenderAccount) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateSenderAccount) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *MandateSenderAccount) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *MandateSenderAccount) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

func (o MandateSenderAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["account_id"] = o.AccountId
	}
	if o.AccountholderName != nil {
		toSerialize["accountholder_name"] = o.AccountholderName
	}
	if o.AccountNumber != nil {
		toSerialize["account_number"] = o.AccountNumber
	}
	if o.AccountNumberMasked != nil {
		toSerialize["account_number_masked"] = o.AccountNumberMasked
	}
	if o.AccountType != nil {
		toSerialize["account_type"] = o.AccountType
	}
	if o.InstitutionId != nil {
		toSerialize["institution_id"] = o.InstitutionId
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableMandateSenderAccount struct {
	value *MandateSenderAccount
	isSet bool
}

func (v NullableMandateSenderAccount) Get() *MandateSenderAccount {
	return v.value
}

func (v *NullableMandateSenderAccount) Set(val *MandateSenderAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableMandateSenderAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableMandateSenderAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMandateSenderAccount(val *MandateSenderAccount) *NullableMandateSenderAccount {
	return &NullableMandateSenderAccount{value: val, isSet: true}
}

func (v NullableMandateSenderAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMandateSenderAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
