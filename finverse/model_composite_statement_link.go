/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"time"
)

// CompositeStatementLink struct for CompositeStatementLink
type CompositeStatementLink struct {
	// signedURL to download statement
	Url string `json:"url"`
	// expiry of the signedURL
	Expiry time.Time `json:"expiry"`
}

// NewCompositeStatementLink instantiates a new CompositeStatementLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompositeStatementLink(url string, expiry time.Time) *CompositeStatementLink {
	this := CompositeStatementLink{}
	this.Url = url
	this.Expiry = expiry
	return &this
}

// NewCompositeStatementLinkWithDefaults instantiates a new CompositeStatementLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompositeStatementLinkWithDefaults() *CompositeStatementLink {
	this := CompositeStatementLink{}
	return &this
}

// GetUrl returns the Url field value
func (o *CompositeStatementLink) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CompositeStatementLink) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CompositeStatementLink) SetUrl(v string) {
	o.Url = v
}

// GetExpiry returns the Expiry field value
func (o *CompositeStatementLink) GetExpiry() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value
// and a boolean to check if the value has been set.
func (o *CompositeStatementLink) GetExpiryOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expiry, true
}

// SetExpiry sets field value
func (o *CompositeStatementLink) SetExpiry(v time.Time) {
	o.Expiry = v
}

func (o CompositeStatementLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["expiry"] = o.Expiry
	}
	return json.Marshal(toSerialize)
}

type NullableCompositeStatementLink struct {
	value *CompositeStatementLink
	isSet bool
}

func (v NullableCompositeStatementLink) Get() *CompositeStatementLink {
	return v.value
}

func (v *NullableCompositeStatementLink) Set(val *CompositeStatementLink) {
	v.value = val
	v.isSet = true
}

func (v NullableCompositeStatementLink) IsSet() bool {
	return v.isSet
}

func (v *NullableCompositeStatementLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompositeStatementLink(val *CompositeStatementLink) *NullableCompositeStatementLink {
	return &NullableCompositeStatementLink{value: val, isSet: true}
}

func (v NullableCompositeStatementLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompositeStatementLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
