/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// GetJWKSResponse struct for GetJWKSResponse
type GetJWKSResponse struct {
	Keys []JWKSKey `json:"keys,omitempty"`
}

// NewGetJWKSResponse instantiates a new GetJWKSResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetJWKSResponse() *GetJWKSResponse {
	this := GetJWKSResponse{}
	return &this
}

// NewGetJWKSResponseWithDefaults instantiates a new GetJWKSResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetJWKSResponseWithDefaults() *GetJWKSResponse {
	this := GetJWKSResponse{}
	return &this
}

// GetKeys returns the Keys field value if set, zero value otherwise.
func (o *GetJWKSResponse) GetKeys() []JWKSKey {
	if o == nil || o.Keys == nil {
		var ret []JWKSKey
		return ret
	}
	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetJWKSResponse) GetKeysOk() ([]JWKSKey, bool) {
	if o == nil || o.Keys == nil {
		return nil, false
	}
	return o.Keys, true
}

// HasKeys returns a boolean if a field has been set.
func (o *GetJWKSResponse) HasKeys() bool {
	if o != nil && o.Keys != nil {
		return true
	}

	return false
}

// SetKeys gets a reference to the given []JWKSKey and assigns it to the Keys field.
func (o *GetJWKSResponse) SetKeys(v []JWKSKey) {
	o.Keys = v
}

func (o GetJWKSResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Keys != nil {
		toSerialize["keys"] = o.Keys
	}
	return json.Marshal(toSerialize)
}

type NullableGetJWKSResponse struct {
	value *GetJWKSResponse
	isSet bool
}

func (v NullableGetJWKSResponse) Get() *GetJWKSResponse {
	return v.value
}

func (v *NullableGetJWKSResponse) Set(val *GetJWKSResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetJWKSResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetJWKSResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetJWKSResponse(val *GetJWKSResponse) *NullableGetJWKSResponse {
	return &NullableGetJWKSResponse{value: val, isSet: true}
}

func (v NullableGetJWKSResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetJWKSResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
