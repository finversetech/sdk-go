/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"fmt"
)

// checks if the TransactionLimitsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionLimitsResponse{}

// TransactionLimitsResponse struct for TransactionLimitsResponse
type TransactionLimitsResponse struct {
	// Maximum amount of money that can be paid during the reference period (across any number of transactions). Expressed in currency's smallest unit or “minor unit”, as defined in ISO 4217.
	MaxPeriodAmount *int32 `json:"max_period_amount,omitempty"`
	// Maximum number of transactions (of any amount) that can be executed during the reference period.
	MaxPeriodCount *int32 `json:"max_period_count,omitempty"`
	// The maximum amount of money that can be transferred in a single transaction under this mandate. Expressed in currency's smallest unit or “minor unit”, as defined in ISO 4217.
	MaxTransactionAmount int32 `json:"max_transaction_amount"`
	// The maximum amount of money that can be transferred in a single transaction under this mandate set by the payer. Expressed in currency's smallest unit or “minor unit”, as defined in ISO 4217.
	MaxTransactionAmountSetByPayerInitial NullableInt32 `json:"max_transaction_amount_set_by_payer_initial,omitempty"`
	// Reference calendar periods for the payment limits. Possible values (DAILY, WEEKLY, MONTHLY, QUARTERLY, YEARLY)
	Period               NullableString `json:"period,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TransactionLimitsResponse TransactionLimitsResponse

// NewTransactionLimitsResponse instantiates a new TransactionLimitsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionLimitsResponse(maxTransactionAmount int32) *TransactionLimitsResponse {
	this := TransactionLimitsResponse{}
	this.MaxTransactionAmount = maxTransactionAmount
	return &this
}

// NewTransactionLimitsResponseWithDefaults instantiates a new TransactionLimitsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionLimitsResponseWithDefaults() *TransactionLimitsResponse {
	this := TransactionLimitsResponse{}
	return &this
}

// GetMaxPeriodAmount returns the MaxPeriodAmount field value if set, zero value otherwise.
func (o *TransactionLimitsResponse) GetMaxPeriodAmount() int32 {
	if o == nil || IsNil(o.MaxPeriodAmount) {
		var ret int32
		return ret
	}
	return *o.MaxPeriodAmount
}

// GetMaxPeriodAmountOk returns a tuple with the MaxPeriodAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLimitsResponse) GetMaxPeriodAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxPeriodAmount) {
		return nil, false
	}
	return o.MaxPeriodAmount, true
}

// HasMaxPeriodAmount returns a boolean if a field has been set.
func (o *TransactionLimitsResponse) HasMaxPeriodAmount() bool {
	if o != nil && !IsNil(o.MaxPeriodAmount) {
		return true
	}

	return false
}

// SetMaxPeriodAmount gets a reference to the given int32 and assigns it to the MaxPeriodAmount field.
func (o *TransactionLimitsResponse) SetMaxPeriodAmount(v int32) {
	o.MaxPeriodAmount = &v
}

// GetMaxPeriodCount returns the MaxPeriodCount field value if set, zero value otherwise.
func (o *TransactionLimitsResponse) GetMaxPeriodCount() int32 {
	if o == nil || IsNil(o.MaxPeriodCount) {
		var ret int32
		return ret
	}
	return *o.MaxPeriodCount
}

// GetMaxPeriodCountOk returns a tuple with the MaxPeriodCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionLimitsResponse) GetMaxPeriodCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxPeriodCount) {
		return nil, false
	}
	return o.MaxPeriodCount, true
}

// HasMaxPeriodCount returns a boolean if a field has been set.
func (o *TransactionLimitsResponse) HasMaxPeriodCount() bool {
	if o != nil && !IsNil(o.MaxPeriodCount) {
		return true
	}

	return false
}

// SetMaxPeriodCount gets a reference to the given int32 and assigns it to the MaxPeriodCount field.
func (o *TransactionLimitsResponse) SetMaxPeriodCount(v int32) {
	o.MaxPeriodCount = &v
}

// GetMaxTransactionAmount returns the MaxTransactionAmount field value
func (o *TransactionLimitsResponse) GetMaxTransactionAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxTransactionAmount
}

// GetMaxTransactionAmountOk returns a tuple with the MaxTransactionAmount field value
// and a boolean to check if the value has been set.
func (o *TransactionLimitsResponse) GetMaxTransactionAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxTransactionAmount, true
}

// SetMaxTransactionAmount sets field value
func (o *TransactionLimitsResponse) SetMaxTransactionAmount(v int32) {
	o.MaxTransactionAmount = v
}

// GetMaxTransactionAmountSetByPayerInitial returns the MaxTransactionAmountSetByPayerInitial field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionLimitsResponse) GetMaxTransactionAmountSetByPayerInitial() int32 {
	if o == nil || IsNil(o.MaxTransactionAmountSetByPayerInitial.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxTransactionAmountSetByPayerInitial.Get()
}

// GetMaxTransactionAmountSetByPayerInitialOk returns a tuple with the MaxTransactionAmountSetByPayerInitial field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionLimitsResponse) GetMaxTransactionAmountSetByPayerInitialOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxTransactionAmountSetByPayerInitial.Get(), o.MaxTransactionAmountSetByPayerInitial.IsSet()
}

// HasMaxTransactionAmountSetByPayerInitial returns a boolean if a field has been set.
func (o *TransactionLimitsResponse) HasMaxTransactionAmountSetByPayerInitial() bool {
	if o != nil && o.MaxTransactionAmountSetByPayerInitial.IsSet() {
		return true
	}

	return false
}

// SetMaxTransactionAmountSetByPayerInitial gets a reference to the given NullableInt32 and assigns it to the MaxTransactionAmountSetByPayerInitial field.
func (o *TransactionLimitsResponse) SetMaxTransactionAmountSetByPayerInitial(v int32) {
	o.MaxTransactionAmountSetByPayerInitial.Set(&v)
}

// SetMaxTransactionAmountSetByPayerInitialNil sets the value for MaxTransactionAmountSetByPayerInitial to be an explicit nil
func (o *TransactionLimitsResponse) SetMaxTransactionAmountSetByPayerInitialNil() {
	o.MaxTransactionAmountSetByPayerInitial.Set(nil)
}

// UnsetMaxTransactionAmountSetByPayerInitial ensures that no value is present for MaxTransactionAmountSetByPayerInitial, not even an explicit nil
func (o *TransactionLimitsResponse) UnsetMaxTransactionAmountSetByPayerInitial() {
	o.MaxTransactionAmountSetByPayerInitial.Unset()
}

// GetPeriod returns the Period field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionLimitsResponse) GetPeriod() string {
	if o == nil || IsNil(o.Period.Get()) {
		var ret string
		return ret
	}
	return *o.Period.Get()
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionLimitsResponse) GetPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Period.Get(), o.Period.IsSet()
}

// HasPeriod returns a boolean if a field has been set.
func (o *TransactionLimitsResponse) HasPeriod() bool {
	if o != nil && o.Period.IsSet() {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given NullableString and assigns it to the Period field.
func (o *TransactionLimitsResponse) SetPeriod(v string) {
	o.Period.Set(&v)
}

// SetPeriodNil sets the value for Period to be an explicit nil
func (o *TransactionLimitsResponse) SetPeriodNil() {
	o.Period.Set(nil)
}

// UnsetPeriod ensures that no value is present for Period, not even an explicit nil
func (o *TransactionLimitsResponse) UnsetPeriod() {
	o.Period.Unset()
}

func (o TransactionLimitsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionLimitsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxPeriodAmount) {
		toSerialize["max_period_amount"] = o.MaxPeriodAmount
	}
	if !IsNil(o.MaxPeriodCount) {
		toSerialize["max_period_count"] = o.MaxPeriodCount
	}
	toSerialize["max_transaction_amount"] = o.MaxTransactionAmount
	if o.MaxTransactionAmountSetByPayerInitial.IsSet() {
		toSerialize["max_transaction_amount_set_by_payer_initial"] = o.MaxTransactionAmountSetByPayerInitial.Get()
	}
	if o.Period.IsSet() {
		toSerialize["period"] = o.Period.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TransactionLimitsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"max_transaction_amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionLimitsResponse := _TransactionLimitsResponse{}

	err = json.Unmarshal(data, &varTransactionLimitsResponse)

	if err != nil {
		return err
	}

	*o = TransactionLimitsResponse(varTransactionLimitsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "max_period_amount")
		delete(additionalProperties, "max_period_count")
		delete(additionalProperties, "max_transaction_amount")
		delete(additionalProperties, "max_transaction_amount_set_by_payer_initial")
		delete(additionalProperties, "period")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransactionLimitsResponse struct {
	value *TransactionLimitsResponse
	isSet bool
}

func (v NullableTransactionLimitsResponse) Get() *TransactionLimitsResponse {
	return v.value
}

func (v *NullableTransactionLimitsResponse) Set(val *TransactionLimitsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionLimitsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionLimitsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionLimitsResponse(val *TransactionLimitsResponse) *NullableTransactionLimitsResponse {
	return &NullableTransactionLimitsResponse{value: val, isSet: true}
}

func (v NullableTransactionLimitsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionLimitsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
