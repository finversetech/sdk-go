/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the NonSensitiveLinkStatusSuccessModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NonSensitiveLinkStatusSuccessModel{}

// NonSensitiveLinkStatusSuccessModel struct for NonSensitiveLinkStatusSuccessModel
type NonSensitiveLinkStatusSuccessModel struct {
	Code                 *string `json:"code,omitempty"`
	State                *string `json:"state,omitempty"`
	LoginIdentityId      *string `json:"login_identity_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NonSensitiveLinkStatusSuccessModel NonSensitiveLinkStatusSuccessModel

// NewNonSensitiveLinkStatusSuccessModel instantiates a new NonSensitiveLinkStatusSuccessModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNonSensitiveLinkStatusSuccessModel() *NonSensitiveLinkStatusSuccessModel {
	this := NonSensitiveLinkStatusSuccessModel{}
	return &this
}

// NewNonSensitiveLinkStatusSuccessModelWithDefaults instantiates a new NonSensitiveLinkStatusSuccessModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNonSensitiveLinkStatusSuccessModelWithDefaults() *NonSensitiveLinkStatusSuccessModel {
	this := NonSensitiveLinkStatusSuccessModel{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *NonSensitiveLinkStatusSuccessModel) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonSensitiveLinkStatusSuccessModel) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *NonSensitiveLinkStatusSuccessModel) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *NonSensitiveLinkStatusSuccessModel) SetCode(v string) {
	o.Code = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *NonSensitiveLinkStatusSuccessModel) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonSensitiveLinkStatusSuccessModel) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *NonSensitiveLinkStatusSuccessModel) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *NonSensitiveLinkStatusSuccessModel) SetState(v string) {
	o.State = &v
}

// GetLoginIdentityId returns the LoginIdentityId field value if set, zero value otherwise.
func (o *NonSensitiveLinkStatusSuccessModel) GetLoginIdentityId() string {
	if o == nil || IsNil(o.LoginIdentityId) {
		var ret string
		return ret
	}
	return *o.LoginIdentityId
}

// GetLoginIdentityIdOk returns a tuple with the LoginIdentityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonSensitiveLinkStatusSuccessModel) GetLoginIdentityIdOk() (*string, bool) {
	if o == nil || IsNil(o.LoginIdentityId) {
		return nil, false
	}
	return o.LoginIdentityId, true
}

// HasLoginIdentityId returns a boolean if a field has been set.
func (o *NonSensitiveLinkStatusSuccessModel) HasLoginIdentityId() bool {
	if o != nil && !IsNil(o.LoginIdentityId) {
		return true
	}

	return false
}

// SetLoginIdentityId gets a reference to the given string and assigns it to the LoginIdentityId field.
func (o *NonSensitiveLinkStatusSuccessModel) SetLoginIdentityId(v string) {
	o.LoginIdentityId = &v
}

func (o NonSensitiveLinkStatusSuccessModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NonSensitiveLinkStatusSuccessModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.LoginIdentityId) {
		toSerialize["login_identity_id"] = o.LoginIdentityId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NonSensitiveLinkStatusSuccessModel) UnmarshalJSON(data []byte) (err error) {
	varNonSensitiveLinkStatusSuccessModel := _NonSensitiveLinkStatusSuccessModel{}

	err = json.Unmarshal(data, &varNonSensitiveLinkStatusSuccessModel)

	if err != nil {
		return err
	}

	*o = NonSensitiveLinkStatusSuccessModel(varNonSensitiveLinkStatusSuccessModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "state")
		delete(additionalProperties, "login_identity_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNonSensitiveLinkStatusSuccessModel struct {
	value *NonSensitiveLinkStatusSuccessModel
	isSet bool
}

func (v NullableNonSensitiveLinkStatusSuccessModel) Get() *NonSensitiveLinkStatusSuccessModel {
	return v.value
}

func (v *NullableNonSensitiveLinkStatusSuccessModel) Set(val *NonSensitiveLinkStatusSuccessModel) {
	v.value = val
	v.isSet = true
}

func (v NullableNonSensitiveLinkStatusSuccessModel) IsSet() bool {
	return v.isSet
}

func (v *NullableNonSensitiveLinkStatusSuccessModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNonSensitiveLinkStatusSuccessModel(val *NonSensitiveLinkStatusSuccessModel) *NullableNonSensitiveLinkStatusSuccessModel {
	return &NullableNonSensitiveLinkStatusSuccessModel{value: val, isSet: true}
}

func (v NullableNonSensitiveLinkStatusSuccessModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNonSensitiveLinkStatusSuccessModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
