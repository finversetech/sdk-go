/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// PaymentSchedule struct for PaymentSchedule
type PaymentSchedule struct {
	// Amount to be paid, in currency’s smallest unit or “minor unit”, as defined in ISO 4217. For example, HKD 100.01 is represented as amount = 10001 (minor unit = cents). For currencies without minor units (e.g. VND, JPY), the amount is represented as is, without modification. For example, VND 15101 is represented as amount = 15101.
	Amount float32 `json:"amount"`
	// Frequency of the payment. Possible values (DAILY, WEEKLY, MONTHLY, QUARTERLY, YEARLY)
	Frequency string `json:"frequency"`
}

// NewPaymentSchedule instantiates a new PaymentSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentSchedule(amount float32, frequency string) *PaymentSchedule {
	this := PaymentSchedule{}
	this.Amount = amount
	this.Frequency = frequency
	return &this
}

// NewPaymentScheduleWithDefaults instantiates a new PaymentSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentScheduleWithDefaults() *PaymentSchedule {
	this := PaymentSchedule{}
	return &this
}

// GetAmount returns the Amount field value
func (o *PaymentSchedule) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *PaymentSchedule) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *PaymentSchedule) SetAmount(v float32) {
	o.Amount = v
}

// GetFrequency returns the Frequency field value
func (o *PaymentSchedule) GetFrequency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value
// and a boolean to check if the value has been set.
func (o *PaymentSchedule) GetFrequencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Frequency, true
}

// SetFrequency sets field value
func (o *PaymentSchedule) SetFrequency(v string) {
	o.Frequency = v
}

func (o PaymentSchedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["frequency"] = o.Frequency
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentSchedule struct {
	value *PaymentSchedule
	isSet bool
}

func (v NullablePaymentSchedule) Get() *PaymentSchedule {
	return v.value
}

func (v *NullablePaymentSchedule) Set(val *PaymentSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentSchedule(val *PaymentSchedule) *NullablePaymentSchedule {
	return &NullablePaymentSchedule{value: val, isSet: true}
}

func (v NullablePaymentSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
