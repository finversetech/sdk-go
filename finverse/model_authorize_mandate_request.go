/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// AuthorizeMandateRequest struct for AuthorizeMandateRequest
type AuthorizeMandateRequest struct {
	// Whether a consent was provided by the enduser to authorize a mandate
	EnduserConsent bool `json:"enduser_consent"`
}

// NewAuthorizeMandateRequest instantiates a new AuthorizeMandateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizeMandateRequest(enduserConsent bool) *AuthorizeMandateRequest {
	this := AuthorizeMandateRequest{}
	this.EnduserConsent = enduserConsent
	return &this
}

// NewAuthorizeMandateRequestWithDefaults instantiates a new AuthorizeMandateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizeMandateRequestWithDefaults() *AuthorizeMandateRequest {
	this := AuthorizeMandateRequest{}
	return &this
}

// GetEnduserConsent returns the EnduserConsent field value
func (o *AuthorizeMandateRequest) GetEnduserConsent() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnduserConsent
}

// GetEnduserConsentOk returns a tuple with the EnduserConsent field value
// and a boolean to check if the value has been set.
func (o *AuthorizeMandateRequest) GetEnduserConsentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnduserConsent, true
}

// SetEnduserConsent sets field value
func (o *AuthorizeMandateRequest) SetEnduserConsent(v bool) {
	o.EnduserConsent = v
}

func (o AuthorizeMandateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enduser_consent"] = o.EnduserConsent
	}
	return json.Marshal(toSerialize)
}

type NullableAuthorizeMandateRequest struct {
	value *AuthorizeMandateRequest
	isSet bool
}

func (v NullableAuthorizeMandateRequest) Get() *AuthorizeMandateRequest {
	return v.value
}

func (v *NullableAuthorizeMandateRequest) Set(val *AuthorizeMandateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizeMandateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizeMandateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizeMandateRequest(val *AuthorizeMandateRequest) *NullableAuthorizeMandateRequest {
	return &NullableAuthorizeMandateRequest{value: val, isSet: true}
}

func (v NullableAuthorizeMandateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizeMandateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
