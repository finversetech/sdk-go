/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"fmt"
)

// checks if the Principal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Principal{}

// Principal struct for Principal
type Principal struct {
	Subject                   string                     `json:"subject"`
	Token                     *string                    `json:"token,omitempty"`
	ClientId                  string                     `json:"client_id"`
	CustomerAppId             string                     `json:"customer_app_id"`
	LoginIdentityId           string                     `json:"login_identity_id"`
	CustomizationId           *string                    `json:"customization_id,omitempty"`
	MandateId                 *string                    `json:"mandate_id,omitempty"`
	ExpiresIn                 *float32                   `json:"expires_in,omitempty"`
	PaymentAttemptId          *string                    `json:"payment_attempt_id,omitempty"`
	PaymentId                 *string                    `json:"payment_id,omitempty"`
	ProductFlow               *string                    `json:"product_flow,omitempty"`
	Scopes                    []string                   `json:"scopes,omitempty"`
	LinkTokenRequest          *LinkTokenRequest          `json:"link_token_request,omitempty"`
	GetMandateAuthLinkRequest *GetMandateAuthLinkRequest `json:"get_mandate_auth_link_request,omitempty"`
	Currency                  *string                    `json:"currency,omitempty"`
	RedirectUri               *string                    `json:"redirect_uri,omitempty"`
	PaymentLinkId             *string                    `json:"payment_link_id,omitempty"`
	UniqueReferenceId         *string                    `json:"unique_reference_id,omitempty"`
	PaymentMethodId           *string                    `json:"payment_method_id,omitempty"`
	TppName                   *string                    `json:"tpp_name,omitempty"`
	RetryUrl                  *string                    `json:"retry_url,omitempty"`
	OnboardingFlow            *string                    `json:"onboarding_flow,omitempty"`
	// The qrCode text to be used to generate the image
	QrCodeText            *string `json:"qr_code_text,omitempty"`
	ManualPaymentProvider *string `json:"manual_payment_provider,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _Principal Principal

// NewPrincipal instantiates a new Principal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrincipal(subject string, clientId string, customerAppId string, loginIdentityId string) *Principal {
	this := Principal{}
	this.Subject = subject
	this.ClientId = clientId
	this.CustomerAppId = customerAppId
	this.LoginIdentityId = loginIdentityId
	return &this
}

// NewPrincipalWithDefaults instantiates a new Principal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrincipalWithDefaults() *Principal {
	this := Principal{}
	return &this
}

// GetSubject returns the Subject field value
func (o *Principal) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *Principal) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *Principal) SetSubject(v string) {
	o.Subject = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *Principal) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *Principal) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *Principal) SetToken(v string) {
	o.Token = &v
}

// GetClientId returns the ClientId field value
func (o *Principal) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *Principal) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *Principal) SetClientId(v string) {
	o.ClientId = v
}

// GetCustomerAppId returns the CustomerAppId field value
func (o *Principal) GetCustomerAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerAppId
}

// GetCustomerAppIdOk returns a tuple with the CustomerAppId field value
// and a boolean to check if the value has been set.
func (o *Principal) GetCustomerAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerAppId, true
}

// SetCustomerAppId sets field value
func (o *Principal) SetCustomerAppId(v string) {
	o.CustomerAppId = v
}

// GetLoginIdentityId returns the LoginIdentityId field value
func (o *Principal) GetLoginIdentityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoginIdentityId
}

// GetLoginIdentityIdOk returns a tuple with the LoginIdentityId field value
// and a boolean to check if the value has been set.
func (o *Principal) GetLoginIdentityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoginIdentityId, true
}

// SetLoginIdentityId sets field value
func (o *Principal) SetLoginIdentityId(v string) {
	o.LoginIdentityId = v
}

// GetCustomizationId returns the CustomizationId field value if set, zero value otherwise.
func (o *Principal) GetCustomizationId() string {
	if o == nil || IsNil(o.CustomizationId) {
		var ret string
		return ret
	}
	return *o.CustomizationId
}

// GetCustomizationIdOk returns a tuple with the CustomizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetCustomizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomizationId) {
		return nil, false
	}
	return o.CustomizationId, true
}

// HasCustomizationId returns a boolean if a field has been set.
func (o *Principal) HasCustomizationId() bool {
	if o != nil && !IsNil(o.CustomizationId) {
		return true
	}

	return false
}

// SetCustomizationId gets a reference to the given string and assigns it to the CustomizationId field.
func (o *Principal) SetCustomizationId(v string) {
	o.CustomizationId = &v
}

// GetMandateId returns the MandateId field value if set, zero value otherwise.
func (o *Principal) GetMandateId() string {
	if o == nil || IsNil(o.MandateId) {
		var ret string
		return ret
	}
	return *o.MandateId
}

// GetMandateIdOk returns a tuple with the MandateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetMandateIdOk() (*string, bool) {
	if o == nil || IsNil(o.MandateId) {
		return nil, false
	}
	return o.MandateId, true
}

// HasMandateId returns a boolean if a field has been set.
func (o *Principal) HasMandateId() bool {
	if o != nil && !IsNil(o.MandateId) {
		return true
	}

	return false
}

// SetMandateId gets a reference to the given string and assigns it to the MandateId field.
func (o *Principal) SetMandateId(v string) {
	o.MandateId = &v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *Principal) GetExpiresIn() float32 {
	if o == nil || IsNil(o.ExpiresIn) {
		var ret float32
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetExpiresInOk() (*float32, bool) {
	if o == nil || IsNil(o.ExpiresIn) {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *Principal) HasExpiresIn() bool {
	if o != nil && !IsNil(o.ExpiresIn) {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given float32 and assigns it to the ExpiresIn field.
func (o *Principal) SetExpiresIn(v float32) {
	o.ExpiresIn = &v
}

// GetPaymentAttemptId returns the PaymentAttemptId field value if set, zero value otherwise.
func (o *Principal) GetPaymentAttemptId() string {
	if o == nil || IsNil(o.PaymentAttemptId) {
		var ret string
		return ret
	}
	return *o.PaymentAttemptId
}

// GetPaymentAttemptIdOk returns a tuple with the PaymentAttemptId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetPaymentAttemptIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentAttemptId) {
		return nil, false
	}
	return o.PaymentAttemptId, true
}

// HasPaymentAttemptId returns a boolean if a field has been set.
func (o *Principal) HasPaymentAttemptId() bool {
	if o != nil && !IsNil(o.PaymentAttemptId) {
		return true
	}

	return false
}

// SetPaymentAttemptId gets a reference to the given string and assigns it to the PaymentAttemptId field.
func (o *Principal) SetPaymentAttemptId(v string) {
	o.PaymentAttemptId = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *Principal) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *Principal) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *Principal) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetProductFlow returns the ProductFlow field value if set, zero value otherwise.
func (o *Principal) GetProductFlow() string {
	if o == nil || IsNil(o.ProductFlow) {
		var ret string
		return ret
	}
	return *o.ProductFlow
}

// GetProductFlowOk returns a tuple with the ProductFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetProductFlowOk() (*string, bool) {
	if o == nil || IsNil(o.ProductFlow) {
		return nil, false
	}
	return o.ProductFlow, true
}

// HasProductFlow returns a boolean if a field has been set.
func (o *Principal) HasProductFlow() bool {
	if o != nil && !IsNil(o.ProductFlow) {
		return true
	}

	return false
}

// SetProductFlow gets a reference to the given string and assigns it to the ProductFlow field.
func (o *Principal) SetProductFlow(v string) {
	o.ProductFlow = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *Principal) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *Principal) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *Principal) SetScopes(v []string) {
	o.Scopes = v
}

// GetLinkTokenRequest returns the LinkTokenRequest field value if set, zero value otherwise.
func (o *Principal) GetLinkTokenRequest() LinkTokenRequest {
	if o == nil || IsNil(o.LinkTokenRequest) {
		var ret LinkTokenRequest
		return ret
	}
	return *o.LinkTokenRequest
}

// GetLinkTokenRequestOk returns a tuple with the LinkTokenRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetLinkTokenRequestOk() (*LinkTokenRequest, bool) {
	if o == nil || IsNil(o.LinkTokenRequest) {
		return nil, false
	}
	return o.LinkTokenRequest, true
}

// HasLinkTokenRequest returns a boolean if a field has been set.
func (o *Principal) HasLinkTokenRequest() bool {
	if o != nil && !IsNil(o.LinkTokenRequest) {
		return true
	}

	return false
}

// SetLinkTokenRequest gets a reference to the given LinkTokenRequest and assigns it to the LinkTokenRequest field.
func (o *Principal) SetLinkTokenRequest(v LinkTokenRequest) {
	o.LinkTokenRequest = &v
}

// GetGetMandateAuthLinkRequest returns the GetMandateAuthLinkRequest field value if set, zero value otherwise.
func (o *Principal) GetGetMandateAuthLinkRequest() GetMandateAuthLinkRequest {
	if o == nil || IsNil(o.GetMandateAuthLinkRequest) {
		var ret GetMandateAuthLinkRequest
		return ret
	}
	return *o.GetMandateAuthLinkRequest
}

// GetGetMandateAuthLinkRequestOk returns a tuple with the GetMandateAuthLinkRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetGetMandateAuthLinkRequestOk() (*GetMandateAuthLinkRequest, bool) {
	if o == nil || IsNil(o.GetMandateAuthLinkRequest) {
		return nil, false
	}
	return o.GetMandateAuthLinkRequest, true
}

// HasGetMandateAuthLinkRequest returns a boolean if a field has been set.
func (o *Principal) HasGetMandateAuthLinkRequest() bool {
	if o != nil && !IsNil(o.GetMandateAuthLinkRequest) {
		return true
	}

	return false
}

// SetGetMandateAuthLinkRequest gets a reference to the given GetMandateAuthLinkRequest and assigns it to the GetMandateAuthLinkRequest field.
func (o *Principal) SetGetMandateAuthLinkRequest(v GetMandateAuthLinkRequest) {
	o.GetMandateAuthLinkRequest = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *Principal) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *Principal) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *Principal) SetCurrency(v string) {
	o.Currency = &v
}

// GetRedirectUri returns the RedirectUri field value if set, zero value otherwise.
func (o *Principal) GetRedirectUri() string {
	if o == nil || IsNil(o.RedirectUri) {
		var ret string
		return ret
	}
	return *o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetRedirectUriOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUri) {
		return nil, false
	}
	return o.RedirectUri, true
}

// HasRedirectUri returns a boolean if a field has been set.
func (o *Principal) HasRedirectUri() bool {
	if o != nil && !IsNil(o.RedirectUri) {
		return true
	}

	return false
}

// SetRedirectUri gets a reference to the given string and assigns it to the RedirectUri field.
func (o *Principal) SetRedirectUri(v string) {
	o.RedirectUri = &v
}

// GetPaymentLinkId returns the PaymentLinkId field value if set, zero value otherwise.
func (o *Principal) GetPaymentLinkId() string {
	if o == nil || IsNil(o.PaymentLinkId) {
		var ret string
		return ret
	}
	return *o.PaymentLinkId
}

// GetPaymentLinkIdOk returns a tuple with the PaymentLinkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetPaymentLinkIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentLinkId) {
		return nil, false
	}
	return o.PaymentLinkId, true
}

// HasPaymentLinkId returns a boolean if a field has been set.
func (o *Principal) HasPaymentLinkId() bool {
	if o != nil && !IsNil(o.PaymentLinkId) {
		return true
	}

	return false
}

// SetPaymentLinkId gets a reference to the given string and assigns it to the PaymentLinkId field.
func (o *Principal) SetPaymentLinkId(v string) {
	o.PaymentLinkId = &v
}

// GetUniqueReferenceId returns the UniqueReferenceId field value if set, zero value otherwise.
func (o *Principal) GetUniqueReferenceId() string {
	if o == nil || IsNil(o.UniqueReferenceId) {
		var ret string
		return ret
	}
	return *o.UniqueReferenceId
}

// GetUniqueReferenceIdOk returns a tuple with the UniqueReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetUniqueReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.UniqueReferenceId) {
		return nil, false
	}
	return o.UniqueReferenceId, true
}

// HasUniqueReferenceId returns a boolean if a field has been set.
func (o *Principal) HasUniqueReferenceId() bool {
	if o != nil && !IsNil(o.UniqueReferenceId) {
		return true
	}

	return false
}

// SetUniqueReferenceId gets a reference to the given string and assigns it to the UniqueReferenceId field.
func (o *Principal) SetUniqueReferenceId(v string) {
	o.UniqueReferenceId = &v
}

// GetPaymentMethodId returns the PaymentMethodId field value if set, zero value otherwise.
func (o *Principal) GetPaymentMethodId() string {
	if o == nil || IsNil(o.PaymentMethodId) {
		var ret string
		return ret
	}
	return *o.PaymentMethodId
}

// GetPaymentMethodIdOk returns a tuple with the PaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetPaymentMethodIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethodId) {
		return nil, false
	}
	return o.PaymentMethodId, true
}

// HasPaymentMethodId returns a boolean if a field has been set.
func (o *Principal) HasPaymentMethodId() bool {
	if o != nil && !IsNil(o.PaymentMethodId) {
		return true
	}

	return false
}

// SetPaymentMethodId gets a reference to the given string and assigns it to the PaymentMethodId field.
func (o *Principal) SetPaymentMethodId(v string) {
	o.PaymentMethodId = &v
}

// GetTppName returns the TppName field value if set, zero value otherwise.
func (o *Principal) GetTppName() string {
	if o == nil || IsNil(o.TppName) {
		var ret string
		return ret
	}
	return *o.TppName
}

// GetTppNameOk returns a tuple with the TppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetTppNameOk() (*string, bool) {
	if o == nil || IsNil(o.TppName) {
		return nil, false
	}
	return o.TppName, true
}

// HasTppName returns a boolean if a field has been set.
func (o *Principal) HasTppName() bool {
	if o != nil && !IsNil(o.TppName) {
		return true
	}

	return false
}

// SetTppName gets a reference to the given string and assigns it to the TppName field.
func (o *Principal) SetTppName(v string) {
	o.TppName = &v
}

// GetRetryUrl returns the RetryUrl field value if set, zero value otherwise.
func (o *Principal) GetRetryUrl() string {
	if o == nil || IsNil(o.RetryUrl) {
		var ret string
		return ret
	}
	return *o.RetryUrl
}

// GetRetryUrlOk returns a tuple with the RetryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetRetryUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RetryUrl) {
		return nil, false
	}
	return o.RetryUrl, true
}

// HasRetryUrl returns a boolean if a field has been set.
func (o *Principal) HasRetryUrl() bool {
	if o != nil && !IsNil(o.RetryUrl) {
		return true
	}

	return false
}

// SetRetryUrl gets a reference to the given string and assigns it to the RetryUrl field.
func (o *Principal) SetRetryUrl(v string) {
	o.RetryUrl = &v
}

// GetOnboardingFlow returns the OnboardingFlow field value if set, zero value otherwise.
func (o *Principal) GetOnboardingFlow() string {
	if o == nil || IsNil(o.OnboardingFlow) {
		var ret string
		return ret
	}
	return *o.OnboardingFlow
}

// GetOnboardingFlowOk returns a tuple with the OnboardingFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetOnboardingFlowOk() (*string, bool) {
	if o == nil || IsNil(o.OnboardingFlow) {
		return nil, false
	}
	return o.OnboardingFlow, true
}

// HasOnboardingFlow returns a boolean if a field has been set.
func (o *Principal) HasOnboardingFlow() bool {
	if o != nil && !IsNil(o.OnboardingFlow) {
		return true
	}

	return false
}

// SetOnboardingFlow gets a reference to the given string and assigns it to the OnboardingFlow field.
func (o *Principal) SetOnboardingFlow(v string) {
	o.OnboardingFlow = &v
}

// GetQrCodeText returns the QrCodeText field value if set, zero value otherwise.
func (o *Principal) GetQrCodeText() string {
	if o == nil || IsNil(o.QrCodeText) {
		var ret string
		return ret
	}
	return *o.QrCodeText
}

// GetQrCodeTextOk returns a tuple with the QrCodeText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetQrCodeTextOk() (*string, bool) {
	if o == nil || IsNil(o.QrCodeText) {
		return nil, false
	}
	return o.QrCodeText, true
}

// HasQrCodeText returns a boolean if a field has been set.
func (o *Principal) HasQrCodeText() bool {
	if o != nil && !IsNil(o.QrCodeText) {
		return true
	}

	return false
}

// SetQrCodeText gets a reference to the given string and assigns it to the QrCodeText field.
func (o *Principal) SetQrCodeText(v string) {
	o.QrCodeText = &v
}

// GetManualPaymentProvider returns the ManualPaymentProvider field value if set, zero value otherwise.
func (o *Principal) GetManualPaymentProvider() string {
	if o == nil || IsNil(o.ManualPaymentProvider) {
		var ret string
		return ret
	}
	return *o.ManualPaymentProvider
}

// GetManualPaymentProviderOk returns a tuple with the ManualPaymentProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetManualPaymentProviderOk() (*string, bool) {
	if o == nil || IsNil(o.ManualPaymentProvider) {
		return nil, false
	}
	return o.ManualPaymentProvider, true
}

// HasManualPaymentProvider returns a boolean if a field has been set.
func (o *Principal) HasManualPaymentProvider() bool {
	if o != nil && !IsNil(o.ManualPaymentProvider) {
		return true
	}

	return false
}

// SetManualPaymentProvider gets a reference to the given string and assigns it to the ManualPaymentProvider field.
func (o *Principal) SetManualPaymentProvider(v string) {
	o.ManualPaymentProvider = &v
}

func (o Principal) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Principal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subject"] = o.Subject
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	toSerialize["client_id"] = o.ClientId
	toSerialize["customer_app_id"] = o.CustomerAppId
	toSerialize["login_identity_id"] = o.LoginIdentityId
	if !IsNil(o.CustomizationId) {
		toSerialize["customization_id"] = o.CustomizationId
	}
	if !IsNil(o.MandateId) {
		toSerialize["mandate_id"] = o.MandateId
	}
	if !IsNil(o.ExpiresIn) {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	if !IsNil(o.PaymentAttemptId) {
		toSerialize["payment_attempt_id"] = o.PaymentAttemptId
	}
	if !IsNil(o.PaymentId) {
		toSerialize["payment_id"] = o.PaymentId
	}
	if !IsNil(o.ProductFlow) {
		toSerialize["product_flow"] = o.ProductFlow
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.LinkTokenRequest) {
		toSerialize["link_token_request"] = o.LinkTokenRequest
	}
	if !IsNil(o.GetMandateAuthLinkRequest) {
		toSerialize["get_mandate_auth_link_request"] = o.GetMandateAuthLinkRequest
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.RedirectUri) {
		toSerialize["redirect_uri"] = o.RedirectUri
	}
	if !IsNil(o.PaymentLinkId) {
		toSerialize["payment_link_id"] = o.PaymentLinkId
	}
	if !IsNil(o.UniqueReferenceId) {
		toSerialize["unique_reference_id"] = o.UniqueReferenceId
	}
	if !IsNil(o.PaymentMethodId) {
		toSerialize["payment_method_id"] = o.PaymentMethodId
	}
	if !IsNil(o.TppName) {
		toSerialize["tpp_name"] = o.TppName
	}
	if !IsNil(o.RetryUrl) {
		toSerialize["retry_url"] = o.RetryUrl
	}
	if !IsNil(o.OnboardingFlow) {
		toSerialize["onboarding_flow"] = o.OnboardingFlow
	}
	if !IsNil(o.QrCodeText) {
		toSerialize["qr_code_text"] = o.QrCodeText
	}
	if !IsNil(o.ManualPaymentProvider) {
		toSerialize["manual_payment_provider"] = o.ManualPaymentProvider
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Principal) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subject",
		"client_id",
		"customer_app_id",
		"login_identity_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPrincipal := _Principal{}

	err = json.Unmarshal(data, &varPrincipal)

	if err != nil {
		return err
	}

	*o = Principal(varPrincipal)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "subject")
		delete(additionalProperties, "token")
		delete(additionalProperties, "client_id")
		delete(additionalProperties, "customer_app_id")
		delete(additionalProperties, "login_identity_id")
		delete(additionalProperties, "customization_id")
		delete(additionalProperties, "mandate_id")
		delete(additionalProperties, "expires_in")
		delete(additionalProperties, "payment_attempt_id")
		delete(additionalProperties, "payment_id")
		delete(additionalProperties, "product_flow")
		delete(additionalProperties, "scopes")
		delete(additionalProperties, "link_token_request")
		delete(additionalProperties, "get_mandate_auth_link_request")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "redirect_uri")
		delete(additionalProperties, "payment_link_id")
		delete(additionalProperties, "unique_reference_id")
		delete(additionalProperties, "payment_method_id")
		delete(additionalProperties, "tpp_name")
		delete(additionalProperties, "retry_url")
		delete(additionalProperties, "onboarding_flow")
		delete(additionalProperties, "qr_code_text")
		delete(additionalProperties, "manual_payment_provider")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePrincipal struct {
	value *Principal
	isSet bool
}

func (v NullablePrincipal) Get() *Principal {
	return v.value
}

func (v *NullablePrincipal) Set(val *Principal) {
	v.value = val
	v.isSet = true
}

func (v NullablePrincipal) IsSet() bool {
	return v.isSet
}

func (v *NullablePrincipal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrincipal(val *Principal) *NullablePrincipal {
	return &NullablePrincipal{value: val, isSet: true}
}

func (v NullablePrincipal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrincipal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
