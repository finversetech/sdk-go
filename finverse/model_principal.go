/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// Principal struct for Principal
type Principal struct {
	Subject          string            `json:"subject"`
	Token            *string           `json:"token,omitempty"`
	ClientId         string            `json:"client_id"`
	CustomerAppId    string            `json:"customer_app_id"`
	LoginIdentityId  string            `json:"login_identity_id"`
	CustomizationId  *string           `json:"customization_id,omitempty"`
	ExpiresIn        *float32          `json:"expires_in,omitempty"`
	Scopes           []string          `json:"scopes,omitempty"`
	LinkTokenRequest *LinkTokenRequest `json:"link_token_request,omitempty"`
}

// NewPrincipal instantiates a new Principal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrincipal(subject string, clientId string, customerAppId string, loginIdentityId string) *Principal {
	this := Principal{}
	this.Subject = subject
	this.ClientId = clientId
	this.CustomerAppId = customerAppId
	this.LoginIdentityId = loginIdentityId
	return &this
}

// NewPrincipalWithDefaults instantiates a new Principal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrincipalWithDefaults() *Principal {
	this := Principal{}
	return &this
}

// GetSubject returns the Subject field value
func (o *Principal) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *Principal) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *Principal) SetSubject(v string) {
	o.Subject = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *Principal) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *Principal) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *Principal) SetToken(v string) {
	o.Token = &v
}

// GetClientId returns the ClientId field value
func (o *Principal) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *Principal) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *Principal) SetClientId(v string) {
	o.ClientId = v
}

// GetCustomerAppId returns the CustomerAppId field value
func (o *Principal) GetCustomerAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerAppId
}

// GetCustomerAppIdOk returns a tuple with the CustomerAppId field value
// and a boolean to check if the value has been set.
func (o *Principal) GetCustomerAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerAppId, true
}

// SetCustomerAppId sets field value
func (o *Principal) SetCustomerAppId(v string) {
	o.CustomerAppId = v
}

// GetLoginIdentityId returns the LoginIdentityId field value
func (o *Principal) GetLoginIdentityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoginIdentityId
}

// GetLoginIdentityIdOk returns a tuple with the LoginIdentityId field value
// and a boolean to check if the value has been set.
func (o *Principal) GetLoginIdentityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoginIdentityId, true
}

// SetLoginIdentityId sets field value
func (o *Principal) SetLoginIdentityId(v string) {
	o.LoginIdentityId = v
}

// GetCustomizationId returns the CustomizationId field value if set, zero value otherwise.
func (o *Principal) GetCustomizationId() string {
	if o == nil || o.CustomizationId == nil {
		var ret string
		return ret
	}
	return *o.CustomizationId
}

// GetCustomizationIdOk returns a tuple with the CustomizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetCustomizationIdOk() (*string, bool) {
	if o == nil || o.CustomizationId == nil {
		return nil, false
	}
	return o.CustomizationId, true
}

// HasCustomizationId returns a boolean if a field has been set.
func (o *Principal) HasCustomizationId() bool {
	if o != nil && o.CustomizationId != nil {
		return true
	}

	return false
}

// SetCustomizationId gets a reference to the given string and assigns it to the CustomizationId field.
func (o *Principal) SetCustomizationId(v string) {
	o.CustomizationId = &v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *Principal) GetExpiresIn() float32 {
	if o == nil || o.ExpiresIn == nil {
		var ret float32
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetExpiresInOk() (*float32, bool) {
	if o == nil || o.ExpiresIn == nil {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *Principal) HasExpiresIn() bool {
	if o != nil && o.ExpiresIn != nil {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given float32 and assigns it to the ExpiresIn field.
func (o *Principal) SetExpiresIn(v float32) {
	o.ExpiresIn = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *Principal) GetScopes() []string {
	if o == nil || o.Scopes == nil {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetScopesOk() ([]string, bool) {
	if o == nil || o.Scopes == nil {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *Principal) HasScopes() bool {
	if o != nil && o.Scopes != nil {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *Principal) SetScopes(v []string) {
	o.Scopes = v
}

// GetLinkTokenRequest returns the LinkTokenRequest field value if set, zero value otherwise.
func (o *Principal) GetLinkTokenRequest() LinkTokenRequest {
	if o == nil || o.LinkTokenRequest == nil {
		var ret LinkTokenRequest
		return ret
	}
	return *o.LinkTokenRequest
}

// GetLinkTokenRequestOk returns a tuple with the LinkTokenRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Principal) GetLinkTokenRequestOk() (*LinkTokenRequest, bool) {
	if o == nil || o.LinkTokenRequest == nil {
		return nil, false
	}
	return o.LinkTokenRequest, true
}

// HasLinkTokenRequest returns a boolean if a field has been set.
func (o *Principal) HasLinkTokenRequest() bool {
	if o != nil && o.LinkTokenRequest != nil {
		return true
	}

	return false
}

// SetLinkTokenRequest gets a reference to the given LinkTokenRequest and assigns it to the LinkTokenRequest field.
func (o *Principal) SetLinkTokenRequest(v LinkTokenRequest) {
	o.LinkTokenRequest = &v
}

func (o Principal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subject"] = o.Subject
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["client_id"] = o.ClientId
	}
	if true {
		toSerialize["customer_app_id"] = o.CustomerAppId
	}
	if true {
		toSerialize["login_identity_id"] = o.LoginIdentityId
	}
	if o.CustomizationId != nil {
		toSerialize["customization_id"] = o.CustomizationId
	}
	if o.ExpiresIn != nil {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	if o.LinkTokenRequest != nil {
		toSerialize["link_token_request"] = o.LinkTokenRequest
	}
	return json.Marshal(toSerialize)
}

type NullablePrincipal struct {
	value *Principal
	isSet bool
}

func (v NullablePrincipal) Get() *Principal {
	return v.value
}

func (v *NullablePrincipal) Set(val *Principal) {
	v.value = val
	v.isSet = true
}

func (v NullablePrincipal) IsSet() bool {
	return v.isSet
}

func (v *NullablePrincipal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrincipal(val *Principal) *NullablePrincipal {
	return &NullablePrincipal{value: val, isSet: true}
}

func (v NullablePrincipal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrincipal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
