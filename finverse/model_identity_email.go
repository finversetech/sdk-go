/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// IdentityEmail struct for IdentityEmail
type IdentityEmail struct {
	Raw         *string  `json:"raw,omitempty"`
	Email       *string  `json:"email,omitempty"`
	MaskedEmail *string  `json:"masked_email,omitempty"`
	Source      *string  `json:"source,omitempty"`
	SourceIds   []string `json:"source_ids,omitempty"`
	AccountIds  []string `json:"account_ids,omitempty"`
}

// NewIdentityEmail instantiates a new IdentityEmail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityEmail() *IdentityEmail {
	this := IdentityEmail{}
	return &this
}

// NewIdentityEmailWithDefaults instantiates a new IdentityEmail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityEmailWithDefaults() *IdentityEmail {
	this := IdentityEmail{}
	return &this
}

// GetRaw returns the Raw field value if set, zero value otherwise.
func (o *IdentityEmail) GetRaw() string {
	if o == nil || o.Raw == nil {
		var ret string
		return ret
	}
	return *o.Raw
}

// GetRawOk returns a tuple with the Raw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEmail) GetRawOk() (*string, bool) {
	if o == nil || o.Raw == nil {
		return nil, false
	}
	return o.Raw, true
}

// HasRaw returns a boolean if a field has been set.
func (o *IdentityEmail) HasRaw() bool {
	if o != nil && o.Raw != nil {
		return true
	}

	return false
}

// SetRaw gets a reference to the given string and assigns it to the Raw field.
func (o *IdentityEmail) SetRaw(v string) {
	o.Raw = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *IdentityEmail) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEmail) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *IdentityEmail) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *IdentityEmail) SetEmail(v string) {
	o.Email = &v
}

// GetMaskedEmail returns the MaskedEmail field value if set, zero value otherwise.
func (o *IdentityEmail) GetMaskedEmail() string {
	if o == nil || o.MaskedEmail == nil {
		var ret string
		return ret
	}
	return *o.MaskedEmail
}

// GetMaskedEmailOk returns a tuple with the MaskedEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEmail) GetMaskedEmailOk() (*string, bool) {
	if o == nil || o.MaskedEmail == nil {
		return nil, false
	}
	return o.MaskedEmail, true
}

// HasMaskedEmail returns a boolean if a field has been set.
func (o *IdentityEmail) HasMaskedEmail() bool {
	if o != nil && o.MaskedEmail != nil {
		return true
	}

	return false
}

// SetMaskedEmail gets a reference to the given string and assigns it to the MaskedEmail field.
func (o *IdentityEmail) SetMaskedEmail(v string) {
	o.MaskedEmail = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *IdentityEmail) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEmail) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *IdentityEmail) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *IdentityEmail) SetSource(v string) {
	o.Source = &v
}

// GetSourceIds returns the SourceIds field value if set, zero value otherwise.
func (o *IdentityEmail) GetSourceIds() []string {
	if o == nil || o.SourceIds == nil {
		var ret []string
		return ret
	}
	return o.SourceIds
}

// GetSourceIdsOk returns a tuple with the SourceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEmail) GetSourceIdsOk() ([]string, bool) {
	if o == nil || o.SourceIds == nil {
		return nil, false
	}
	return o.SourceIds, true
}

// HasSourceIds returns a boolean if a field has been set.
func (o *IdentityEmail) HasSourceIds() bool {
	if o != nil && o.SourceIds != nil {
		return true
	}

	return false
}

// SetSourceIds gets a reference to the given []string and assigns it to the SourceIds field.
func (o *IdentityEmail) SetSourceIds(v []string) {
	o.SourceIds = v
}

// GetAccountIds returns the AccountIds field value if set, zero value otherwise.
func (o *IdentityEmail) GetAccountIds() []string {
	if o == nil || o.AccountIds == nil {
		var ret []string
		return ret
	}
	return o.AccountIds
}

// GetAccountIdsOk returns a tuple with the AccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityEmail) GetAccountIdsOk() ([]string, bool) {
	if o == nil || o.AccountIds == nil {
		return nil, false
	}
	return o.AccountIds, true
}

// HasAccountIds returns a boolean if a field has been set.
func (o *IdentityEmail) HasAccountIds() bool {
	if o != nil && o.AccountIds != nil {
		return true
	}

	return false
}

// SetAccountIds gets a reference to the given []string and assigns it to the AccountIds field.
func (o *IdentityEmail) SetAccountIds(v []string) {
	o.AccountIds = v
}

func (o IdentityEmail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Raw != nil {
		toSerialize["raw"] = o.Raw
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.MaskedEmail != nil {
		toSerialize["masked_email"] = o.MaskedEmail
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.SourceIds != nil {
		toSerialize["source_ids"] = o.SourceIds
	}
	if o.AccountIds != nil {
		toSerialize["account_ids"] = o.AccountIds
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityEmail struct {
	value *IdentityEmail
	isSet bool
}

func (v NullableIdentityEmail) Get() *IdentityEmail {
	return v.value
}

func (v *NullableIdentityEmail) Set(val *IdentityEmail) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityEmail(val *IdentityEmail) *NullableIdentityEmail {
	return &NullableIdentityEmail{value: val, isSet: true}
}

func (v NullableIdentityEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
