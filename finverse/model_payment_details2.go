/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// PaymentDetails2 struct for PaymentDetails2
type PaymentDetails2 struct {
	// The transaction description provided to banks, which banks will show to their customers.
	Description *string `json:"description,omitempty"`
	// ID of the mandate this pament is referring to.
	MandateId *string `json:"mandate_id,omitempty"`
	// Deprecated: Customer's ID for this transaction
	TransactionReferenceId *string `json:"transaction_reference_id,omitempty"`
	// Customer reference for this transaction
	ExternalTransactionReference *string                   `json:"external_transaction_reference,omitempty"`
	References                   *PaymentDetailsReferences `json:"references,omitempty"`
}

// NewPaymentDetails2 instantiates a new PaymentDetails2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentDetails2() *PaymentDetails2 {
	this := PaymentDetails2{}
	return &this
}

// NewPaymentDetails2WithDefaults instantiates a new PaymentDetails2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentDetails2WithDefaults() *PaymentDetails2 {
	this := PaymentDetails2{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PaymentDetails2) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails2) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PaymentDetails2) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PaymentDetails2) SetDescription(v string) {
	o.Description = &v
}

// GetMandateId returns the MandateId field value if set, zero value otherwise.
func (o *PaymentDetails2) GetMandateId() string {
	if o == nil || o.MandateId == nil {
		var ret string
		return ret
	}
	return *o.MandateId
}

// GetMandateIdOk returns a tuple with the MandateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails2) GetMandateIdOk() (*string, bool) {
	if o == nil || o.MandateId == nil {
		return nil, false
	}
	return o.MandateId, true
}

// HasMandateId returns a boolean if a field has been set.
func (o *PaymentDetails2) HasMandateId() bool {
	if o != nil && o.MandateId != nil {
		return true
	}

	return false
}

// SetMandateId gets a reference to the given string and assigns it to the MandateId field.
func (o *PaymentDetails2) SetMandateId(v string) {
	o.MandateId = &v
}

// GetTransactionReferenceId returns the TransactionReferenceId field value if set, zero value otherwise.
func (o *PaymentDetails2) GetTransactionReferenceId() string {
	if o == nil || o.TransactionReferenceId == nil {
		var ret string
		return ret
	}
	return *o.TransactionReferenceId
}

// GetTransactionReferenceIdOk returns a tuple with the TransactionReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails2) GetTransactionReferenceIdOk() (*string, bool) {
	if o == nil || o.TransactionReferenceId == nil {
		return nil, false
	}
	return o.TransactionReferenceId, true
}

// HasTransactionReferenceId returns a boolean if a field has been set.
func (o *PaymentDetails2) HasTransactionReferenceId() bool {
	if o != nil && o.TransactionReferenceId != nil {
		return true
	}

	return false
}

// SetTransactionReferenceId gets a reference to the given string and assigns it to the TransactionReferenceId field.
func (o *PaymentDetails2) SetTransactionReferenceId(v string) {
	o.TransactionReferenceId = &v
}

// GetExternalTransactionReference returns the ExternalTransactionReference field value if set, zero value otherwise.
func (o *PaymentDetails2) GetExternalTransactionReference() string {
	if o == nil || o.ExternalTransactionReference == nil {
		var ret string
		return ret
	}
	return *o.ExternalTransactionReference
}

// GetExternalTransactionReferenceOk returns a tuple with the ExternalTransactionReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails2) GetExternalTransactionReferenceOk() (*string, bool) {
	if o == nil || o.ExternalTransactionReference == nil {
		return nil, false
	}
	return o.ExternalTransactionReference, true
}

// HasExternalTransactionReference returns a boolean if a field has been set.
func (o *PaymentDetails2) HasExternalTransactionReference() bool {
	if o != nil && o.ExternalTransactionReference != nil {
		return true
	}

	return false
}

// SetExternalTransactionReference gets a reference to the given string and assigns it to the ExternalTransactionReference field.
func (o *PaymentDetails2) SetExternalTransactionReference(v string) {
	o.ExternalTransactionReference = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *PaymentDetails2) GetReferences() PaymentDetailsReferences {
	if o == nil || o.References == nil {
		var ret PaymentDetailsReferences
		return ret
	}
	return *o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails2) GetReferencesOk() (*PaymentDetailsReferences, bool) {
	if o == nil || o.References == nil {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *PaymentDetails2) HasReferences() bool {
	if o != nil && o.References != nil {
		return true
	}

	return false
}

// SetReferences gets a reference to the given PaymentDetailsReferences and assigns it to the References field.
func (o *PaymentDetails2) SetReferences(v PaymentDetailsReferences) {
	o.References = &v
}

func (o PaymentDetails2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.MandateId != nil {
		toSerialize["mandate_id"] = o.MandateId
	}
	if o.TransactionReferenceId != nil {
		toSerialize["transaction_reference_id"] = o.TransactionReferenceId
	}
	if o.ExternalTransactionReference != nil {
		toSerialize["external_transaction_reference"] = o.ExternalTransactionReference
	}
	if o.References != nil {
		toSerialize["references"] = o.References
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentDetails2 struct {
	value *PaymentDetails2
	isSet bool
}

func (v NullablePaymentDetails2) Get() *PaymentDetails2 {
	return v.value
}

func (v *NullablePaymentDetails2) Set(val *PaymentDetails2) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentDetails2) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentDetails2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentDetails2(val *PaymentDetails2) *NullablePaymentDetails2 {
	return &NullablePaymentDetails2{value: val, isSet: true}
}

func (v NullablePaymentDetails2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentDetails2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
