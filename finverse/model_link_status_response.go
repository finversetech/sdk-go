/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// LinkStatusResponse struct for LinkStatusResponse
type LinkStatusResponse struct {
	Success *AccessTokenResponse    `json:"success,omitempty"`
	Pending *LinkStatusPendingModel `json:"pending,omitempty"`
	Action  *LinkStatusActionModel  `json:"action,omitempty"`
}

// NewLinkStatusResponse instantiates a new LinkStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkStatusResponse() *LinkStatusResponse {
	this := LinkStatusResponse{}
	return &this
}

// NewLinkStatusResponseWithDefaults instantiates a new LinkStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkStatusResponseWithDefaults() *LinkStatusResponse {
	this := LinkStatusResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *LinkStatusResponse) GetSuccess() AccessTokenResponse {
	if o == nil || o.Success == nil {
		var ret AccessTokenResponse
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkStatusResponse) GetSuccessOk() (*AccessTokenResponse, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *LinkStatusResponse) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given AccessTokenResponse and assigns it to the Success field.
func (o *LinkStatusResponse) SetSuccess(v AccessTokenResponse) {
	o.Success = &v
}

// GetPending returns the Pending field value if set, zero value otherwise.
func (o *LinkStatusResponse) GetPending() LinkStatusPendingModel {
	if o == nil || o.Pending == nil {
		var ret LinkStatusPendingModel
		return ret
	}
	return *o.Pending
}

// GetPendingOk returns a tuple with the Pending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkStatusResponse) GetPendingOk() (*LinkStatusPendingModel, bool) {
	if o == nil || o.Pending == nil {
		return nil, false
	}
	return o.Pending, true
}

// HasPending returns a boolean if a field has been set.
func (o *LinkStatusResponse) HasPending() bool {
	if o != nil && o.Pending != nil {
		return true
	}

	return false
}

// SetPending gets a reference to the given LinkStatusPendingModel and assigns it to the Pending field.
func (o *LinkStatusResponse) SetPending(v LinkStatusPendingModel) {
	o.Pending = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *LinkStatusResponse) GetAction() LinkStatusActionModel {
	if o == nil || o.Action == nil {
		var ret LinkStatusActionModel
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkStatusResponse) GetActionOk() (*LinkStatusActionModel, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *LinkStatusResponse) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given LinkStatusActionModel and assigns it to the Action field.
func (o *LinkStatusResponse) SetAction(v LinkStatusActionModel) {
	o.Action = &v
}

func (o LinkStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	if o.Pending != nil {
		toSerialize["pending"] = o.Pending
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	return json.Marshal(toSerialize)
}

type NullableLinkStatusResponse struct {
	value *LinkStatusResponse
	isSet bool
}

func (v NullableLinkStatusResponse) Get() *LinkStatusResponse {
	return v.value
}

func (v *NullableLinkStatusResponse) Set(val *LinkStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkStatusResponse(val *LinkStatusResponse) *NullableLinkStatusResponse {
	return &NullableLinkStatusResponse{value: val, isSet: true}
}

func (v NullableLinkStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
