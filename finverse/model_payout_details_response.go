/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// PayoutDetailsResponse struct for PayoutDetailsResponse
type PayoutDetailsResponse struct {
	// The mandate used to execute payments for this payout instruction. Currency for the mandate must be supported by the recipient account
	MandateId *string `json:"mandate_id,omitempty"`
	// A description for the payment (that will appear as the transaction description on bank statements)
	Description *string `json:"description,omitempty"`
	// YYYY-MM-DD, date (in UTC) to execute the payment, must be 1 day later than current date
	ScheduledDate *string `json:"scheduled_date,omitempty"`
}

// NewPayoutDetailsResponse instantiates a new PayoutDetailsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayoutDetailsResponse() *PayoutDetailsResponse {
	this := PayoutDetailsResponse{}
	return &this
}

// NewPayoutDetailsResponseWithDefaults instantiates a new PayoutDetailsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayoutDetailsResponseWithDefaults() *PayoutDetailsResponse {
	this := PayoutDetailsResponse{}
	return &this
}

// GetMandateId returns the MandateId field value if set, zero value otherwise.
func (o *PayoutDetailsResponse) GetMandateId() string {
	if o == nil || o.MandateId == nil {
		var ret string
		return ret
	}
	return *o.MandateId
}

// GetMandateIdOk returns a tuple with the MandateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutDetailsResponse) GetMandateIdOk() (*string, bool) {
	if o == nil || o.MandateId == nil {
		return nil, false
	}
	return o.MandateId, true
}

// HasMandateId returns a boolean if a field has been set.
func (o *PayoutDetailsResponse) HasMandateId() bool {
	if o != nil && o.MandateId != nil {
		return true
	}

	return false
}

// SetMandateId gets a reference to the given string and assigns it to the MandateId field.
func (o *PayoutDetailsResponse) SetMandateId(v string) {
	o.MandateId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PayoutDetailsResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutDetailsResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PayoutDetailsResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PayoutDetailsResponse) SetDescription(v string) {
	o.Description = &v
}

// GetScheduledDate returns the ScheduledDate field value if set, zero value otherwise.
func (o *PayoutDetailsResponse) GetScheduledDate() string {
	if o == nil || o.ScheduledDate == nil {
		var ret string
		return ret
	}
	return *o.ScheduledDate
}

// GetScheduledDateOk returns a tuple with the ScheduledDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutDetailsResponse) GetScheduledDateOk() (*string, bool) {
	if o == nil || o.ScheduledDate == nil {
		return nil, false
	}
	return o.ScheduledDate, true
}

// HasScheduledDate returns a boolean if a field has been set.
func (o *PayoutDetailsResponse) HasScheduledDate() bool {
	if o != nil && o.ScheduledDate != nil {
		return true
	}

	return false
}

// SetScheduledDate gets a reference to the given string and assigns it to the ScheduledDate field.
func (o *PayoutDetailsResponse) SetScheduledDate(v string) {
	o.ScheduledDate = &v
}

func (o PayoutDetailsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MandateId != nil {
		toSerialize["mandate_id"] = o.MandateId
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ScheduledDate != nil {
		toSerialize["scheduled_date"] = o.ScheduledDate
	}
	return json.Marshal(toSerialize)
}

type NullablePayoutDetailsResponse struct {
	value *PayoutDetailsResponse
	isSet bool
}

func (v NullablePayoutDetailsResponse) Get() *PayoutDetailsResponse {
	return v.value
}

func (v *NullablePayoutDetailsResponse) Set(val *PayoutDetailsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePayoutDetailsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePayoutDetailsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayoutDetailsResponse(val *PayoutDetailsResponse) *NullablePayoutDetailsResponse {
	return &NullablePayoutDetailsResponse{value: val, isSet: true}
}

func (v NullablePayoutDetailsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayoutDetailsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
