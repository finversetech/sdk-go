/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// ActionRequest struct for ActionRequest
type ActionRequest struct {
	EncryptedAction EncryptedPayload `json:"encrypted_action"`
}

// NewActionRequest instantiates a new ActionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionRequest(encryptedAction EncryptedPayload) *ActionRequest {
	this := ActionRequest{}
	this.EncryptedAction = encryptedAction
	return &this
}

// NewActionRequestWithDefaults instantiates a new ActionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionRequestWithDefaults() *ActionRequest {
	this := ActionRequest{}
	return &this
}

// GetEncryptedAction returns the EncryptedAction field value
func (o *ActionRequest) GetEncryptedAction() EncryptedPayload {
	if o == nil {
		var ret EncryptedPayload
		return ret
	}

	return o.EncryptedAction
}

// GetEncryptedActionOk returns a tuple with the EncryptedAction field value
// and a boolean to check if the value has been set.
func (o *ActionRequest) GetEncryptedActionOk() (*EncryptedPayload, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncryptedAction, true
}

// SetEncryptedAction sets field value
func (o *ActionRequest) SetEncryptedAction(v EncryptedPayload) {
	o.EncryptedAction = v
}

func (o ActionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["encrypted_action"] = o.EncryptedAction
	}
	return json.Marshal(toSerialize)
}

type NullableActionRequest struct {
	value *ActionRequest
	isSet bool
}

func (v NullableActionRequest) Get() *ActionRequest {
	return v.value
}

func (v *NullableActionRequest) Set(val *ActionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableActionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableActionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionRequest(val *ActionRequest) *NullableActionRequest {
	return &NullableActionRequest{value: val, isSet: true}
}

func (v NullableActionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
