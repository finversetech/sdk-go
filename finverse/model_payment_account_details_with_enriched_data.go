/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"time"
)

// checks if the PaymentAccountDetailsWithEnrichedData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentAccountDetailsWithEnrichedData{}

// PaymentAccountDetailsWithEnrichedData struct for PaymentAccountDetailsWithEnrichedData
type PaymentAccountDetailsWithEnrichedData struct {
	// Payment account id
	AccountId     *string                 `json:"account_id,omitempty"`
	AccountNumber *RecipientAccountNumber `json:"account_number,omitempty"`
	// Masked Account number of the payment account
	AccountNumberMasked *string `json:"account_number_masked,omitempty"`
	// Type of payment account.
	AccountType *string `json:"account_type,omitempty"`
	// Accountholder name of the payment account
	AccountholderName *string `json:"accountholder_name,omitempty"`
	// Finverse Institution ID for the payment institution.
	InstitutionId *string `json:"institution_id,omitempty"`
	// Institution Name for the senderâ€™s institution.
	InstitutionName *string `json:"institution_name,omitempty"`
	// A unique identifier generated after creating user (Finverse Payment User ID)
	UserId *string `json:"user_id,omitempty"`
	// 3-digit code associated with bank
	BankCode *string `json:"bank_code,omitempty"`
	// 3-digit code used to identify specific bank branch
	BranchCode *string `json:"branch_code,omitempty"`
	// List of currencies supported by the payment account
	Currencies []string `json:"currencies,omitempty"`
	// The business units the payment account belongs to
	BusinessUnits []string `json:"business_units,omitempty"`
	// This field is only applicable to settlement account
	LegalEntityName *string `json:"legal_entity_name,omitempty"`
	// Additional attributes of the sender account in key:value format (e.g. sender_id: 1234). It supports up to 10 key:value pairs, whereas the key and value supports up to 50 and 1000 characters respectively.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// Timestamp of when the payment link was created in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Timestamp of when the payment link was last updated in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
	UpdatedAt             *time.Time             `json:"updated_at,omitempty"`
	PaymentMethodOverview *PaymentMethodOverview `json:"payment_method_overview,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _PaymentAccountDetailsWithEnrichedData PaymentAccountDetailsWithEnrichedData

// NewPaymentAccountDetailsWithEnrichedData instantiates a new PaymentAccountDetailsWithEnrichedData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentAccountDetailsWithEnrichedData() *PaymentAccountDetailsWithEnrichedData {
	this := PaymentAccountDetailsWithEnrichedData{}
	return &this
}

// NewPaymentAccountDetailsWithEnrichedDataWithDefaults instantiates a new PaymentAccountDetailsWithEnrichedData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentAccountDetailsWithEnrichedDataWithDefaults() *PaymentAccountDetailsWithEnrichedData {
	this := PaymentAccountDetailsWithEnrichedData{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *PaymentAccountDetailsWithEnrichedData) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetAccountNumber() RecipientAccountNumber {
	if o == nil || IsNil(o.AccountNumber) {
		var ret RecipientAccountNumber
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetAccountNumberOk() (*RecipientAccountNumber, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given RecipientAccountNumber and assigns it to the AccountNumber field.
func (o *PaymentAccountDetailsWithEnrichedData) SetAccountNumber(v RecipientAccountNumber) {
	o.AccountNumber = &v
}

// GetAccountNumberMasked returns the AccountNumberMasked field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetAccountNumberMasked() string {
	if o == nil || IsNil(o.AccountNumberMasked) {
		var ret string
		return ret
	}
	return *o.AccountNumberMasked
}

// GetAccountNumberMaskedOk returns a tuple with the AccountNumberMasked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetAccountNumberMaskedOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumberMasked) {
		return nil, false
	}
	return o.AccountNumberMasked, true
}

// HasAccountNumberMasked returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasAccountNumberMasked() bool {
	if o != nil && !IsNil(o.AccountNumberMasked) {
		return true
	}

	return false
}

// SetAccountNumberMasked gets a reference to the given string and assigns it to the AccountNumberMasked field.
func (o *PaymentAccountDetailsWithEnrichedData) SetAccountNumberMasked(v string) {
	o.AccountNumberMasked = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetAccountType() string {
	if o == nil || IsNil(o.AccountType) {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *PaymentAccountDetailsWithEnrichedData) SetAccountType(v string) {
	o.AccountType = &v
}

// GetAccountholderName returns the AccountholderName field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetAccountholderName() string {
	if o == nil || IsNil(o.AccountholderName) {
		var ret string
		return ret
	}
	return *o.AccountholderName
}

// GetAccountholderNameOk returns a tuple with the AccountholderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetAccountholderNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountholderName) {
		return nil, false
	}
	return o.AccountholderName, true
}

// HasAccountholderName returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasAccountholderName() bool {
	if o != nil && !IsNil(o.AccountholderName) {
		return true
	}

	return false
}

// SetAccountholderName gets a reference to the given string and assigns it to the AccountholderName field.
func (o *PaymentAccountDetailsWithEnrichedData) SetAccountholderName(v string) {
	o.AccountholderName = &v
}

// GetInstitutionId returns the InstitutionId field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetInstitutionId() string {
	if o == nil || IsNil(o.InstitutionId) {
		var ret string
		return ret
	}
	return *o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetInstitutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstitutionId) {
		return nil, false
	}
	return o.InstitutionId, true
}

// HasInstitutionId returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasInstitutionId() bool {
	if o != nil && !IsNil(o.InstitutionId) {
		return true
	}

	return false
}

// SetInstitutionId gets a reference to the given string and assigns it to the InstitutionId field.
func (o *PaymentAccountDetailsWithEnrichedData) SetInstitutionId(v string) {
	o.InstitutionId = &v
}

// GetInstitutionName returns the InstitutionName field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetInstitutionName() string {
	if o == nil || IsNil(o.InstitutionName) {
		var ret string
		return ret
	}
	return *o.InstitutionName
}

// GetInstitutionNameOk returns a tuple with the InstitutionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetInstitutionNameOk() (*string, bool) {
	if o == nil || IsNil(o.InstitutionName) {
		return nil, false
	}
	return o.InstitutionName, true
}

// HasInstitutionName returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasInstitutionName() bool {
	if o != nil && !IsNil(o.InstitutionName) {
		return true
	}

	return false
}

// SetInstitutionName gets a reference to the given string and assigns it to the InstitutionName field.
func (o *PaymentAccountDetailsWithEnrichedData) SetInstitutionName(v string) {
	o.InstitutionName = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *PaymentAccountDetailsWithEnrichedData) SetUserId(v string) {
	o.UserId = &v
}

// GetBankCode returns the BankCode field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetBankCode() string {
	if o == nil || IsNil(o.BankCode) {
		var ret string
		return ret
	}
	return *o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetBankCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BankCode) {
		return nil, false
	}
	return o.BankCode, true
}

// HasBankCode returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasBankCode() bool {
	if o != nil && !IsNil(o.BankCode) {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given string and assigns it to the BankCode field.
func (o *PaymentAccountDetailsWithEnrichedData) SetBankCode(v string) {
	o.BankCode = &v
}

// GetBranchCode returns the BranchCode field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetBranchCode() string {
	if o == nil || IsNil(o.BranchCode) {
		var ret string
		return ret
	}
	return *o.BranchCode
}

// GetBranchCodeOk returns a tuple with the BranchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetBranchCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BranchCode) {
		return nil, false
	}
	return o.BranchCode, true
}

// HasBranchCode returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasBranchCode() bool {
	if o != nil && !IsNil(o.BranchCode) {
		return true
	}

	return false
}

// SetBranchCode gets a reference to the given string and assigns it to the BranchCode field.
func (o *PaymentAccountDetailsWithEnrichedData) SetBranchCode(v string) {
	o.BranchCode = &v
}

// GetCurrencies returns the Currencies field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetCurrencies() []string {
	if o == nil || IsNil(o.Currencies) {
		var ret []string
		return ret
	}
	return o.Currencies
}

// GetCurrenciesOk returns a tuple with the Currencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetCurrenciesOk() ([]string, bool) {
	if o == nil || IsNil(o.Currencies) {
		return nil, false
	}
	return o.Currencies, true
}

// HasCurrencies returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasCurrencies() bool {
	if o != nil && !IsNil(o.Currencies) {
		return true
	}

	return false
}

// SetCurrencies gets a reference to the given []string and assigns it to the Currencies field.
func (o *PaymentAccountDetailsWithEnrichedData) SetCurrencies(v []string) {
	o.Currencies = v
}

// GetBusinessUnits returns the BusinessUnits field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetBusinessUnits() []string {
	if o == nil || IsNil(o.BusinessUnits) {
		var ret []string
		return ret
	}
	return o.BusinessUnits
}

// GetBusinessUnitsOk returns a tuple with the BusinessUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetBusinessUnitsOk() ([]string, bool) {
	if o == nil || IsNil(o.BusinessUnits) {
		return nil, false
	}
	return o.BusinessUnits, true
}

// HasBusinessUnits returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasBusinessUnits() bool {
	if o != nil && !IsNil(o.BusinessUnits) {
		return true
	}

	return false
}

// SetBusinessUnits gets a reference to the given []string and assigns it to the BusinessUnits field.
func (o *PaymentAccountDetailsWithEnrichedData) SetBusinessUnits(v []string) {
	o.BusinessUnits = v
}

// GetLegalEntityName returns the LegalEntityName field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetLegalEntityName() string {
	if o == nil || IsNil(o.LegalEntityName) {
		var ret string
		return ret
	}
	return *o.LegalEntityName
}

// GetLegalEntityNameOk returns a tuple with the LegalEntityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetLegalEntityNameOk() (*string, bool) {
	if o == nil || IsNil(o.LegalEntityName) {
		return nil, false
	}
	return o.LegalEntityName, true
}

// HasLegalEntityName returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasLegalEntityName() bool {
	if o != nil && !IsNil(o.LegalEntityName) {
		return true
	}

	return false
}

// SetLegalEntityName gets a reference to the given string and assigns it to the LegalEntityName field.
func (o *PaymentAccountDetailsWithEnrichedData) SetLegalEntityName(v string) {
	o.LegalEntityName = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *PaymentAccountDetailsWithEnrichedData) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PaymentAccountDetailsWithEnrichedData) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PaymentAccountDetailsWithEnrichedData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetPaymentMethodOverview returns the PaymentMethodOverview field value if set, zero value otherwise.
func (o *PaymentAccountDetailsWithEnrichedData) GetPaymentMethodOverview() PaymentMethodOverview {
	if o == nil || IsNil(o.PaymentMethodOverview) {
		var ret PaymentMethodOverview
		return ret
	}
	return *o.PaymentMethodOverview
}

// GetPaymentMethodOverviewOk returns a tuple with the PaymentMethodOverview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccountDetailsWithEnrichedData) GetPaymentMethodOverviewOk() (*PaymentMethodOverview, bool) {
	if o == nil || IsNil(o.PaymentMethodOverview) {
		return nil, false
	}
	return o.PaymentMethodOverview, true
}

// HasPaymentMethodOverview returns a boolean if a field has been set.
func (o *PaymentAccountDetailsWithEnrichedData) HasPaymentMethodOverview() bool {
	if o != nil && !IsNil(o.PaymentMethodOverview) {
		return true
	}

	return false
}

// SetPaymentMethodOverview gets a reference to the given PaymentMethodOverview and assigns it to the PaymentMethodOverview field.
func (o *PaymentAccountDetailsWithEnrichedData) SetPaymentMethodOverview(v PaymentMethodOverview) {
	o.PaymentMethodOverview = &v
}

func (o PaymentAccountDetailsWithEnrichedData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentAccountDetailsWithEnrichedData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["account_number"] = o.AccountNumber
	}
	if !IsNil(o.AccountNumberMasked) {
		toSerialize["account_number_masked"] = o.AccountNumberMasked
	}
	if !IsNil(o.AccountType) {
		toSerialize["account_type"] = o.AccountType
	}
	if !IsNil(o.AccountholderName) {
		toSerialize["accountholder_name"] = o.AccountholderName
	}
	if !IsNil(o.InstitutionId) {
		toSerialize["institution_id"] = o.InstitutionId
	}
	if !IsNil(o.InstitutionName) {
		toSerialize["institution_name"] = o.InstitutionName
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.BankCode) {
		toSerialize["bank_code"] = o.BankCode
	}
	if !IsNil(o.BranchCode) {
		toSerialize["branch_code"] = o.BranchCode
	}
	if !IsNil(o.Currencies) {
		toSerialize["currencies"] = o.Currencies
	}
	if !IsNil(o.BusinessUnits) {
		toSerialize["business_units"] = o.BusinessUnits
	}
	if !IsNil(o.LegalEntityName) {
		toSerialize["legal_entity_name"] = o.LegalEntityName
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.PaymentMethodOverview) {
		toSerialize["payment_method_overview"] = o.PaymentMethodOverview
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentAccountDetailsWithEnrichedData) UnmarshalJSON(data []byte) (err error) {
	varPaymentAccountDetailsWithEnrichedData := _PaymentAccountDetailsWithEnrichedData{}

	err = json.Unmarshal(data, &varPaymentAccountDetailsWithEnrichedData)

	if err != nil {
		return err
	}

	*o = PaymentAccountDetailsWithEnrichedData(varPaymentAccountDetailsWithEnrichedData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "account_number")
		delete(additionalProperties, "account_number_masked")
		delete(additionalProperties, "account_type")
		delete(additionalProperties, "accountholder_name")
		delete(additionalProperties, "institution_id")
		delete(additionalProperties, "institution_name")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "bank_code")
		delete(additionalProperties, "branch_code")
		delete(additionalProperties, "currencies")
		delete(additionalProperties, "business_units")
		delete(additionalProperties, "legal_entity_name")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "payment_method_overview")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentAccountDetailsWithEnrichedData struct {
	value *PaymentAccountDetailsWithEnrichedData
	isSet bool
}

func (v NullablePaymentAccountDetailsWithEnrichedData) Get() *PaymentAccountDetailsWithEnrichedData {
	return v.value
}

func (v *NullablePaymentAccountDetailsWithEnrichedData) Set(val *PaymentAccountDetailsWithEnrichedData) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentAccountDetailsWithEnrichedData) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentAccountDetailsWithEnrichedData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentAccountDetailsWithEnrichedData(val *PaymentAccountDetailsWithEnrichedData) *NullablePaymentAccountDetailsWithEnrichedData {
	return &NullablePaymentAccountDetailsWithEnrichedData{value: val, isSet: true}
}

func (v NullablePaymentAccountDetailsWithEnrichedData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentAccountDetailsWithEnrichedData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
