/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// RecipientAccountNumber struct for RecipientAccountNumber
type RecipientAccountNumber struct {
	// Type of account number. Possible values: LOCAL, IBAN
	Type string `json:"type"`
	// Account number value
	Number string `json:"number"`
	// Account number value
	NumberPlaintext NullableString `json:"number_plaintext,omitempty"`
}

// NewRecipientAccountNumber instantiates a new RecipientAccountNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipientAccountNumber(type_ string, number string) *RecipientAccountNumber {
	this := RecipientAccountNumber{}
	this.Type = type_
	this.Number = number
	return &this
}

// NewRecipientAccountNumberWithDefaults instantiates a new RecipientAccountNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientAccountNumberWithDefaults() *RecipientAccountNumber {
	this := RecipientAccountNumber{}
	return &this
}

// GetType returns the Type field value
func (o *RecipientAccountNumber) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RecipientAccountNumber) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RecipientAccountNumber) SetType(v string) {
	o.Type = v
}

// GetNumber returns the Number field value
func (o *RecipientAccountNumber) GetNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *RecipientAccountNumber) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *RecipientAccountNumber) SetNumber(v string) {
	o.Number = v
}

// GetNumberPlaintext returns the NumberPlaintext field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecipientAccountNumber) GetNumberPlaintext() string {
	if o == nil || o.NumberPlaintext.Get() == nil {
		var ret string
		return ret
	}
	return *o.NumberPlaintext.Get()
}

// GetNumberPlaintextOk returns a tuple with the NumberPlaintext field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecipientAccountNumber) GetNumberPlaintextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NumberPlaintext.Get(), o.NumberPlaintext.IsSet()
}

// HasNumberPlaintext returns a boolean if a field has been set.
func (o *RecipientAccountNumber) HasNumberPlaintext() bool {
	if o != nil && o.NumberPlaintext.IsSet() {
		return true
	}

	return false
}

// SetNumberPlaintext gets a reference to the given NullableString and assigns it to the NumberPlaintext field.
func (o *RecipientAccountNumber) SetNumberPlaintext(v string) {
	o.NumberPlaintext.Set(&v)
}

// SetNumberPlaintextNil sets the value for NumberPlaintext to be an explicit nil
func (o *RecipientAccountNumber) SetNumberPlaintextNil() {
	o.NumberPlaintext.Set(nil)
}

// UnsetNumberPlaintext ensures that no value is present for NumberPlaintext, not even an explicit nil
func (o *RecipientAccountNumber) UnsetNumberPlaintext() {
	o.NumberPlaintext.Unset()
}

func (o RecipientAccountNumber) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["number"] = o.Number
	}
	if o.NumberPlaintext.IsSet() {
		toSerialize["number_plaintext"] = o.NumberPlaintext.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRecipientAccountNumber struct {
	value *RecipientAccountNumber
	isSet bool
}

func (v NullableRecipientAccountNumber) Get() *RecipientAccountNumber {
	return v.value
}

func (v *NullableRecipientAccountNumber) Set(val *RecipientAccountNumber) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipientAccountNumber) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipientAccountNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipientAccountNumber(val *RecipientAccountNumber) *NullableRecipientAccountNumber {
	return &NullableRecipientAccountNumber{value: val, isSet: true}
}

func (v NullableRecipientAccountNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipientAccountNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
