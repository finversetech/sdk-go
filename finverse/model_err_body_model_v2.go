/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// ErrBodyModelV2 struct for ErrBodyModelV2
type ErrBodyModelV2 struct {
	Error *FvErrorModelV2 `json:"error,omitempty"`
}

// NewErrBodyModelV2 instantiates a new ErrBodyModelV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrBodyModelV2() *ErrBodyModelV2 {
	this := ErrBodyModelV2{}
	return &this
}

// NewErrBodyModelV2WithDefaults instantiates a new ErrBodyModelV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrBodyModelV2WithDefaults() *ErrBodyModelV2 {
	this := ErrBodyModelV2{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ErrBodyModelV2) GetError() FvErrorModelV2 {
	if o == nil || o.Error == nil {
		var ret FvErrorModelV2
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrBodyModelV2) GetErrorOk() (*FvErrorModelV2, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ErrBodyModelV2) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given FvErrorModelV2 and assigns it to the Error field.
func (o *ErrBodyModelV2) SetError(v FvErrorModelV2) {
	o.Error = &v
}

func (o ErrBodyModelV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableErrBodyModelV2 struct {
	value *ErrBodyModelV2
	isSet bool
}

func (v NullableErrBodyModelV2) Get() *ErrBodyModelV2 {
	return v.value
}

func (v *NullableErrBodyModelV2) Set(val *ErrBodyModelV2) {
	v.value = val
	v.isSet = true
}

func (v NullableErrBodyModelV2) IsSet() bool {
	return v.isSet
}

func (v *NullableErrBodyModelV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrBodyModelV2(val *ErrBodyModelV2) *NullableErrBodyModelV2 {
	return &NullableErrBodyModelV2{value: val, isSet: true}
}

func (v NullableErrBodyModelV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrBodyModelV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
