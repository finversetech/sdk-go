/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"time"
)

// PayoutSnapshotResponse struct for PayoutSnapshotResponse
type PayoutSnapshotResponse struct {
	PayoutId               *string                       `json:"payout_id,omitempty"`
	TransactionReferenceId *string                       `json:"transaction_reference_id,omitempty"`
	Status                 *string                       `json:"status,omitempty"`
	PayoutType             *string                       `json:"payout_type,omitempty"`
	CreatedAt              *time.Time                    `json:"created_at,omitempty"`
	UpdatedAt              *time.Time                    `json:"updated_at,omitempty"`
	ScheduledDate          *time.Time                    `json:"scheduled_date,omitempty"`
	TransactionDate        *string                       `json:"transaction_date,omitempty"`
	PayoutDetails          *PayoutSnapshotDetails        `json:"payout_details,omitempty"`
	Amount                 *int32                        `json:"amount,omitempty"`
	Currency               *string                       `json:"currency,omitempty"`
	Description            *string                       `json:"description,omitempty"`
	Recipient              *PayoutSnapshotPaymentAccount `json:"recipient,omitempty"`
	Sender                 *PayoutSnapshotPaymentAccount `json:"sender,omitempty"`
}

// NewPayoutSnapshotResponse instantiates a new PayoutSnapshotResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayoutSnapshotResponse() *PayoutSnapshotResponse {
	this := PayoutSnapshotResponse{}
	return &this
}

// NewPayoutSnapshotResponseWithDefaults instantiates a new PayoutSnapshotResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayoutSnapshotResponseWithDefaults() *PayoutSnapshotResponse {
	this := PayoutSnapshotResponse{}
	return &this
}

// GetPayoutId returns the PayoutId field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetPayoutId() string {
	if o == nil || o.PayoutId == nil {
		var ret string
		return ret
	}
	return *o.PayoutId
}

// GetPayoutIdOk returns a tuple with the PayoutId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetPayoutIdOk() (*string, bool) {
	if o == nil || o.PayoutId == nil {
		return nil, false
	}
	return o.PayoutId, true
}

// HasPayoutId returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasPayoutId() bool {
	if o != nil && o.PayoutId != nil {
		return true
	}

	return false
}

// SetPayoutId gets a reference to the given string and assigns it to the PayoutId field.
func (o *PayoutSnapshotResponse) SetPayoutId(v string) {
	o.PayoutId = &v
}

// GetTransactionReferenceId returns the TransactionReferenceId field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetTransactionReferenceId() string {
	if o == nil || o.TransactionReferenceId == nil {
		var ret string
		return ret
	}
	return *o.TransactionReferenceId
}

// GetTransactionReferenceIdOk returns a tuple with the TransactionReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetTransactionReferenceIdOk() (*string, bool) {
	if o == nil || o.TransactionReferenceId == nil {
		return nil, false
	}
	return o.TransactionReferenceId, true
}

// HasTransactionReferenceId returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasTransactionReferenceId() bool {
	if o != nil && o.TransactionReferenceId != nil {
		return true
	}

	return false
}

// SetTransactionReferenceId gets a reference to the given string and assigns it to the TransactionReferenceId field.
func (o *PayoutSnapshotResponse) SetTransactionReferenceId(v string) {
	o.TransactionReferenceId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PayoutSnapshotResponse) SetStatus(v string) {
	o.Status = &v
}

// GetPayoutType returns the PayoutType field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetPayoutType() string {
	if o == nil || o.PayoutType == nil {
		var ret string
		return ret
	}
	return *o.PayoutType
}

// GetPayoutTypeOk returns a tuple with the PayoutType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetPayoutTypeOk() (*string, bool) {
	if o == nil || o.PayoutType == nil {
		return nil, false
	}
	return o.PayoutType, true
}

// HasPayoutType returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasPayoutType() bool {
	if o != nil && o.PayoutType != nil {
		return true
	}

	return false
}

// SetPayoutType gets a reference to the given string and assigns it to the PayoutType field.
func (o *PayoutSnapshotResponse) SetPayoutType(v string) {
	o.PayoutType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PayoutSnapshotResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PayoutSnapshotResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetScheduledDate returns the ScheduledDate field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetScheduledDate() time.Time {
	if o == nil || o.ScheduledDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ScheduledDate
}

// GetScheduledDateOk returns a tuple with the ScheduledDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetScheduledDateOk() (*time.Time, bool) {
	if o == nil || o.ScheduledDate == nil {
		return nil, false
	}
	return o.ScheduledDate, true
}

// HasScheduledDate returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasScheduledDate() bool {
	if o != nil && o.ScheduledDate != nil {
		return true
	}

	return false
}

// SetScheduledDate gets a reference to the given time.Time and assigns it to the ScheduledDate field.
func (o *PayoutSnapshotResponse) SetScheduledDate(v time.Time) {
	o.ScheduledDate = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetTransactionDate() string {
	if o == nil || o.TransactionDate == nil {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetTransactionDateOk() (*string, bool) {
	if o == nil || o.TransactionDate == nil {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasTransactionDate() bool {
	if o != nil && o.TransactionDate != nil {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *PayoutSnapshotResponse) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetPayoutDetails returns the PayoutDetails field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetPayoutDetails() PayoutSnapshotDetails {
	if o == nil || o.PayoutDetails == nil {
		var ret PayoutSnapshotDetails
		return ret
	}
	return *o.PayoutDetails
}

// GetPayoutDetailsOk returns a tuple with the PayoutDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetPayoutDetailsOk() (*PayoutSnapshotDetails, bool) {
	if o == nil || o.PayoutDetails == nil {
		return nil, false
	}
	return o.PayoutDetails, true
}

// HasPayoutDetails returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasPayoutDetails() bool {
	if o != nil && o.PayoutDetails != nil {
		return true
	}

	return false
}

// SetPayoutDetails gets a reference to the given PayoutSnapshotDetails and assigns it to the PayoutDetails field.
func (o *PayoutSnapshotResponse) SetPayoutDetails(v PayoutSnapshotDetails) {
	o.PayoutDetails = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetAmount() int32 {
	if o == nil || o.Amount == nil {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetAmountOk() (*int32, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *PayoutSnapshotResponse) SetAmount(v int32) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *PayoutSnapshotResponse) SetCurrency(v string) {
	o.Currency = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PayoutSnapshotResponse) SetDescription(v string) {
	o.Description = &v
}

// GetRecipient returns the Recipient field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetRecipient() PayoutSnapshotPaymentAccount {
	if o == nil || o.Recipient == nil {
		var ret PayoutSnapshotPaymentAccount
		return ret
	}
	return *o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetRecipientOk() (*PayoutSnapshotPaymentAccount, bool) {
	if o == nil || o.Recipient == nil {
		return nil, false
	}
	return o.Recipient, true
}

// HasRecipient returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasRecipient() bool {
	if o != nil && o.Recipient != nil {
		return true
	}

	return false
}

// SetRecipient gets a reference to the given PayoutSnapshotPaymentAccount and assigns it to the Recipient field.
func (o *PayoutSnapshotResponse) SetRecipient(v PayoutSnapshotPaymentAccount) {
	o.Recipient = &v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *PayoutSnapshotResponse) GetSender() PayoutSnapshotPaymentAccount {
	if o == nil || o.Sender == nil {
		var ret PayoutSnapshotPaymentAccount
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotResponse) GetSenderOk() (*PayoutSnapshotPaymentAccount, bool) {
	if o == nil || o.Sender == nil {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *PayoutSnapshotResponse) HasSender() bool {
	if o != nil && o.Sender != nil {
		return true
	}

	return false
}

// SetSender gets a reference to the given PayoutSnapshotPaymentAccount and assigns it to the Sender field.
func (o *PayoutSnapshotResponse) SetSender(v PayoutSnapshotPaymentAccount) {
	o.Sender = &v
}

func (o PayoutSnapshotResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PayoutId != nil {
		toSerialize["payout_id"] = o.PayoutId
	}
	if o.TransactionReferenceId != nil {
		toSerialize["transaction_reference_id"] = o.TransactionReferenceId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.PayoutType != nil {
		toSerialize["payout_type"] = o.PayoutType
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.ScheduledDate != nil {
		toSerialize["scheduled_date"] = o.ScheduledDate
	}
	if o.TransactionDate != nil {
		toSerialize["transaction_date"] = o.TransactionDate
	}
	if o.PayoutDetails != nil {
		toSerialize["payout_details"] = o.PayoutDetails
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Recipient != nil {
		toSerialize["recipient"] = o.Recipient
	}
	if o.Sender != nil {
		toSerialize["sender"] = o.Sender
	}
	return json.Marshal(toSerialize)
}

type NullablePayoutSnapshotResponse struct {
	value *PayoutSnapshotResponse
	isSet bool
}

func (v NullablePayoutSnapshotResponse) Get() *PayoutSnapshotResponse {
	return v.value
}

func (v *NullablePayoutSnapshotResponse) Set(val *PayoutSnapshotResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePayoutSnapshotResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePayoutSnapshotResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayoutSnapshotResponse(val *PayoutSnapshotResponse) *NullablePayoutSnapshotResponse {
	return &NullablePayoutSnapshotResponse{value: val, isSet: true}
}

func (v NullablePayoutSnapshotResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayoutSnapshotResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
