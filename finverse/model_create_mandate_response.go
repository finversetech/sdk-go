/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"time"
)

// CreateMandateResponse struct for CreateMandateResponse
type CreateMandateResponse struct {
	// Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
	UpdatedAt time.Time `json:"updated_at"`
	// Finverse Mandate ID (ULID)
	MandateId string `json:"mandate_id"`
	// Finverse Payment Method ID (ULID)
	PaymentMethodId *string `json:"payment_method_id,omitempty"`
	// Mandate status
	Status           string                   `json:"status"`
	Recipient        MandateRecipient         `json:"recipient"`
	RecipientAccount *MandateRecipientAccount `json:"recipient_account,omitempty"`
	Sender           GetMandateSender         `json:"sender"`
	SenderAccount    *MandateSenderAccount    `json:"sender_account,omitempty"`
	MandateDetails   MandateDetailsResponse   `json:"mandate_details"`
	Fees             []Fee                    `json:"fees,omitempty"`
	// Additional attributes of the mandate in key:value format (e.g. mandate_internal_id: 1234). It supports up to 10 key:value pairs, whereas the key and value supports up to 50 and 500 characters respectively.
	Metadata *map[string]string `json:"metadata,omitempty"`
	Error    *FvErrorModelV2    `json:"error,omitempty"`
}

// NewCreateMandateResponse instantiates a new CreateMandateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMandateResponse(updatedAt time.Time, mandateId string, status string, recipient MandateRecipient, sender GetMandateSender, mandateDetails MandateDetailsResponse) *CreateMandateResponse {
	this := CreateMandateResponse{}
	this.UpdatedAt = updatedAt
	this.MandateId = mandateId
	this.Status = status
	this.Recipient = recipient
	this.Sender = sender
	this.MandateDetails = mandateDetails
	return &this
}

// NewCreateMandateResponseWithDefaults instantiates a new CreateMandateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMandateResponseWithDefaults() *CreateMandateResponse {
	this := CreateMandateResponse{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CreateMandateResponse) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CreateMandateResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CreateMandateResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CreateMandateResponse) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CreateMandateResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetMandateId returns the MandateId field value
func (o *CreateMandateResponse) GetMandateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MandateId
}

// GetMandateIdOk returns a tuple with the MandateId field value
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetMandateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MandateId, true
}

// SetMandateId sets field value
func (o *CreateMandateResponse) SetMandateId(v string) {
	o.MandateId = v
}

// GetPaymentMethodId returns the PaymentMethodId field value if set, zero value otherwise.
func (o *CreateMandateResponse) GetPaymentMethodId() string {
	if o == nil || o.PaymentMethodId == nil {
		var ret string
		return ret
	}
	return *o.PaymentMethodId
}

// GetPaymentMethodIdOk returns a tuple with the PaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetPaymentMethodIdOk() (*string, bool) {
	if o == nil || o.PaymentMethodId == nil {
		return nil, false
	}
	return o.PaymentMethodId, true
}

// HasPaymentMethodId returns a boolean if a field has been set.
func (o *CreateMandateResponse) HasPaymentMethodId() bool {
	if o != nil && o.PaymentMethodId != nil {
		return true
	}

	return false
}

// SetPaymentMethodId gets a reference to the given string and assigns it to the PaymentMethodId field.
func (o *CreateMandateResponse) SetPaymentMethodId(v string) {
	o.PaymentMethodId = &v
}

// GetStatus returns the Status field value
func (o *CreateMandateResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CreateMandateResponse) SetStatus(v string) {
	o.Status = v
}

// GetRecipient returns the Recipient field value
func (o *CreateMandateResponse) GetRecipient() MandateRecipient {
	if o == nil {
		var ret MandateRecipient
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetRecipientOk() (*MandateRecipient, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *CreateMandateResponse) SetRecipient(v MandateRecipient) {
	o.Recipient = v
}

// GetRecipientAccount returns the RecipientAccount field value if set, zero value otherwise.
func (o *CreateMandateResponse) GetRecipientAccount() MandateRecipientAccount {
	if o == nil || o.RecipientAccount == nil {
		var ret MandateRecipientAccount
		return ret
	}
	return *o.RecipientAccount
}

// GetRecipientAccountOk returns a tuple with the RecipientAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetRecipientAccountOk() (*MandateRecipientAccount, bool) {
	if o == nil || o.RecipientAccount == nil {
		return nil, false
	}
	return o.RecipientAccount, true
}

// HasRecipientAccount returns a boolean if a field has been set.
func (o *CreateMandateResponse) HasRecipientAccount() bool {
	if o != nil && o.RecipientAccount != nil {
		return true
	}

	return false
}

// SetRecipientAccount gets a reference to the given MandateRecipientAccount and assigns it to the RecipientAccount field.
func (o *CreateMandateResponse) SetRecipientAccount(v MandateRecipientAccount) {
	o.RecipientAccount = &v
}

// GetSender returns the Sender field value
func (o *CreateMandateResponse) GetSender() GetMandateSender {
	if o == nil {
		var ret GetMandateSender
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetSenderOk() (*GetMandateSender, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *CreateMandateResponse) SetSender(v GetMandateSender) {
	o.Sender = v
}

// GetSenderAccount returns the SenderAccount field value if set, zero value otherwise.
func (o *CreateMandateResponse) GetSenderAccount() MandateSenderAccount {
	if o == nil || o.SenderAccount == nil {
		var ret MandateSenderAccount
		return ret
	}
	return *o.SenderAccount
}

// GetSenderAccountOk returns a tuple with the SenderAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetSenderAccountOk() (*MandateSenderAccount, bool) {
	if o == nil || o.SenderAccount == nil {
		return nil, false
	}
	return o.SenderAccount, true
}

// HasSenderAccount returns a boolean if a field has been set.
func (o *CreateMandateResponse) HasSenderAccount() bool {
	if o != nil && o.SenderAccount != nil {
		return true
	}

	return false
}

// SetSenderAccount gets a reference to the given MandateSenderAccount and assigns it to the SenderAccount field.
func (o *CreateMandateResponse) SetSenderAccount(v MandateSenderAccount) {
	o.SenderAccount = &v
}

// GetMandateDetails returns the MandateDetails field value
func (o *CreateMandateResponse) GetMandateDetails() MandateDetailsResponse {
	if o == nil {
		var ret MandateDetailsResponse
		return ret
	}

	return o.MandateDetails
}

// GetMandateDetailsOk returns a tuple with the MandateDetails field value
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetMandateDetailsOk() (*MandateDetailsResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MandateDetails, true
}

// SetMandateDetails sets field value
func (o *CreateMandateResponse) SetMandateDetails(v MandateDetailsResponse) {
	o.MandateDetails = v
}

// GetFees returns the Fees field value if set, zero value otherwise.
func (o *CreateMandateResponse) GetFees() []Fee {
	if o == nil || o.Fees == nil {
		var ret []Fee
		return ret
	}
	return o.Fees
}

// GetFeesOk returns a tuple with the Fees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetFeesOk() ([]Fee, bool) {
	if o == nil || o.Fees == nil {
		return nil, false
	}
	return o.Fees, true
}

// HasFees returns a boolean if a field has been set.
func (o *CreateMandateResponse) HasFees() bool {
	if o != nil && o.Fees != nil {
		return true
	}

	return false
}

// SetFees gets a reference to the given []Fee and assigns it to the Fees field.
func (o *CreateMandateResponse) SetFees(v []Fee) {
	o.Fees = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CreateMandateResponse) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreateMandateResponse) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CreateMandateResponse) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *CreateMandateResponse) GetError() FvErrorModelV2 {
	if o == nil || o.Error == nil {
		var ret FvErrorModelV2
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMandateResponse) GetErrorOk() (*FvErrorModelV2, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *CreateMandateResponse) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given FvErrorModelV2 and assigns it to the Error field.
func (o *CreateMandateResponse) SetError(v FvErrorModelV2) {
	o.Error = &v
}

func (o CreateMandateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["mandate_id"] = o.MandateId
	}
	if o.PaymentMethodId != nil {
		toSerialize["payment_method_id"] = o.PaymentMethodId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["recipient"] = o.Recipient
	}
	if o.RecipientAccount != nil {
		toSerialize["recipient_account"] = o.RecipientAccount
	}
	if true {
		toSerialize["sender"] = o.Sender
	}
	if o.SenderAccount != nil {
		toSerialize["sender_account"] = o.SenderAccount
	}
	if true {
		toSerialize["mandate_details"] = o.MandateDetails
	}
	if o.Fees != nil {
		toSerialize["fees"] = o.Fees
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableCreateMandateResponse struct {
	value *CreateMandateResponse
	isSet bool
}

func (v NullableCreateMandateResponse) Get() *CreateMandateResponse {
	return v.value
}

func (v *NullableCreateMandateResponse) Set(val *CreateMandateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMandateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMandateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMandateResponse(val *CreateMandateResponse) *NullableCreateMandateResponse {
	return &NullableCreateMandateResponse{value: val, isSet: true}
}

func (v NullableCreateMandateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMandateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
