/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// CategoryDetails struct for CategoryDetails
type CategoryDetails struct {
	Categories []string `json:"categories,omitempty"`
	Source     *string  `json:"source,omitempty"`
	SourceId   *string  `json:"source_id,omitempty"`
}

// NewCategoryDetails instantiates a new CategoryDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryDetails() *CategoryDetails {
	this := CategoryDetails{}
	return &this
}

// NewCategoryDetailsWithDefaults instantiates a new CategoryDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryDetailsWithDefaults() *CategoryDetails {
	this := CategoryDetails{}
	return &this
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *CategoryDetails) GetCategories() []string {
	if o == nil || o.Categories == nil {
		var ret []string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetCategoriesOk() ([]string, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *CategoryDetails) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *CategoryDetails) SetCategories(v []string) {
	o.Categories = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *CategoryDetails) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *CategoryDetails) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *CategoryDetails) SetSource(v string) {
	o.Source = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *CategoryDetails) GetSourceId() string {
	if o == nil || o.SourceId == nil {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetSourceIdOk() (*string, bool) {
	if o == nil || o.SourceId == nil {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *CategoryDetails) HasSourceId() bool {
	if o != nil && o.SourceId != nil {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *CategoryDetails) SetSourceId(v string) {
	o.SourceId = &v
}

func (o CategoryDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.SourceId != nil {
		toSerialize["source_id"] = o.SourceId
	}
	return json.Marshal(toSerialize)
}

type NullableCategoryDetails struct {
	value *CategoryDetails
	isSet bool
}

func (v NullableCategoryDetails) Get() *CategoryDetails {
	return v.value
}

func (v *NullableCategoryDetails) Set(val *CategoryDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryDetails(val *CategoryDetails) *NullableCategoryDetails {
	return &NullableCategoryDetails{value: val, isSet: true}
}

func (v NullableCategoryDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
