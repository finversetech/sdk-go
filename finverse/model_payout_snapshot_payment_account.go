/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// PayoutSnapshotPaymentAccount struct for PayoutSnapshotPaymentAccount
type PayoutSnapshotPaymentAccount struct {
	PaymentUserId    *string `json:"payment_user_id,omitempty"`
	PaymentAccountId *string `json:"payment_account_id,omitempty"`
	Name             *string `json:"name,omitempty"`
	InstitutionId    *string `json:"institution_id,omitempty"`
}

// NewPayoutSnapshotPaymentAccount instantiates a new PayoutSnapshotPaymentAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayoutSnapshotPaymentAccount() *PayoutSnapshotPaymentAccount {
	this := PayoutSnapshotPaymentAccount{}
	return &this
}

// NewPayoutSnapshotPaymentAccountWithDefaults instantiates a new PayoutSnapshotPaymentAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayoutSnapshotPaymentAccountWithDefaults() *PayoutSnapshotPaymentAccount {
	this := PayoutSnapshotPaymentAccount{}
	return &this
}

// GetPaymentUserId returns the PaymentUserId field value if set, zero value otherwise.
func (o *PayoutSnapshotPaymentAccount) GetPaymentUserId() string {
	if o == nil || o.PaymentUserId == nil {
		var ret string
		return ret
	}
	return *o.PaymentUserId
}

// GetPaymentUserIdOk returns a tuple with the PaymentUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotPaymentAccount) GetPaymentUserIdOk() (*string, bool) {
	if o == nil || o.PaymentUserId == nil {
		return nil, false
	}
	return o.PaymentUserId, true
}

// HasPaymentUserId returns a boolean if a field has been set.
func (o *PayoutSnapshotPaymentAccount) HasPaymentUserId() bool {
	if o != nil && o.PaymentUserId != nil {
		return true
	}

	return false
}

// SetPaymentUserId gets a reference to the given string and assigns it to the PaymentUserId field.
func (o *PayoutSnapshotPaymentAccount) SetPaymentUserId(v string) {
	o.PaymentUserId = &v
}

// GetPaymentAccountId returns the PaymentAccountId field value if set, zero value otherwise.
func (o *PayoutSnapshotPaymentAccount) GetPaymentAccountId() string {
	if o == nil || o.PaymentAccountId == nil {
		var ret string
		return ret
	}
	return *o.PaymentAccountId
}

// GetPaymentAccountIdOk returns a tuple with the PaymentAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotPaymentAccount) GetPaymentAccountIdOk() (*string, bool) {
	if o == nil || o.PaymentAccountId == nil {
		return nil, false
	}
	return o.PaymentAccountId, true
}

// HasPaymentAccountId returns a boolean if a field has been set.
func (o *PayoutSnapshotPaymentAccount) HasPaymentAccountId() bool {
	if o != nil && o.PaymentAccountId != nil {
		return true
	}

	return false
}

// SetPaymentAccountId gets a reference to the given string and assigns it to the PaymentAccountId field.
func (o *PayoutSnapshotPaymentAccount) SetPaymentAccountId(v string) {
	o.PaymentAccountId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PayoutSnapshotPaymentAccount) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotPaymentAccount) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PayoutSnapshotPaymentAccount) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PayoutSnapshotPaymentAccount) SetName(v string) {
	o.Name = &v
}

// GetInstitutionId returns the InstitutionId field value if set, zero value otherwise.
func (o *PayoutSnapshotPaymentAccount) GetInstitutionId() string {
	if o == nil || o.InstitutionId == nil {
		var ret string
		return ret
	}
	return *o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutSnapshotPaymentAccount) GetInstitutionIdOk() (*string, bool) {
	if o == nil || o.InstitutionId == nil {
		return nil, false
	}
	return o.InstitutionId, true
}

// HasInstitutionId returns a boolean if a field has been set.
func (o *PayoutSnapshotPaymentAccount) HasInstitutionId() bool {
	if o != nil && o.InstitutionId != nil {
		return true
	}

	return false
}

// SetInstitutionId gets a reference to the given string and assigns it to the InstitutionId field.
func (o *PayoutSnapshotPaymentAccount) SetInstitutionId(v string) {
	o.InstitutionId = &v
}

func (o PayoutSnapshotPaymentAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PaymentUserId != nil {
		toSerialize["payment_user_id"] = o.PaymentUserId
	}
	if o.PaymentAccountId != nil {
		toSerialize["payment_account_id"] = o.PaymentAccountId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.InstitutionId != nil {
		toSerialize["institution_id"] = o.InstitutionId
	}
	return json.Marshal(toSerialize)
}

type NullablePayoutSnapshotPaymentAccount struct {
	value *PayoutSnapshotPaymentAccount
	isSet bool
}

func (v NullablePayoutSnapshotPaymentAccount) Get() *PayoutSnapshotPaymentAccount {
	return v.value
}

func (v *NullablePayoutSnapshotPaymentAccount) Set(val *PayoutSnapshotPaymentAccount) {
	v.value = val
	v.isSet = true
}

func (v NullablePayoutSnapshotPaymentAccount) IsSet() bool {
	return v.isSet
}

func (v *NullablePayoutSnapshotPaymentAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayoutSnapshotPaymentAccount(val *PayoutSnapshotPaymentAccount) *NullablePayoutSnapshotPaymentAccount {
	return &NullablePayoutSnapshotPaymentAccount{value: val, isSet: true}
}

func (v NullablePayoutSnapshotPaymentAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayoutSnapshotPaymentAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
