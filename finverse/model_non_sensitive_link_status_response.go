/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// NonSensitiveLinkStatusResponse struct for NonSensitiveLinkStatusResponse
type NonSensitiveLinkStatusResponse struct {
	Action      *LinkStatusActionModel              `json:"action,omitempty"`
	RedirectUri *string                             `json:"redirect_uri,omitempty"`
	Success     *NonSensitiveLinkStatusSuccessModel `json:"success,omitempty"`
	Error       *ErrBodyModelV2                     `json:"error,omitempty"`
}

// NewNonSensitiveLinkStatusResponse instantiates a new NonSensitiveLinkStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNonSensitiveLinkStatusResponse() *NonSensitiveLinkStatusResponse {
	this := NonSensitiveLinkStatusResponse{}
	return &this
}

// NewNonSensitiveLinkStatusResponseWithDefaults instantiates a new NonSensitiveLinkStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNonSensitiveLinkStatusResponseWithDefaults() *NonSensitiveLinkStatusResponse {
	this := NonSensitiveLinkStatusResponse{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *NonSensitiveLinkStatusResponse) GetAction() LinkStatusActionModel {
	if o == nil || o.Action == nil {
		var ret LinkStatusActionModel
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonSensitiveLinkStatusResponse) GetActionOk() (*LinkStatusActionModel, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *NonSensitiveLinkStatusResponse) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given LinkStatusActionModel and assigns it to the Action field.
func (o *NonSensitiveLinkStatusResponse) SetAction(v LinkStatusActionModel) {
	o.Action = &v
}

// GetRedirectUri returns the RedirectUri field value if set, zero value otherwise.
func (o *NonSensitiveLinkStatusResponse) GetRedirectUri() string {
	if o == nil || o.RedirectUri == nil {
		var ret string
		return ret
	}
	return *o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonSensitiveLinkStatusResponse) GetRedirectUriOk() (*string, bool) {
	if o == nil || o.RedirectUri == nil {
		return nil, false
	}
	return o.RedirectUri, true
}

// HasRedirectUri returns a boolean if a field has been set.
func (o *NonSensitiveLinkStatusResponse) HasRedirectUri() bool {
	if o != nil && o.RedirectUri != nil {
		return true
	}

	return false
}

// SetRedirectUri gets a reference to the given string and assigns it to the RedirectUri field.
func (o *NonSensitiveLinkStatusResponse) SetRedirectUri(v string) {
	o.RedirectUri = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *NonSensitiveLinkStatusResponse) GetSuccess() NonSensitiveLinkStatusSuccessModel {
	if o == nil || o.Success == nil {
		var ret NonSensitiveLinkStatusSuccessModel
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonSensitiveLinkStatusResponse) GetSuccessOk() (*NonSensitiveLinkStatusSuccessModel, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *NonSensitiveLinkStatusResponse) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given NonSensitiveLinkStatusSuccessModel and assigns it to the Success field.
func (o *NonSensitiveLinkStatusResponse) SetSuccess(v NonSensitiveLinkStatusSuccessModel) {
	o.Success = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *NonSensitiveLinkStatusResponse) GetError() ErrBodyModelV2 {
	if o == nil || o.Error == nil {
		var ret ErrBodyModelV2
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonSensitiveLinkStatusResponse) GetErrorOk() (*ErrBodyModelV2, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *NonSensitiveLinkStatusResponse) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrBodyModelV2 and assigns it to the Error field.
func (o *NonSensitiveLinkStatusResponse) SetError(v ErrBodyModelV2) {
	o.Error = &v
}

func (o NonSensitiveLinkStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.RedirectUri != nil {
		toSerialize["redirect_uri"] = o.RedirectUri
	}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableNonSensitiveLinkStatusResponse struct {
	value *NonSensitiveLinkStatusResponse
	isSet bool
}

func (v NullableNonSensitiveLinkStatusResponse) Get() *NonSensitiveLinkStatusResponse {
	return v.value
}

func (v *NullableNonSensitiveLinkStatusResponse) Set(val *NonSensitiveLinkStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNonSensitiveLinkStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNonSensitiveLinkStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNonSensitiveLinkStatusResponse(val *NonSensitiveLinkStatusResponse) *NullableNonSensitiveLinkStatusResponse {
	return &NullableNonSensitiveLinkStatusResponse{value: val, isSet: true}
}

func (v NullableNonSensitiveLinkStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNonSensitiveLinkStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
