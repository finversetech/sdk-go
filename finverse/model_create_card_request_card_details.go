/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateCardRequestCardDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCardRequestCardDetails{}

// CreateCardRequestCardDetails struct for CreateCardRequestCardDetails
type CreateCardRequestCardDetails struct {
	Brand       string `json:"brand"`
	Last4       string `json:"last4"`
	Currency    string `json:"currency"`
	ExpiryMonth *int32 `json:"expiry_month,omitempty"`
	ExpiryYear  *int32 `json:"expiry_year,omitempty"`
}

type _CreateCardRequestCardDetails CreateCardRequestCardDetails

// NewCreateCardRequestCardDetails instantiates a new CreateCardRequestCardDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCardRequestCardDetails(brand string, last4 string, currency string) *CreateCardRequestCardDetails {
	this := CreateCardRequestCardDetails{}
	this.Brand = brand
	this.Last4 = last4
	this.Currency = currency
	return &this
}

// NewCreateCardRequestCardDetailsWithDefaults instantiates a new CreateCardRequestCardDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCardRequestCardDetailsWithDefaults() *CreateCardRequestCardDetails {
	this := CreateCardRequestCardDetails{}
	return &this
}

// GetBrand returns the Brand field value
func (o *CreateCardRequestCardDetails) GetBrand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Brand
}

// GetBrandOk returns a tuple with the Brand field value
// and a boolean to check if the value has been set.
func (o *CreateCardRequestCardDetails) GetBrandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Brand, true
}

// SetBrand sets field value
func (o *CreateCardRequestCardDetails) SetBrand(v string) {
	o.Brand = v
}

// GetLast4 returns the Last4 field value
func (o *CreateCardRequestCardDetails) GetLast4() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Last4
}

// GetLast4Ok returns a tuple with the Last4 field value
// and a boolean to check if the value has been set.
func (o *CreateCardRequestCardDetails) GetLast4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Last4, true
}

// SetLast4 sets field value
func (o *CreateCardRequestCardDetails) SetLast4(v string) {
	o.Last4 = v
}

// GetCurrency returns the Currency field value
func (o *CreateCardRequestCardDetails) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *CreateCardRequestCardDetails) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *CreateCardRequestCardDetails) SetCurrency(v string) {
	o.Currency = v
}

// GetExpiryMonth returns the ExpiryMonth field value if set, zero value otherwise.
func (o *CreateCardRequestCardDetails) GetExpiryMonth() int32 {
	if o == nil || IsNil(o.ExpiryMonth) {
		var ret int32
		return ret
	}
	return *o.ExpiryMonth
}

// GetExpiryMonthOk returns a tuple with the ExpiryMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCardRequestCardDetails) GetExpiryMonthOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiryMonth) {
		return nil, false
	}
	return o.ExpiryMonth, true
}

// HasExpiryMonth returns a boolean if a field has been set.
func (o *CreateCardRequestCardDetails) HasExpiryMonth() bool {
	if o != nil && !IsNil(o.ExpiryMonth) {
		return true
	}

	return false
}

// SetExpiryMonth gets a reference to the given int32 and assigns it to the ExpiryMonth field.
func (o *CreateCardRequestCardDetails) SetExpiryMonth(v int32) {
	o.ExpiryMonth = &v
}

// GetExpiryYear returns the ExpiryYear field value if set, zero value otherwise.
func (o *CreateCardRequestCardDetails) GetExpiryYear() int32 {
	if o == nil || IsNil(o.ExpiryYear) {
		var ret int32
		return ret
	}
	return *o.ExpiryYear
}

// GetExpiryYearOk returns a tuple with the ExpiryYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCardRequestCardDetails) GetExpiryYearOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiryYear) {
		return nil, false
	}
	return o.ExpiryYear, true
}

// HasExpiryYear returns a boolean if a field has been set.
func (o *CreateCardRequestCardDetails) HasExpiryYear() bool {
	if o != nil && !IsNil(o.ExpiryYear) {
		return true
	}

	return false
}

// SetExpiryYear gets a reference to the given int32 and assigns it to the ExpiryYear field.
func (o *CreateCardRequestCardDetails) SetExpiryYear(v int32) {
	o.ExpiryYear = &v
}

func (o CreateCardRequestCardDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCardRequestCardDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["brand"] = o.Brand
	toSerialize["last4"] = o.Last4
	toSerialize["currency"] = o.Currency
	if !IsNil(o.ExpiryMonth) {
		toSerialize["expiry_month"] = o.ExpiryMonth
	}
	if !IsNil(o.ExpiryYear) {
		toSerialize["expiry_year"] = o.ExpiryYear
	}
	return toSerialize, nil
}

func (o *CreateCardRequestCardDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"brand",
		"last4",
		"currency",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCardRequestCardDetails := _CreateCardRequestCardDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCardRequestCardDetails)

	if err != nil {
		return err
	}

	*o = CreateCardRequestCardDetails(varCreateCardRequestCardDetails)

	return err
}

type NullableCreateCardRequestCardDetails struct {
	value *CreateCardRequestCardDetails
	isSet bool
}

func (v NullableCreateCardRequestCardDetails) Get() *CreateCardRequestCardDetails {
	return v.value
}

func (v *NullableCreateCardRequestCardDetails) Set(val *CreateCardRequestCardDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCardRequestCardDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCardRequestCardDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCardRequestCardDetails(val *CreateCardRequestCardDetails) *NullableCreateCardRequestCardDetails {
	return &NullableCreateCardRequestCardDetails{value: val, isSet: true}
}

func (v NullableCreateCardRequestCardDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCardRequestCardDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
