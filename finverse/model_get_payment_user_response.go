/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetPaymentUserResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPaymentUserResponse{}

// GetPaymentUserResponse struct for GetPaymentUserResponse
type GetPaymentUserResponse struct {
	PaymentUserId string `json:"payment_user_id"`
	CustomerAppId string `json:"customer_app_id"`
	// The user's current autopay value
	AutopayConsent bool `json:"autopay_consent"`
	// This indicates the value that the user's pre-set selection should be. If this is a new user, the value will be set to true by default, else it will be the user's current autopay value.
	AutopayPrefill bool `json:"autopay_prefill"`
}

type _GetPaymentUserResponse GetPaymentUserResponse

// NewGetPaymentUserResponse instantiates a new GetPaymentUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPaymentUserResponse(paymentUserId string, customerAppId string, autopayConsent bool, autopayPrefill bool) *GetPaymentUserResponse {
	this := GetPaymentUserResponse{}
	this.PaymentUserId = paymentUserId
	this.CustomerAppId = customerAppId
	this.AutopayConsent = autopayConsent
	this.AutopayPrefill = autopayPrefill
	return &this
}

// NewGetPaymentUserResponseWithDefaults instantiates a new GetPaymentUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPaymentUserResponseWithDefaults() *GetPaymentUserResponse {
	this := GetPaymentUserResponse{}
	return &this
}

// GetPaymentUserId returns the PaymentUserId field value
func (o *GetPaymentUserResponse) GetPaymentUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentUserId
}

// GetPaymentUserIdOk returns a tuple with the PaymentUserId field value
// and a boolean to check if the value has been set.
func (o *GetPaymentUserResponse) GetPaymentUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentUserId, true
}

// SetPaymentUserId sets field value
func (o *GetPaymentUserResponse) SetPaymentUserId(v string) {
	o.PaymentUserId = v
}

// GetCustomerAppId returns the CustomerAppId field value
func (o *GetPaymentUserResponse) GetCustomerAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerAppId
}

// GetCustomerAppIdOk returns a tuple with the CustomerAppId field value
// and a boolean to check if the value has been set.
func (o *GetPaymentUserResponse) GetCustomerAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerAppId, true
}

// SetCustomerAppId sets field value
func (o *GetPaymentUserResponse) SetCustomerAppId(v string) {
	o.CustomerAppId = v
}

// GetAutopayConsent returns the AutopayConsent field value
func (o *GetPaymentUserResponse) GetAutopayConsent() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutopayConsent
}

// GetAutopayConsentOk returns a tuple with the AutopayConsent field value
// and a boolean to check if the value has been set.
func (o *GetPaymentUserResponse) GetAutopayConsentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutopayConsent, true
}

// SetAutopayConsent sets field value
func (o *GetPaymentUserResponse) SetAutopayConsent(v bool) {
	o.AutopayConsent = v
}

// GetAutopayPrefill returns the AutopayPrefill field value
func (o *GetPaymentUserResponse) GetAutopayPrefill() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutopayPrefill
}

// GetAutopayPrefillOk returns a tuple with the AutopayPrefill field value
// and a boolean to check if the value has been set.
func (o *GetPaymentUserResponse) GetAutopayPrefillOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutopayPrefill, true
}

// SetAutopayPrefill sets field value
func (o *GetPaymentUserResponse) SetAutopayPrefill(v bool) {
	o.AutopayPrefill = v
}

func (o GetPaymentUserResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPaymentUserResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["payment_user_id"] = o.PaymentUserId
	toSerialize["customer_app_id"] = o.CustomerAppId
	toSerialize["autopay_consent"] = o.AutopayConsent
	toSerialize["autopay_prefill"] = o.AutopayPrefill
	return toSerialize, nil
}

func (o *GetPaymentUserResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"payment_user_id",
		"customer_app_id",
		"autopay_consent",
		"autopay_prefill",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetPaymentUserResponse := _GetPaymentUserResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetPaymentUserResponse)

	if err != nil {
		return err
	}

	*o = GetPaymentUserResponse(varGetPaymentUserResponse)

	return err
}

type NullableGetPaymentUserResponse struct {
	value *GetPaymentUserResponse
	isSet bool
}

func (v NullableGetPaymentUserResponse) Get() *GetPaymentUserResponse {
	return v.value
}

func (v *NullableGetPaymentUserResponse) Set(val *GetPaymentUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPaymentUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPaymentUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPaymentUserResponse(val *GetPaymentUserResponse) *NullableGetPaymentUserResponse {
	return &NullableGetPaymentUserResponse{value: val, isSet: true}
}

func (v NullableGetPaymentUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPaymentUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
