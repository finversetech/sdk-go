/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the GetLoginIdentityByIdResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLoginIdentityByIdResponse{}

// GetLoginIdentityByIdResponse struct for GetLoginIdentityByIdResponse
type GetLoginIdentityByIdResponse struct {
	LoginIdentity        *LoginIdentity    `json:"login_identity,omitempty"`
	Institution          *InstitutionShort `json:"institution,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetLoginIdentityByIdResponse GetLoginIdentityByIdResponse

// NewGetLoginIdentityByIdResponse instantiates a new GetLoginIdentityByIdResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLoginIdentityByIdResponse() *GetLoginIdentityByIdResponse {
	this := GetLoginIdentityByIdResponse{}
	return &this
}

// NewGetLoginIdentityByIdResponseWithDefaults instantiates a new GetLoginIdentityByIdResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLoginIdentityByIdResponseWithDefaults() *GetLoginIdentityByIdResponse {
	this := GetLoginIdentityByIdResponse{}
	return &this
}

// GetLoginIdentity returns the LoginIdentity field value if set, zero value otherwise.
func (o *GetLoginIdentityByIdResponse) GetLoginIdentity() LoginIdentity {
	if o == nil || IsNil(o.LoginIdentity) {
		var ret LoginIdentity
		return ret
	}
	return *o.LoginIdentity
}

// GetLoginIdentityOk returns a tuple with the LoginIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoginIdentityByIdResponse) GetLoginIdentityOk() (*LoginIdentity, bool) {
	if o == nil || IsNil(o.LoginIdentity) {
		return nil, false
	}
	return o.LoginIdentity, true
}

// HasLoginIdentity returns a boolean if a field has been set.
func (o *GetLoginIdentityByIdResponse) HasLoginIdentity() bool {
	if o != nil && !IsNil(o.LoginIdentity) {
		return true
	}

	return false
}

// SetLoginIdentity gets a reference to the given LoginIdentity and assigns it to the LoginIdentity field.
func (o *GetLoginIdentityByIdResponse) SetLoginIdentity(v LoginIdentity) {
	o.LoginIdentity = &v
}

// GetInstitution returns the Institution field value if set, zero value otherwise.
func (o *GetLoginIdentityByIdResponse) GetInstitution() InstitutionShort {
	if o == nil || IsNil(o.Institution) {
		var ret InstitutionShort
		return ret
	}
	return *o.Institution
}

// GetInstitutionOk returns a tuple with the Institution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoginIdentityByIdResponse) GetInstitutionOk() (*InstitutionShort, bool) {
	if o == nil || IsNil(o.Institution) {
		return nil, false
	}
	return o.Institution, true
}

// HasInstitution returns a boolean if a field has been set.
func (o *GetLoginIdentityByIdResponse) HasInstitution() bool {
	if o != nil && !IsNil(o.Institution) {
		return true
	}

	return false
}

// SetInstitution gets a reference to the given InstitutionShort and assigns it to the Institution field.
func (o *GetLoginIdentityByIdResponse) SetInstitution(v InstitutionShort) {
	o.Institution = &v
}

func (o GetLoginIdentityByIdResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLoginIdentityByIdResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoginIdentity) {
		toSerialize["login_identity"] = o.LoginIdentity
	}
	if !IsNil(o.Institution) {
		toSerialize["institution"] = o.Institution
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetLoginIdentityByIdResponse) UnmarshalJSON(data []byte) (err error) {
	varGetLoginIdentityByIdResponse := _GetLoginIdentityByIdResponse{}

	err = json.Unmarshal(data, &varGetLoginIdentityByIdResponse)

	if err != nil {
		return err
	}

	*o = GetLoginIdentityByIdResponse(varGetLoginIdentityByIdResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "login_identity")
		delete(additionalProperties, "institution")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetLoginIdentityByIdResponse struct {
	value *GetLoginIdentityByIdResponse
	isSet bool
}

func (v NullableGetLoginIdentityByIdResponse) Get() *GetLoginIdentityByIdResponse {
	return v.value
}

func (v *NullableGetLoginIdentityByIdResponse) Set(val *GetLoginIdentityByIdResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLoginIdentityByIdResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLoginIdentityByIdResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLoginIdentityByIdResponse(val *GetLoginIdentityByIdResponse) *NullableGetLoginIdentityByIdResponse {
	return &NullableGetLoginIdentityByIdResponse{value: val, isSet: true}
}

func (v NullableGetLoginIdentityByIdResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLoginIdentityByIdResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
