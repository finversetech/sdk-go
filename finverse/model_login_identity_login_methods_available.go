/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// LoginIdentityLoginMethodsAvailable struct for LoginIdentityLoginMethodsAvailable
type LoginIdentityLoginMethodsAvailable struct {
	HavePassword *bool `json:"havePassword,omitempty"`
	HaveSecret   *bool `json:"haveSecret,omitempty"`
}

// NewLoginIdentityLoginMethodsAvailable instantiates a new LoginIdentityLoginMethodsAvailable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginIdentityLoginMethodsAvailable() *LoginIdentityLoginMethodsAvailable {
	this := LoginIdentityLoginMethodsAvailable{}
	return &this
}

// NewLoginIdentityLoginMethodsAvailableWithDefaults instantiates a new LoginIdentityLoginMethodsAvailable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginIdentityLoginMethodsAvailableWithDefaults() *LoginIdentityLoginMethodsAvailable {
	this := LoginIdentityLoginMethodsAvailable{}
	return &this
}

// GetHavePassword returns the HavePassword field value if set, zero value otherwise.
func (o *LoginIdentityLoginMethodsAvailable) GetHavePassword() bool {
	if o == nil || o.HavePassword == nil {
		var ret bool
		return ret
	}
	return *o.HavePassword
}

// GetHavePasswordOk returns a tuple with the HavePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentityLoginMethodsAvailable) GetHavePasswordOk() (*bool, bool) {
	if o == nil || o.HavePassword == nil {
		return nil, false
	}
	return o.HavePassword, true
}

// HasHavePassword returns a boolean if a field has been set.
func (o *LoginIdentityLoginMethodsAvailable) HasHavePassword() bool {
	if o != nil && o.HavePassword != nil {
		return true
	}

	return false
}

// SetHavePassword gets a reference to the given bool and assigns it to the HavePassword field.
func (o *LoginIdentityLoginMethodsAvailable) SetHavePassword(v bool) {
	o.HavePassword = &v
}

// GetHaveSecret returns the HaveSecret field value if set, zero value otherwise.
func (o *LoginIdentityLoginMethodsAvailable) GetHaveSecret() bool {
	if o == nil || o.HaveSecret == nil {
		var ret bool
		return ret
	}
	return *o.HaveSecret
}

// GetHaveSecretOk returns a tuple with the HaveSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginIdentityLoginMethodsAvailable) GetHaveSecretOk() (*bool, bool) {
	if o == nil || o.HaveSecret == nil {
		return nil, false
	}
	return o.HaveSecret, true
}

// HasHaveSecret returns a boolean if a field has been set.
func (o *LoginIdentityLoginMethodsAvailable) HasHaveSecret() bool {
	if o != nil && o.HaveSecret != nil {
		return true
	}

	return false
}

// SetHaveSecret gets a reference to the given bool and assigns it to the HaveSecret field.
func (o *LoginIdentityLoginMethodsAvailable) SetHaveSecret(v bool) {
	o.HaveSecret = &v
}

func (o LoginIdentityLoginMethodsAvailable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HavePassword != nil {
		toSerialize["havePassword"] = o.HavePassword
	}
	if o.HaveSecret != nil {
		toSerialize["haveSecret"] = o.HaveSecret
	}
	return json.Marshal(toSerialize)
}

type NullableLoginIdentityLoginMethodsAvailable struct {
	value *LoginIdentityLoginMethodsAvailable
	isSet bool
}

func (v NullableLoginIdentityLoginMethodsAvailable) Get() *LoginIdentityLoginMethodsAvailable {
	return v.value
}

func (v *NullableLoginIdentityLoginMethodsAvailable) Set(val *LoginIdentityLoginMethodsAvailable) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginIdentityLoginMethodsAvailable) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginIdentityLoginMethodsAvailable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginIdentityLoginMethodsAvailable(val *LoginIdentityLoginMethodsAvailable) *NullableLoginIdentityLoginMethodsAvailable {
	return &NullableLoginIdentityLoginMethodsAvailable{value: val, isSet: true}
}

func (v NullableLoginIdentityLoginMethodsAvailable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginIdentityLoginMethodsAvailable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
