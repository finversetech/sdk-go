/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the RefreshPaymentAttemptResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefreshPaymentAttemptResponse{}

// RefreshPaymentAttemptResponse struct for RefreshPaymentAttemptResponse
type RefreshPaymentAttemptResponse struct {
	RedirectUrl          *string `json:"redirect_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RefreshPaymentAttemptResponse RefreshPaymentAttemptResponse

// NewRefreshPaymentAttemptResponse instantiates a new RefreshPaymentAttemptResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshPaymentAttemptResponse() *RefreshPaymentAttemptResponse {
	this := RefreshPaymentAttemptResponse{}
	return &this
}

// NewRefreshPaymentAttemptResponseWithDefaults instantiates a new RefreshPaymentAttemptResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshPaymentAttemptResponseWithDefaults() *RefreshPaymentAttemptResponse {
	this := RefreshPaymentAttemptResponse{}
	return &this
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *RefreshPaymentAttemptResponse) GetRedirectUrl() string {
	if o == nil || IsNil(o.RedirectUrl) {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshPaymentAttemptResponse) GetRedirectUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUrl) {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *RefreshPaymentAttemptResponse) HasRedirectUrl() bool {
	if o != nil && !IsNil(o.RedirectUrl) {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *RefreshPaymentAttemptResponse) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

func (o RefreshPaymentAttemptResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefreshPaymentAttemptResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RedirectUrl) {
		toSerialize["redirect_url"] = o.RedirectUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RefreshPaymentAttemptResponse) UnmarshalJSON(data []byte) (err error) {
	varRefreshPaymentAttemptResponse := _RefreshPaymentAttemptResponse{}

	err = json.Unmarshal(data, &varRefreshPaymentAttemptResponse)

	if err != nil {
		return err
	}

	*o = RefreshPaymentAttemptResponse(varRefreshPaymentAttemptResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "redirect_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRefreshPaymentAttemptResponse struct {
	value *RefreshPaymentAttemptResponse
	isSet bool
}

func (v NullableRefreshPaymentAttemptResponse) Get() *RefreshPaymentAttemptResponse {
	return v.value
}

func (v *NullableRefreshPaymentAttemptResponse) Set(val *RefreshPaymentAttemptResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshPaymentAttemptResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshPaymentAttemptResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshPaymentAttemptResponse(val *RefreshPaymentAttemptResponse) *NullableRefreshPaymentAttemptResponse {
	return &NullableRefreshPaymentAttemptResponse{value: val, isSet: true}
}

func (v NullableRefreshPaymentAttemptResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshPaymentAttemptResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
