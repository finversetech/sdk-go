/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the RapidstorMetadataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RapidstorMetadataResponse{}

// RapidstorMetadataResponse struct for RapidstorMetadataResponse
type RapidstorMetadataResponse struct {
	CorpCode              *string  `json:"corp_code,omitempty"`
	SLocationCode         *string  `json:"s_location_code,omitempty"`
	TenantId              *string  `json:"tenant_id,omitempty"`
	IAnnivDays            *float32 `json:"i_anniv_days,omitempty"`
	TenantDefaultCurrency *string  `json:"tenant_default_currency,omitempty"`
	AccountToken          *string  `json:"account_token,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _RapidstorMetadataResponse RapidstorMetadataResponse

// NewRapidstorMetadataResponse instantiates a new RapidstorMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRapidstorMetadataResponse() *RapidstorMetadataResponse {
	this := RapidstorMetadataResponse{}
	return &this
}

// NewRapidstorMetadataResponseWithDefaults instantiates a new RapidstorMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRapidstorMetadataResponseWithDefaults() *RapidstorMetadataResponse {
	this := RapidstorMetadataResponse{}
	return &this
}

// GetCorpCode returns the CorpCode field value if set, zero value otherwise.
func (o *RapidstorMetadataResponse) GetCorpCode() string {
	if o == nil || IsNil(o.CorpCode) {
		var ret string
		return ret
	}
	return *o.CorpCode
}

// GetCorpCodeOk returns a tuple with the CorpCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RapidstorMetadataResponse) GetCorpCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CorpCode) {
		return nil, false
	}
	return o.CorpCode, true
}

// HasCorpCode returns a boolean if a field has been set.
func (o *RapidstorMetadataResponse) HasCorpCode() bool {
	if o != nil && !IsNil(o.CorpCode) {
		return true
	}

	return false
}

// SetCorpCode gets a reference to the given string and assigns it to the CorpCode field.
func (o *RapidstorMetadataResponse) SetCorpCode(v string) {
	o.CorpCode = &v
}

// GetSLocationCode returns the SLocationCode field value if set, zero value otherwise.
func (o *RapidstorMetadataResponse) GetSLocationCode() string {
	if o == nil || IsNil(o.SLocationCode) {
		var ret string
		return ret
	}
	return *o.SLocationCode
}

// GetSLocationCodeOk returns a tuple with the SLocationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RapidstorMetadataResponse) GetSLocationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SLocationCode) {
		return nil, false
	}
	return o.SLocationCode, true
}

// HasSLocationCode returns a boolean if a field has been set.
func (o *RapidstorMetadataResponse) HasSLocationCode() bool {
	if o != nil && !IsNil(o.SLocationCode) {
		return true
	}

	return false
}

// SetSLocationCode gets a reference to the given string and assigns it to the SLocationCode field.
func (o *RapidstorMetadataResponse) SetSLocationCode(v string) {
	o.SLocationCode = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *RapidstorMetadataResponse) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RapidstorMetadataResponse) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *RapidstorMetadataResponse) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *RapidstorMetadataResponse) SetTenantId(v string) {
	o.TenantId = &v
}

// GetIAnnivDays returns the IAnnivDays field value if set, zero value otherwise.
func (o *RapidstorMetadataResponse) GetIAnnivDays() float32 {
	if o == nil || IsNil(o.IAnnivDays) {
		var ret float32
		return ret
	}
	return *o.IAnnivDays
}

// GetIAnnivDaysOk returns a tuple with the IAnnivDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RapidstorMetadataResponse) GetIAnnivDaysOk() (*float32, bool) {
	if o == nil || IsNil(o.IAnnivDays) {
		return nil, false
	}
	return o.IAnnivDays, true
}

// HasIAnnivDays returns a boolean if a field has been set.
func (o *RapidstorMetadataResponse) HasIAnnivDays() bool {
	if o != nil && !IsNil(o.IAnnivDays) {
		return true
	}

	return false
}

// SetIAnnivDays gets a reference to the given float32 and assigns it to the IAnnivDays field.
func (o *RapidstorMetadataResponse) SetIAnnivDays(v float32) {
	o.IAnnivDays = &v
}

// GetTenantDefaultCurrency returns the TenantDefaultCurrency field value if set, zero value otherwise.
func (o *RapidstorMetadataResponse) GetTenantDefaultCurrency() string {
	if o == nil || IsNil(o.TenantDefaultCurrency) {
		var ret string
		return ret
	}
	return *o.TenantDefaultCurrency
}

// GetTenantDefaultCurrencyOk returns a tuple with the TenantDefaultCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RapidstorMetadataResponse) GetTenantDefaultCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.TenantDefaultCurrency) {
		return nil, false
	}
	return o.TenantDefaultCurrency, true
}

// HasTenantDefaultCurrency returns a boolean if a field has been set.
func (o *RapidstorMetadataResponse) HasTenantDefaultCurrency() bool {
	if o != nil && !IsNil(o.TenantDefaultCurrency) {
		return true
	}

	return false
}

// SetTenantDefaultCurrency gets a reference to the given string and assigns it to the TenantDefaultCurrency field.
func (o *RapidstorMetadataResponse) SetTenantDefaultCurrency(v string) {
	o.TenantDefaultCurrency = &v
}

// GetAccountToken returns the AccountToken field value if set, zero value otherwise.
func (o *RapidstorMetadataResponse) GetAccountToken() string {
	if o == nil || IsNil(o.AccountToken) {
		var ret string
		return ret
	}
	return *o.AccountToken
}

// GetAccountTokenOk returns a tuple with the AccountToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RapidstorMetadataResponse) GetAccountTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccountToken) {
		return nil, false
	}
	return o.AccountToken, true
}

// HasAccountToken returns a boolean if a field has been set.
func (o *RapidstorMetadataResponse) HasAccountToken() bool {
	if o != nil && !IsNil(o.AccountToken) {
		return true
	}

	return false
}

// SetAccountToken gets a reference to the given string and assigns it to the AccountToken field.
func (o *RapidstorMetadataResponse) SetAccountToken(v string) {
	o.AccountToken = &v
}

func (o RapidstorMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RapidstorMetadataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CorpCode) {
		toSerialize["corp_code"] = o.CorpCode
	}
	if !IsNil(o.SLocationCode) {
		toSerialize["s_location_code"] = o.SLocationCode
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenant_id"] = o.TenantId
	}
	if !IsNil(o.IAnnivDays) {
		toSerialize["i_anniv_days"] = o.IAnnivDays
	}
	if !IsNil(o.TenantDefaultCurrency) {
		toSerialize["tenant_default_currency"] = o.TenantDefaultCurrency
	}
	if !IsNil(o.AccountToken) {
		toSerialize["account_token"] = o.AccountToken
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RapidstorMetadataResponse) UnmarshalJSON(data []byte) (err error) {
	varRapidstorMetadataResponse := _RapidstorMetadataResponse{}

	err = json.Unmarshal(data, &varRapidstorMetadataResponse)

	if err != nil {
		return err
	}

	*o = RapidstorMetadataResponse(varRapidstorMetadataResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "corp_code")
		delete(additionalProperties, "s_location_code")
		delete(additionalProperties, "tenant_id")
		delete(additionalProperties, "i_anniv_days")
		delete(additionalProperties, "tenant_default_currency")
		delete(additionalProperties, "account_token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRapidstorMetadataResponse struct {
	value *RapidstorMetadataResponse
	isSet bool
}

func (v NullableRapidstorMetadataResponse) Get() *RapidstorMetadataResponse {
	return v.value
}

func (v *NullableRapidstorMetadataResponse) Set(val *RapidstorMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRapidstorMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRapidstorMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRapidstorMetadataResponse(val *RapidstorMetadataResponse) *NullableRapidstorMetadataResponse {
	return &NullableRapidstorMetadataResponse{value: val, isSet: true}
}

func (v NullableRapidstorMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRapidstorMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
