/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"fmt"
)

// checks if the MandateDetailsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MandateDetailsRequest{}

// MandateDetailsRequest struct for MandateDetailsRequest
type MandateDetailsRequest struct {
	// ISO currency code
	Currency string `json:"currency"`
	// YYYY-MM-DD, must be later than or the same as the date of creation. If unspecified, default to the date of creation.
	StartDate NullableString `json:"start_date,omitempty"`
	// YYYY-MM-DD, must be later than the date of creation.
	EndDate           NullableString            `json:"end_date,omitempty"`
	PaymentSchedule   *PaymentSchedule          `json:"payment_schedule,omitempty"`
	TransactionLimits *TransactionLimitsRequest `json:"transaction_limits,omitempty"`
	// End-user facing description of the mandate (used in notifications, and in payments if no description is provided)
	Description *string `json:"description,omitempty"`
	// A bank specific reference, what the end user may see
	MandateBankReference *string `json:"mandate_bank_reference,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MandateDetailsRequest MandateDetailsRequest

// NewMandateDetailsRequest instantiates a new MandateDetailsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMandateDetailsRequest(currency string) *MandateDetailsRequest {
	this := MandateDetailsRequest{}
	this.Currency = currency
	return &this
}

// NewMandateDetailsRequestWithDefaults instantiates a new MandateDetailsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMandateDetailsRequestWithDefaults() *MandateDetailsRequest {
	this := MandateDetailsRequest{}
	return &this
}

// GetCurrency returns the Currency field value
func (o *MandateDetailsRequest) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *MandateDetailsRequest) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *MandateDetailsRequest) SetCurrency(v string) {
	o.Currency = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MandateDetailsRequest) GetStartDate() string {
	if o == nil || IsNil(o.StartDate.Get()) {
		var ret string
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MandateDetailsRequest) GetStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *MandateDetailsRequest) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableString and assigns it to the StartDate field.
func (o *MandateDetailsRequest) SetStartDate(v string) {
	o.StartDate.Set(&v)
}

// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *MandateDetailsRequest) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *MandateDetailsRequest) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MandateDetailsRequest) GetEndDate() string {
	if o == nil || IsNil(o.EndDate.Get()) {
		var ret string
		return ret
	}
	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MandateDetailsRequest) GetEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// HasEndDate returns a boolean if a field has been set.
func (o *MandateDetailsRequest) HasEndDate() bool {
	if o != nil && o.EndDate.IsSet() {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given NullableString and assigns it to the EndDate field.
func (o *MandateDetailsRequest) SetEndDate(v string) {
	o.EndDate.Set(&v)
}

// SetEndDateNil sets the value for EndDate to be an explicit nil
func (o *MandateDetailsRequest) SetEndDateNil() {
	o.EndDate.Set(nil)
}

// UnsetEndDate ensures that no value is present for EndDate, not even an explicit nil
func (o *MandateDetailsRequest) UnsetEndDate() {
	o.EndDate.Unset()
}

// GetPaymentSchedule returns the PaymentSchedule field value if set, zero value otherwise.
func (o *MandateDetailsRequest) GetPaymentSchedule() PaymentSchedule {
	if o == nil || IsNil(o.PaymentSchedule) {
		var ret PaymentSchedule
		return ret
	}
	return *o.PaymentSchedule
}

// GetPaymentScheduleOk returns a tuple with the PaymentSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateDetailsRequest) GetPaymentScheduleOk() (*PaymentSchedule, bool) {
	if o == nil || IsNil(o.PaymentSchedule) {
		return nil, false
	}
	return o.PaymentSchedule, true
}

// HasPaymentSchedule returns a boolean if a field has been set.
func (o *MandateDetailsRequest) HasPaymentSchedule() bool {
	if o != nil && !IsNil(o.PaymentSchedule) {
		return true
	}

	return false
}

// SetPaymentSchedule gets a reference to the given PaymentSchedule and assigns it to the PaymentSchedule field.
func (o *MandateDetailsRequest) SetPaymentSchedule(v PaymentSchedule) {
	o.PaymentSchedule = &v
}

// GetTransactionLimits returns the TransactionLimits field value if set, zero value otherwise.
func (o *MandateDetailsRequest) GetTransactionLimits() TransactionLimitsRequest {
	if o == nil || IsNil(o.TransactionLimits) {
		var ret TransactionLimitsRequest
		return ret
	}
	return *o.TransactionLimits
}

// GetTransactionLimitsOk returns a tuple with the TransactionLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateDetailsRequest) GetTransactionLimitsOk() (*TransactionLimitsRequest, bool) {
	if o == nil || IsNil(o.TransactionLimits) {
		return nil, false
	}
	return o.TransactionLimits, true
}

// HasTransactionLimits returns a boolean if a field has been set.
func (o *MandateDetailsRequest) HasTransactionLimits() bool {
	if o != nil && !IsNil(o.TransactionLimits) {
		return true
	}

	return false
}

// SetTransactionLimits gets a reference to the given TransactionLimitsRequest and assigns it to the TransactionLimits field.
func (o *MandateDetailsRequest) SetTransactionLimits(v TransactionLimitsRequest) {
	o.TransactionLimits = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MandateDetailsRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateDetailsRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MandateDetailsRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MandateDetailsRequest) SetDescription(v string) {
	o.Description = &v
}

// GetMandateBankReference returns the MandateBankReference field value if set, zero value otherwise.
func (o *MandateDetailsRequest) GetMandateBankReference() string {
	if o == nil || IsNil(o.MandateBankReference) {
		var ret string
		return ret
	}
	return *o.MandateBankReference
}

// GetMandateBankReferenceOk returns a tuple with the MandateBankReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MandateDetailsRequest) GetMandateBankReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.MandateBankReference) {
		return nil, false
	}
	return o.MandateBankReference, true
}

// HasMandateBankReference returns a boolean if a field has been set.
func (o *MandateDetailsRequest) HasMandateBankReference() bool {
	if o != nil && !IsNil(o.MandateBankReference) {
		return true
	}

	return false
}

// SetMandateBankReference gets a reference to the given string and assigns it to the MandateBankReference field.
func (o *MandateDetailsRequest) SetMandateBankReference(v string) {
	o.MandateBankReference = &v
}

func (o MandateDetailsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MandateDetailsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["currency"] = o.Currency
	if o.StartDate.IsSet() {
		toSerialize["start_date"] = o.StartDate.Get()
	}
	if o.EndDate.IsSet() {
		toSerialize["end_date"] = o.EndDate.Get()
	}
	if !IsNil(o.PaymentSchedule) {
		toSerialize["payment_schedule"] = o.PaymentSchedule
	}
	if !IsNil(o.TransactionLimits) {
		toSerialize["transaction_limits"] = o.TransactionLimits
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.MandateBankReference) {
		toSerialize["mandate_bank_reference"] = o.MandateBankReference
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MandateDetailsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"currency",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMandateDetailsRequest := _MandateDetailsRequest{}

	err = json.Unmarshal(data, &varMandateDetailsRequest)

	if err != nil {
		return err
	}

	*o = MandateDetailsRequest(varMandateDetailsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "currency")
		delete(additionalProperties, "start_date")
		delete(additionalProperties, "end_date")
		delete(additionalProperties, "payment_schedule")
		delete(additionalProperties, "transaction_limits")
		delete(additionalProperties, "description")
		delete(additionalProperties, "mandate_bank_reference")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMandateDetailsRequest struct {
	value *MandateDetailsRequest
	isSet bool
}

func (v NullableMandateDetailsRequest) Get() *MandateDetailsRequest {
	return v.value
}

func (v *NullableMandateDetailsRequest) Set(val *MandateDetailsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMandateDetailsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMandateDetailsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMandateDetailsRequest(val *MandateDetailsRequest) *NullableMandateDetailsRequest {
	return &NullableMandateDetailsRequest{value: val, isSet: true}
}

func (v NullableMandateDetailsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMandateDetailsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
