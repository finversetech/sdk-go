/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// AllProductStatus struct for AllProductStatus
type AllProductStatus struct {
	Accounts               *ProductStatus `json:"accounts,omitempty"`
	OnlineTransactions     *ProductStatus `json:"online_transactions,omitempty"`
	Statements             *ProductStatus `json:"statements,omitempty"`
	HistoricalTransactions *ProductStatus `json:"historical_transactions,omitempty"`
	AccountNumbers         *ProductStatus `json:"account_numbers,omitempty"`
	Identity               *ProductStatus `json:"identity,omitempty"`
	BalanceHistory         *ProductStatus `json:"balance_history,omitempty"`
}

// NewAllProductStatus instantiates a new AllProductStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllProductStatus() *AllProductStatus {
	this := AllProductStatus{}
	return &this
}

// NewAllProductStatusWithDefaults instantiates a new AllProductStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllProductStatusWithDefaults() *AllProductStatus {
	this := AllProductStatus{}
	return &this
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *AllProductStatus) GetAccounts() ProductStatus {
	if o == nil || o.Accounts == nil {
		var ret ProductStatus
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllProductStatus) GetAccountsOk() (*ProductStatus, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *AllProductStatus) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given ProductStatus and assigns it to the Accounts field.
func (o *AllProductStatus) SetAccounts(v ProductStatus) {
	o.Accounts = &v
}

// GetOnlineTransactions returns the OnlineTransactions field value if set, zero value otherwise.
func (o *AllProductStatus) GetOnlineTransactions() ProductStatus {
	if o == nil || o.OnlineTransactions == nil {
		var ret ProductStatus
		return ret
	}
	return *o.OnlineTransactions
}

// GetOnlineTransactionsOk returns a tuple with the OnlineTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllProductStatus) GetOnlineTransactionsOk() (*ProductStatus, bool) {
	if o == nil || o.OnlineTransactions == nil {
		return nil, false
	}
	return o.OnlineTransactions, true
}

// HasOnlineTransactions returns a boolean if a field has been set.
func (o *AllProductStatus) HasOnlineTransactions() bool {
	if o != nil && o.OnlineTransactions != nil {
		return true
	}

	return false
}

// SetOnlineTransactions gets a reference to the given ProductStatus and assigns it to the OnlineTransactions field.
func (o *AllProductStatus) SetOnlineTransactions(v ProductStatus) {
	o.OnlineTransactions = &v
}

// GetStatements returns the Statements field value if set, zero value otherwise.
func (o *AllProductStatus) GetStatements() ProductStatus {
	if o == nil || o.Statements == nil {
		var ret ProductStatus
		return ret
	}
	return *o.Statements
}

// GetStatementsOk returns a tuple with the Statements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllProductStatus) GetStatementsOk() (*ProductStatus, bool) {
	if o == nil || o.Statements == nil {
		return nil, false
	}
	return o.Statements, true
}

// HasStatements returns a boolean if a field has been set.
func (o *AllProductStatus) HasStatements() bool {
	if o != nil && o.Statements != nil {
		return true
	}

	return false
}

// SetStatements gets a reference to the given ProductStatus and assigns it to the Statements field.
func (o *AllProductStatus) SetStatements(v ProductStatus) {
	o.Statements = &v
}

// GetHistoricalTransactions returns the HistoricalTransactions field value if set, zero value otherwise.
func (o *AllProductStatus) GetHistoricalTransactions() ProductStatus {
	if o == nil || o.HistoricalTransactions == nil {
		var ret ProductStatus
		return ret
	}
	return *o.HistoricalTransactions
}

// GetHistoricalTransactionsOk returns a tuple with the HistoricalTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllProductStatus) GetHistoricalTransactionsOk() (*ProductStatus, bool) {
	if o == nil || o.HistoricalTransactions == nil {
		return nil, false
	}
	return o.HistoricalTransactions, true
}

// HasHistoricalTransactions returns a boolean if a field has been set.
func (o *AllProductStatus) HasHistoricalTransactions() bool {
	if o != nil && o.HistoricalTransactions != nil {
		return true
	}

	return false
}

// SetHistoricalTransactions gets a reference to the given ProductStatus and assigns it to the HistoricalTransactions field.
func (o *AllProductStatus) SetHistoricalTransactions(v ProductStatus) {
	o.HistoricalTransactions = &v
}

// GetAccountNumbers returns the AccountNumbers field value if set, zero value otherwise.
func (o *AllProductStatus) GetAccountNumbers() ProductStatus {
	if o == nil || o.AccountNumbers == nil {
		var ret ProductStatus
		return ret
	}
	return *o.AccountNumbers
}

// GetAccountNumbersOk returns a tuple with the AccountNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllProductStatus) GetAccountNumbersOk() (*ProductStatus, bool) {
	if o == nil || o.AccountNumbers == nil {
		return nil, false
	}
	return o.AccountNumbers, true
}

// HasAccountNumbers returns a boolean if a field has been set.
func (o *AllProductStatus) HasAccountNumbers() bool {
	if o != nil && o.AccountNumbers != nil {
		return true
	}

	return false
}

// SetAccountNumbers gets a reference to the given ProductStatus and assigns it to the AccountNumbers field.
func (o *AllProductStatus) SetAccountNumbers(v ProductStatus) {
	o.AccountNumbers = &v
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *AllProductStatus) GetIdentity() ProductStatus {
	if o == nil || o.Identity == nil {
		var ret ProductStatus
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllProductStatus) GetIdentityOk() (*ProductStatus, bool) {
	if o == nil || o.Identity == nil {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *AllProductStatus) HasIdentity() bool {
	if o != nil && o.Identity != nil {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given ProductStatus and assigns it to the Identity field.
func (o *AllProductStatus) SetIdentity(v ProductStatus) {
	o.Identity = &v
}

// GetBalanceHistory returns the BalanceHistory field value if set, zero value otherwise.
func (o *AllProductStatus) GetBalanceHistory() ProductStatus {
	if o == nil || o.BalanceHistory == nil {
		var ret ProductStatus
		return ret
	}
	return *o.BalanceHistory
}

// GetBalanceHistoryOk returns a tuple with the BalanceHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllProductStatus) GetBalanceHistoryOk() (*ProductStatus, bool) {
	if o == nil || o.BalanceHistory == nil {
		return nil, false
	}
	return o.BalanceHistory, true
}

// HasBalanceHistory returns a boolean if a field has been set.
func (o *AllProductStatus) HasBalanceHistory() bool {
	if o != nil && o.BalanceHistory != nil {
		return true
	}

	return false
}

// SetBalanceHistory gets a reference to the given ProductStatus and assigns it to the BalanceHistory field.
func (o *AllProductStatus) SetBalanceHistory(v ProductStatus) {
	o.BalanceHistory = &v
}

func (o AllProductStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	if o.OnlineTransactions != nil {
		toSerialize["online_transactions"] = o.OnlineTransactions
	}
	if o.Statements != nil {
		toSerialize["statements"] = o.Statements
	}
	if o.HistoricalTransactions != nil {
		toSerialize["historical_transactions"] = o.HistoricalTransactions
	}
	if o.AccountNumbers != nil {
		toSerialize["account_numbers"] = o.AccountNumbers
	}
	if o.Identity != nil {
		toSerialize["identity"] = o.Identity
	}
	if o.BalanceHistory != nil {
		toSerialize["balance_history"] = o.BalanceHistory
	}
	return json.Marshal(toSerialize)
}

type NullableAllProductStatus struct {
	value *AllProductStatus
	isSet bool
}

func (v NullableAllProductStatus) Get() *AllProductStatus {
	return v.value
}

func (v *NullableAllProductStatus) Set(val *AllProductStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAllProductStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAllProductStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllProductStatus(val *AllProductStatus) *NullableAllProductStatus {
	return &NullableAllProductStatus{value: val, isSet: true}
}

func (v NullableAllProductStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllProductStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
