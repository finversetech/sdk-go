/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// PostMandatesResponse struct for PostMandatesResponse
type PostMandatesResponse struct {
	// Finverse Mandate ID
	MandateId *string `json:"mandate_id,omitempty"`
}

// NewPostMandatesResponse instantiates a new PostMandatesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostMandatesResponse() *PostMandatesResponse {
	this := PostMandatesResponse{}
	return &this
}

// NewPostMandatesResponseWithDefaults instantiates a new PostMandatesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostMandatesResponseWithDefaults() *PostMandatesResponse {
	this := PostMandatesResponse{}
	return &this
}

// GetMandateId returns the MandateId field value if set, zero value otherwise.
func (o *PostMandatesResponse) GetMandateId() string {
	if o == nil || o.MandateId == nil {
		var ret string
		return ret
	}
	return *o.MandateId
}

// GetMandateIdOk returns a tuple with the MandateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostMandatesResponse) GetMandateIdOk() (*string, bool) {
	if o == nil || o.MandateId == nil {
		return nil, false
	}
	return o.MandateId, true
}

// HasMandateId returns a boolean if a field has been set.
func (o *PostMandatesResponse) HasMandateId() bool {
	if o != nil && o.MandateId != nil {
		return true
	}

	return false
}

// SetMandateId gets a reference to the given string and assigns it to the MandateId field.
func (o *PostMandatesResponse) SetMandateId(v string) {
	o.MandateId = &v
}

func (o PostMandatesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MandateId != nil {
		toSerialize["mandate_id"] = o.MandateId
	}
	return json.Marshal(toSerialize)
}

type NullablePostMandatesResponse struct {
	value *PostMandatesResponse
	isSet bool
}

func (v NullablePostMandatesResponse) Get() *PostMandatesResponse {
	return v.value
}

func (v *NullablePostMandatesResponse) Set(val *PostMandatesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePostMandatesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePostMandatesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostMandatesResponse(val *PostMandatesResponse) *NullablePostMandatesResponse {
	return &NullablePostMandatesResponse{value: val, isSet: true}
}

func (v NullablePostMandatesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostMandatesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
