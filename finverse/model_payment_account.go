/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the PaymentAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentAccount{}

// PaymentAccount struct for PaymentAccount
type PaymentAccount struct {
	// The raw value for the account the user selected when making payment request
	Raw *string `json:"raw,omitempty"`
	// Finverse Institution ID. Only returned if institution_id was included in the request.
	InstitutionId        *string `json:"institution_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentAccount PaymentAccount

// NewPaymentAccount instantiates a new PaymentAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentAccount() *PaymentAccount {
	this := PaymentAccount{}
	return &this
}

// NewPaymentAccountWithDefaults instantiates a new PaymentAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentAccountWithDefaults() *PaymentAccount {
	this := PaymentAccount{}
	return &this
}

// GetRaw returns the Raw field value if set, zero value otherwise.
func (o *PaymentAccount) GetRaw() string {
	if o == nil || IsNil(o.Raw) {
		var ret string
		return ret
	}
	return *o.Raw
}

// GetRawOk returns a tuple with the Raw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccount) GetRawOk() (*string, bool) {
	if o == nil || IsNil(o.Raw) {
		return nil, false
	}
	return o.Raw, true
}

// HasRaw returns a boolean if a field has been set.
func (o *PaymentAccount) HasRaw() bool {
	if o != nil && !IsNil(o.Raw) {
		return true
	}

	return false
}

// SetRaw gets a reference to the given string and assigns it to the Raw field.
func (o *PaymentAccount) SetRaw(v string) {
	o.Raw = &v
}

// GetInstitutionId returns the InstitutionId field value if set, zero value otherwise.
func (o *PaymentAccount) GetInstitutionId() string {
	if o == nil || IsNil(o.InstitutionId) {
		var ret string
		return ret
	}
	return *o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentAccount) GetInstitutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstitutionId) {
		return nil, false
	}
	return o.InstitutionId, true
}

// HasInstitutionId returns a boolean if a field has been set.
func (o *PaymentAccount) HasInstitutionId() bool {
	if o != nil && !IsNil(o.InstitutionId) {
		return true
	}

	return false
}

// SetInstitutionId gets a reference to the given string and assigns it to the InstitutionId field.
func (o *PaymentAccount) SetInstitutionId(v string) {
	o.InstitutionId = &v
}

func (o PaymentAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Raw) {
		toSerialize["raw"] = o.Raw
	}
	if !IsNil(o.InstitutionId) {
		toSerialize["institution_id"] = o.InstitutionId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentAccount) UnmarshalJSON(data []byte) (err error) {
	varPaymentAccount := _PaymentAccount{}

	err = json.Unmarshal(data, &varPaymentAccount)

	if err != nil {
		return err
	}

	*o = PaymentAccount(varPaymentAccount)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "raw")
		delete(additionalProperties, "institution_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentAccount struct {
	value *PaymentAccount
	isSet bool
}

func (v NullablePaymentAccount) Get() *PaymentAccount {
	return v.value
}

func (v *NullablePaymentAccount) Set(val *PaymentAccount) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentAccount) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentAccount(val *PaymentAccount) *NullablePaymentAccount {
	return &NullablePaymentAccount{value: val, isSet: true}
}

func (v NullablePaymentAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
