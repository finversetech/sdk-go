/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"time"
)

// RecipientResponse struct for RecipientResponse
type RecipientResponse struct {
	// A unique identifier generated after creating recipient
	RecipientAccountId *string `json:"recipient_account_id,omitempty"`
	// Recipient's name/nickname (note: this does not need to match the actual accountholder name of the recipient's account)
	Name             string           `json:"name"`
	RecipientAccount RecipientAccount `json:"recipient_account"`
	// Customer App's internal ID for the recipient
	UserId *string `json:"user_id,omitempty"`
	// Additional attributes of the recipient in key:value format (e.g. employer_name: Apple Inc for a payroll case where recipient is an employee)
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
	LastUpdate *time.Time `json:"last_update,omitempty"`
}

// NewRecipientResponse instantiates a new RecipientResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipientResponse(name string, recipientAccount RecipientAccount) *RecipientResponse {
	this := RecipientResponse{}
	this.Name = name
	this.RecipientAccount = recipientAccount
	return &this
}

// NewRecipientResponseWithDefaults instantiates a new RecipientResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientResponseWithDefaults() *RecipientResponse {
	this := RecipientResponse{}
	return &this
}

// GetRecipientAccountId returns the RecipientAccountId field value if set, zero value otherwise.
func (o *RecipientResponse) GetRecipientAccountId() string {
	if o == nil || o.RecipientAccountId == nil {
		var ret string
		return ret
	}
	return *o.RecipientAccountId
}

// GetRecipientAccountIdOk returns a tuple with the RecipientAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientResponse) GetRecipientAccountIdOk() (*string, bool) {
	if o == nil || o.RecipientAccountId == nil {
		return nil, false
	}
	return o.RecipientAccountId, true
}

// HasRecipientAccountId returns a boolean if a field has been set.
func (o *RecipientResponse) HasRecipientAccountId() bool {
	if o != nil && o.RecipientAccountId != nil {
		return true
	}

	return false
}

// SetRecipientAccountId gets a reference to the given string and assigns it to the RecipientAccountId field.
func (o *RecipientResponse) SetRecipientAccountId(v string) {
	o.RecipientAccountId = &v
}

// GetName returns the Name field value
func (o *RecipientResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RecipientResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RecipientResponse) SetName(v string) {
	o.Name = v
}

// GetRecipientAccount returns the RecipientAccount field value
func (o *RecipientResponse) GetRecipientAccount() RecipientAccount {
	if o == nil {
		var ret RecipientAccount
		return ret
	}

	return o.RecipientAccount
}

// GetRecipientAccountOk returns a tuple with the RecipientAccount field value
// and a boolean to check if the value has been set.
func (o *RecipientResponse) GetRecipientAccountOk() (*RecipientAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecipientAccount, true
}

// SetRecipientAccount sets field value
func (o *RecipientResponse) SetRecipientAccount(v RecipientAccount) {
	o.RecipientAccount = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *RecipientResponse) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientResponse) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *RecipientResponse) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *RecipientResponse) SetUserId(v string) {
	o.UserId = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *RecipientResponse) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientResponse) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *RecipientResponse) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *RecipientResponse) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *RecipientResponse) GetLastUpdate() time.Time {
	if o == nil || o.LastUpdate == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecipientResponse) GetLastUpdateOk() (*time.Time, bool) {
	if o == nil || o.LastUpdate == nil {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *RecipientResponse) HasLastUpdate() bool {
	if o != nil && o.LastUpdate != nil {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given time.Time and assigns it to the LastUpdate field.
func (o *RecipientResponse) SetLastUpdate(v time.Time) {
	o.LastUpdate = &v
}

func (o RecipientResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RecipientAccountId != nil {
		toSerialize["recipient_account_id"] = o.RecipientAccountId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["recipient_account"] = o.RecipientAccount
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.LastUpdate != nil {
		toSerialize["last_update"] = o.LastUpdate
	}
	return json.Marshal(toSerialize)
}

type NullableRecipientResponse struct {
	value *RecipientResponse
	isSet bool
}

func (v NullableRecipientResponse) Get() *RecipientResponse {
	return v.value
}

func (v *NullableRecipientResponse) Set(val *RecipientResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipientResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipientResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipientResponse(val *RecipientResponse) *NullableRecipientResponse {
	return &NullableRecipientResponse{value: val, isSet: true}
}

func (v NullableRecipientResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipientResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
