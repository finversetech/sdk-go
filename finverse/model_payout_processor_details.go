/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the PayoutProcessorDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayoutProcessorDetails{}

// PayoutProcessorDetails struct for PayoutProcessorDetails
type PayoutProcessorDetails struct {
	ProcessorId          *string `json:"processor_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PayoutProcessorDetails PayoutProcessorDetails

// NewPayoutProcessorDetails instantiates a new PayoutProcessorDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayoutProcessorDetails() *PayoutProcessorDetails {
	this := PayoutProcessorDetails{}
	return &this
}

// NewPayoutProcessorDetailsWithDefaults instantiates a new PayoutProcessorDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayoutProcessorDetailsWithDefaults() *PayoutProcessorDetails {
	this := PayoutProcessorDetails{}
	return &this
}

// GetProcessorId returns the ProcessorId field value if set, zero value otherwise.
func (o *PayoutProcessorDetails) GetProcessorId() string {
	if o == nil || IsNil(o.ProcessorId) {
		var ret string
		return ret
	}
	return *o.ProcessorId
}

// GetProcessorIdOk returns a tuple with the ProcessorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutProcessorDetails) GetProcessorIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessorId) {
		return nil, false
	}
	return o.ProcessorId, true
}

// HasProcessorId returns a boolean if a field has been set.
func (o *PayoutProcessorDetails) HasProcessorId() bool {
	if o != nil && !IsNil(o.ProcessorId) {
		return true
	}

	return false
}

// SetProcessorId gets a reference to the given string and assigns it to the ProcessorId field.
func (o *PayoutProcessorDetails) SetProcessorId(v string) {
	o.ProcessorId = &v
}

func (o PayoutProcessorDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayoutProcessorDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProcessorId) {
		toSerialize["processor_id"] = o.ProcessorId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PayoutProcessorDetails) UnmarshalJSON(data []byte) (err error) {
	varPayoutProcessorDetails := _PayoutProcessorDetails{}

	err = json.Unmarshal(data, &varPayoutProcessorDetails)

	if err != nil {
		return err
	}

	*o = PayoutProcessorDetails(varPayoutProcessorDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "processor_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePayoutProcessorDetails struct {
	value *PayoutProcessorDetails
	isSet bool
}

func (v NullablePayoutProcessorDetails) Get() *PayoutProcessorDetails {
	return v.value
}

func (v *NullablePayoutProcessorDetails) Set(val *PayoutProcessorDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePayoutProcessorDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePayoutProcessorDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayoutProcessorDetails(val *PayoutProcessorDetails) *NullablePayoutProcessorDetails {
	return &NullablePayoutProcessorDetails{value: val, isSet: true}
}

func (v NullablePayoutProcessorDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayoutProcessorDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
