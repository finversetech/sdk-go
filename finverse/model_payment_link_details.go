/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PaymentLinkDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentLinkDetails{}

// PaymentLinkDetails struct for PaymentLinkDetails
type PaymentLinkDetails struct {
	Description string `json:"description"`
	// For external invoice/transaction reference
	ExternalTransactionReference string `json:"external_transaction_reference"`
}

type _PaymentLinkDetails PaymentLinkDetails

// NewPaymentLinkDetails instantiates a new PaymentLinkDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentLinkDetails(description string, externalTransactionReference string) *PaymentLinkDetails {
	this := PaymentLinkDetails{}
	this.Description = description
	this.ExternalTransactionReference = externalTransactionReference
	return &this
}

// NewPaymentLinkDetailsWithDefaults instantiates a new PaymentLinkDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentLinkDetailsWithDefaults() *PaymentLinkDetails {
	this := PaymentLinkDetails{}
	return &this
}

// GetDescription returns the Description field value
func (o *PaymentLinkDetails) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PaymentLinkDetails) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PaymentLinkDetails) SetDescription(v string) {
	o.Description = v
}

// GetExternalTransactionReference returns the ExternalTransactionReference field value
func (o *PaymentLinkDetails) GetExternalTransactionReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalTransactionReference
}

// GetExternalTransactionReferenceOk returns a tuple with the ExternalTransactionReference field value
// and a boolean to check if the value has been set.
func (o *PaymentLinkDetails) GetExternalTransactionReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalTransactionReference, true
}

// SetExternalTransactionReference sets field value
func (o *PaymentLinkDetails) SetExternalTransactionReference(v string) {
	o.ExternalTransactionReference = v
}

func (o PaymentLinkDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentLinkDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["external_transaction_reference"] = o.ExternalTransactionReference
	return toSerialize, nil
}

func (o *PaymentLinkDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"external_transaction_reference",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentLinkDetails := _PaymentLinkDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentLinkDetails)

	if err != nil {
		return err
	}

	*o = PaymentLinkDetails(varPaymentLinkDetails)

	return err
}

type NullablePaymentLinkDetails struct {
	value *PaymentLinkDetails
	isSet bool
}

func (v NullablePaymentLinkDetails) Get() *PaymentLinkDetails {
	return v.value
}

func (v *NullablePaymentLinkDetails) Set(val *PaymentLinkDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentLinkDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentLinkDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentLinkDetails(val *PaymentLinkDetails) *NullablePaymentLinkDetails {
	return &NullablePaymentLinkDetails{value: val, isSet: true}
}

func (v NullablePaymentLinkDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentLinkDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
