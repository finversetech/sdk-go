/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"time"
)

// SubmitAuthChecklistResponse struct for SubmitAuthChecklistResponse
type SubmitAuthChecklistResponse struct {
	// Finverse Mandate ID
	MandateId string `json:"mandate_id"`
	// Checklist of the authorization factors needed to complete Mandate authorization
	AuthChecklist []AuthChecklistFactor `json:"auth_checklist"`
	// Mandate status
	MandateStatus string `json:"mandate_status"`
	// Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
	LastUpdate time.Time `json:"last_update"`
}

// NewSubmitAuthChecklistResponse instantiates a new SubmitAuthChecklistResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitAuthChecklistResponse(mandateId string, authChecklist []AuthChecklistFactor, mandateStatus string, lastUpdate time.Time) *SubmitAuthChecklistResponse {
	this := SubmitAuthChecklistResponse{}
	this.MandateId = mandateId
	this.AuthChecklist = authChecklist
	this.MandateStatus = mandateStatus
	this.LastUpdate = lastUpdate
	return &this
}

// NewSubmitAuthChecklistResponseWithDefaults instantiates a new SubmitAuthChecklistResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitAuthChecklistResponseWithDefaults() *SubmitAuthChecklistResponse {
	this := SubmitAuthChecklistResponse{}
	return &this
}

// GetMandateId returns the MandateId field value
func (o *SubmitAuthChecklistResponse) GetMandateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MandateId
}

// GetMandateIdOk returns a tuple with the MandateId field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistResponse) GetMandateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MandateId, true
}

// SetMandateId sets field value
func (o *SubmitAuthChecklistResponse) SetMandateId(v string) {
	o.MandateId = v
}

// GetAuthChecklist returns the AuthChecklist field value
func (o *SubmitAuthChecklistResponse) GetAuthChecklist() []AuthChecklistFactor {
	if o == nil {
		var ret []AuthChecklistFactor
		return ret
	}

	return o.AuthChecklist
}

// GetAuthChecklistOk returns a tuple with the AuthChecklist field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistResponse) GetAuthChecklistOk() ([]AuthChecklistFactor, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthChecklist, true
}

// SetAuthChecklist sets field value
func (o *SubmitAuthChecklistResponse) SetAuthChecklist(v []AuthChecklistFactor) {
	o.AuthChecklist = v
}

// GetMandateStatus returns the MandateStatus field value
func (o *SubmitAuthChecklistResponse) GetMandateStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MandateStatus
}

// GetMandateStatusOk returns a tuple with the MandateStatus field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistResponse) GetMandateStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MandateStatus, true
}

// SetMandateStatus sets field value
func (o *SubmitAuthChecklistResponse) SetMandateStatus(v string) {
	o.MandateStatus = v
}

// GetLastUpdate returns the LastUpdate field value
func (o *SubmitAuthChecklistResponse) GetLastUpdate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistResponse) GetLastUpdateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdate, true
}

// SetLastUpdate sets field value
func (o *SubmitAuthChecklistResponse) SetLastUpdate(v time.Time) {
	o.LastUpdate = v
}

func (o SubmitAuthChecklistResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mandate_id"] = o.MandateId
	}
	if true {
		toSerialize["auth_checklist"] = o.AuthChecklist
	}
	if true {
		toSerialize["mandate_status"] = o.MandateStatus
	}
	if true {
		toSerialize["last_update"] = o.LastUpdate
	}
	return json.Marshal(toSerialize)
}

type NullableSubmitAuthChecklistResponse struct {
	value *SubmitAuthChecklistResponse
	isSet bool
}

func (v NullableSubmitAuthChecklistResponse) Get() *SubmitAuthChecklistResponse {
	return v.value
}

func (v *NullableSubmitAuthChecklistResponse) Set(val *SubmitAuthChecklistResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitAuthChecklistResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitAuthChecklistResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitAuthChecklistResponse(val *SubmitAuthChecklistResponse) *NullableSubmitAuthChecklistResponse {
	return &NullableSubmitAuthChecklistResponse{value: val, isSet: true}
}

func (v NullableSubmitAuthChecklistResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitAuthChecklistResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
