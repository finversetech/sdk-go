/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the ListPaymentMethodsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPaymentMethodsResponse{}

// ListPaymentMethodsResponse struct for ListPaymentMethodsResponse
type ListPaymentMethodsResponse struct {
	PaymentMethods       []PaymentMethodResponse  `json:"payment_methods,omitempty"`
	Sender               *PaymentUserWithoutEmail `json:"sender,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListPaymentMethodsResponse ListPaymentMethodsResponse

// NewListPaymentMethodsResponse instantiates a new ListPaymentMethodsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPaymentMethodsResponse() *ListPaymentMethodsResponse {
	this := ListPaymentMethodsResponse{}
	return &this
}

// NewListPaymentMethodsResponseWithDefaults instantiates a new ListPaymentMethodsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPaymentMethodsResponseWithDefaults() *ListPaymentMethodsResponse {
	this := ListPaymentMethodsResponse{}
	return &this
}

// GetPaymentMethods returns the PaymentMethods field value if set, zero value otherwise.
func (o *ListPaymentMethodsResponse) GetPaymentMethods() []PaymentMethodResponse {
	if o == nil || IsNil(o.PaymentMethods) {
		var ret []PaymentMethodResponse
		return ret
	}
	return o.PaymentMethods
}

// GetPaymentMethodsOk returns a tuple with the PaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPaymentMethodsResponse) GetPaymentMethodsOk() ([]PaymentMethodResponse, bool) {
	if o == nil || IsNil(o.PaymentMethods) {
		return nil, false
	}
	return o.PaymentMethods, true
}

// HasPaymentMethods returns a boolean if a field has been set.
func (o *ListPaymentMethodsResponse) HasPaymentMethods() bool {
	if o != nil && !IsNil(o.PaymentMethods) {
		return true
	}

	return false
}

// SetPaymentMethods gets a reference to the given []PaymentMethodResponse and assigns it to the PaymentMethods field.
func (o *ListPaymentMethodsResponse) SetPaymentMethods(v []PaymentMethodResponse) {
	o.PaymentMethods = v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *ListPaymentMethodsResponse) GetSender() PaymentUserWithoutEmail {
	if o == nil || IsNil(o.Sender) {
		var ret PaymentUserWithoutEmail
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPaymentMethodsResponse) GetSenderOk() (*PaymentUserWithoutEmail, bool) {
	if o == nil || IsNil(o.Sender) {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *ListPaymentMethodsResponse) HasSender() bool {
	if o != nil && !IsNil(o.Sender) {
		return true
	}

	return false
}

// SetSender gets a reference to the given PaymentUserWithoutEmail and assigns it to the Sender field.
func (o *ListPaymentMethodsResponse) SetSender(v PaymentUserWithoutEmail) {
	o.Sender = &v
}

func (o ListPaymentMethodsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPaymentMethodsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentMethods) {
		toSerialize["payment_methods"] = o.PaymentMethods
	}
	if !IsNil(o.Sender) {
		toSerialize["sender"] = o.Sender
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListPaymentMethodsResponse) UnmarshalJSON(data []byte) (err error) {
	varListPaymentMethodsResponse := _ListPaymentMethodsResponse{}

	err = json.Unmarshal(data, &varListPaymentMethodsResponse)

	if err != nil {
		return err
	}

	*o = ListPaymentMethodsResponse(varListPaymentMethodsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "payment_methods")
		delete(additionalProperties, "sender")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListPaymentMethodsResponse struct {
	value *ListPaymentMethodsResponse
	isSet bool
}

func (v NullableListPaymentMethodsResponse) Get() *ListPaymentMethodsResponse {
	return v.value
}

func (v *NullableListPaymentMethodsResponse) Set(val *ListPaymentMethodsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListPaymentMethodsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListPaymentMethodsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPaymentMethodsResponse(val *ListPaymentMethodsResponse) *NullableListPaymentMethodsResponse {
	return &NullableListPaymentMethodsResponse{value: val, isSet: true}
}

func (v NullableListPaymentMethodsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPaymentMethodsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
