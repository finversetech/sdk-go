/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// CreatePaymentResponse struct for CreatePaymentResponse
type CreatePaymentResponse struct {
	// Finverse Payment ID
	PaymentId *string `json:"payment_id,omitempty"`
}

// NewCreatePaymentResponse instantiates a new CreatePaymentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePaymentResponse() *CreatePaymentResponse {
	this := CreatePaymentResponse{}
	return &this
}

// NewCreatePaymentResponseWithDefaults instantiates a new CreatePaymentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePaymentResponseWithDefaults() *CreatePaymentResponse {
	this := CreatePaymentResponse{}
	return &this
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *CreatePaymentResponse) GetPaymentId() string {
	if o == nil || o.PaymentId == nil {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentResponse) GetPaymentIdOk() (*string, bool) {
	if o == nil || o.PaymentId == nil {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *CreatePaymentResponse) HasPaymentId() bool {
	if o != nil && o.PaymentId != nil {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *CreatePaymentResponse) SetPaymentId(v string) {
	o.PaymentId = &v
}

func (o CreatePaymentResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PaymentId != nil {
		toSerialize["payment_id"] = o.PaymentId
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePaymentResponse struct {
	value *CreatePaymentResponse
	isSet bool
}

func (v NullableCreatePaymentResponse) Get() *CreatePaymentResponse {
	return v.value
}

func (v *NullableCreatePaymentResponse) Set(val *CreatePaymentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePaymentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePaymentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePaymentResponse(val *CreatePaymentResponse) *NullableCreatePaymentResponse {
	return &NullableCreatePaymentResponse{value: val, isSet: true}
}

func (v NullableCreatePaymentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePaymentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
