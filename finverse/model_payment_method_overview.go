/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the PaymentMethodOverview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethodOverview{}

// PaymentMethodOverview struct for PaymentMethodOverview
type PaymentMethodOverview struct {
	// STRIPE, CYBERSOURCE, UOB, DBS (only shown when payment flows funds via a 3rd party gateway direct to the customer)
	ExternalGateway *string `json:"external_gateway,omitempty"`
	// It can be either REALTIME or DELAYED
	PaymentConfirmationSpeed *string `json:"payment_confirmation_speed,omitempty"`
	// The payment method type, possible values CARD, MANDATE and MANUAL
	PaymentMethodType *string `json:"payment_method_type,omitempty"`
	// The payment method subtype
	PaymentMethodSubtype *string `json:"payment_method_subtype,omitempty"`
	// Only shown if funds flow via Finverse, possible values FINVERSE
	PaymentProcessor *string `json:"payment_processor,omitempty"`
	// Whether the payment method can move real money or not
	LiveMode *bool `json:"live_mode,omitempty"`
	// Shows which currencies are supported
	SupportedCurrencies  []string `json:"supported_currencies,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentMethodOverview PaymentMethodOverview

// NewPaymentMethodOverview instantiates a new PaymentMethodOverview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodOverview() *PaymentMethodOverview {
	this := PaymentMethodOverview{}
	return &this
}

// NewPaymentMethodOverviewWithDefaults instantiates a new PaymentMethodOverview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodOverviewWithDefaults() *PaymentMethodOverview {
	this := PaymentMethodOverview{}
	return &this
}

// GetExternalGateway returns the ExternalGateway field value if set, zero value otherwise.
func (o *PaymentMethodOverview) GetExternalGateway() string {
	if o == nil || IsNil(o.ExternalGateway) {
		var ret string
		return ret
	}
	return *o.ExternalGateway
}

// GetExternalGatewayOk returns a tuple with the ExternalGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodOverview) GetExternalGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalGateway) {
		return nil, false
	}
	return o.ExternalGateway, true
}

// HasExternalGateway returns a boolean if a field has been set.
func (o *PaymentMethodOverview) HasExternalGateway() bool {
	if o != nil && !IsNil(o.ExternalGateway) {
		return true
	}

	return false
}

// SetExternalGateway gets a reference to the given string and assigns it to the ExternalGateway field.
func (o *PaymentMethodOverview) SetExternalGateway(v string) {
	o.ExternalGateway = &v
}

// GetPaymentConfirmationSpeed returns the PaymentConfirmationSpeed field value if set, zero value otherwise.
func (o *PaymentMethodOverview) GetPaymentConfirmationSpeed() string {
	if o == nil || IsNil(o.PaymentConfirmationSpeed) {
		var ret string
		return ret
	}
	return *o.PaymentConfirmationSpeed
}

// GetPaymentConfirmationSpeedOk returns a tuple with the PaymentConfirmationSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodOverview) GetPaymentConfirmationSpeedOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentConfirmationSpeed) {
		return nil, false
	}
	return o.PaymentConfirmationSpeed, true
}

// HasPaymentConfirmationSpeed returns a boolean if a field has been set.
func (o *PaymentMethodOverview) HasPaymentConfirmationSpeed() bool {
	if o != nil && !IsNil(o.PaymentConfirmationSpeed) {
		return true
	}

	return false
}

// SetPaymentConfirmationSpeed gets a reference to the given string and assigns it to the PaymentConfirmationSpeed field.
func (o *PaymentMethodOverview) SetPaymentConfirmationSpeed(v string) {
	o.PaymentConfirmationSpeed = &v
}

// GetPaymentMethodType returns the PaymentMethodType field value if set, zero value otherwise.
func (o *PaymentMethodOverview) GetPaymentMethodType() string {
	if o == nil || IsNil(o.PaymentMethodType) {
		var ret string
		return ret
	}
	return *o.PaymentMethodType
}

// GetPaymentMethodTypeOk returns a tuple with the PaymentMethodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodOverview) GetPaymentMethodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethodType) {
		return nil, false
	}
	return o.PaymentMethodType, true
}

// HasPaymentMethodType returns a boolean if a field has been set.
func (o *PaymentMethodOverview) HasPaymentMethodType() bool {
	if o != nil && !IsNil(o.PaymentMethodType) {
		return true
	}

	return false
}

// SetPaymentMethodType gets a reference to the given string and assigns it to the PaymentMethodType field.
func (o *PaymentMethodOverview) SetPaymentMethodType(v string) {
	o.PaymentMethodType = &v
}

// GetPaymentMethodSubtype returns the PaymentMethodSubtype field value if set, zero value otherwise.
func (o *PaymentMethodOverview) GetPaymentMethodSubtype() string {
	if o == nil || IsNil(o.PaymentMethodSubtype) {
		var ret string
		return ret
	}
	return *o.PaymentMethodSubtype
}

// GetPaymentMethodSubtypeOk returns a tuple with the PaymentMethodSubtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodOverview) GetPaymentMethodSubtypeOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethodSubtype) {
		return nil, false
	}
	return o.PaymentMethodSubtype, true
}

// HasPaymentMethodSubtype returns a boolean if a field has been set.
func (o *PaymentMethodOverview) HasPaymentMethodSubtype() bool {
	if o != nil && !IsNil(o.PaymentMethodSubtype) {
		return true
	}

	return false
}

// SetPaymentMethodSubtype gets a reference to the given string and assigns it to the PaymentMethodSubtype field.
func (o *PaymentMethodOverview) SetPaymentMethodSubtype(v string) {
	o.PaymentMethodSubtype = &v
}

// GetPaymentProcessor returns the PaymentProcessor field value if set, zero value otherwise.
func (o *PaymentMethodOverview) GetPaymentProcessor() string {
	if o == nil || IsNil(o.PaymentProcessor) {
		var ret string
		return ret
	}
	return *o.PaymentProcessor
}

// GetPaymentProcessorOk returns a tuple with the PaymentProcessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodOverview) GetPaymentProcessorOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentProcessor) {
		return nil, false
	}
	return o.PaymentProcessor, true
}

// HasPaymentProcessor returns a boolean if a field has been set.
func (o *PaymentMethodOverview) HasPaymentProcessor() bool {
	if o != nil && !IsNil(o.PaymentProcessor) {
		return true
	}

	return false
}

// SetPaymentProcessor gets a reference to the given string and assigns it to the PaymentProcessor field.
func (o *PaymentMethodOverview) SetPaymentProcessor(v string) {
	o.PaymentProcessor = &v
}

// GetLiveMode returns the LiveMode field value if set, zero value otherwise.
func (o *PaymentMethodOverview) GetLiveMode() bool {
	if o == nil || IsNil(o.LiveMode) {
		var ret bool
		return ret
	}
	return *o.LiveMode
}

// GetLiveModeOk returns a tuple with the LiveMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodOverview) GetLiveModeOk() (*bool, bool) {
	if o == nil || IsNil(o.LiveMode) {
		return nil, false
	}
	return o.LiveMode, true
}

// HasLiveMode returns a boolean if a field has been set.
func (o *PaymentMethodOverview) HasLiveMode() bool {
	if o != nil && !IsNil(o.LiveMode) {
		return true
	}

	return false
}

// SetLiveMode gets a reference to the given bool and assigns it to the LiveMode field.
func (o *PaymentMethodOverview) SetLiveMode(v bool) {
	o.LiveMode = &v
}

// GetSupportedCurrencies returns the SupportedCurrencies field value if set, zero value otherwise.
func (o *PaymentMethodOverview) GetSupportedCurrencies() []string {
	if o == nil || IsNil(o.SupportedCurrencies) {
		var ret []string
		return ret
	}
	return o.SupportedCurrencies
}

// GetSupportedCurrenciesOk returns a tuple with the SupportedCurrencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodOverview) GetSupportedCurrenciesOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedCurrencies) {
		return nil, false
	}
	return o.SupportedCurrencies, true
}

// HasSupportedCurrencies returns a boolean if a field has been set.
func (o *PaymentMethodOverview) HasSupportedCurrencies() bool {
	if o != nil && !IsNil(o.SupportedCurrencies) {
		return true
	}

	return false
}

// SetSupportedCurrencies gets a reference to the given []string and assigns it to the SupportedCurrencies field.
func (o *PaymentMethodOverview) SetSupportedCurrencies(v []string) {
	o.SupportedCurrencies = v
}

func (o PaymentMethodOverview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethodOverview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalGateway) {
		toSerialize["external_gateway"] = o.ExternalGateway
	}
	if !IsNil(o.PaymentConfirmationSpeed) {
		toSerialize["payment_confirmation_speed"] = o.PaymentConfirmationSpeed
	}
	if !IsNil(o.PaymentMethodType) {
		toSerialize["payment_method_type"] = o.PaymentMethodType
	}
	if !IsNil(o.PaymentMethodSubtype) {
		toSerialize["payment_method_subtype"] = o.PaymentMethodSubtype
	}
	if !IsNil(o.PaymentProcessor) {
		toSerialize["payment_processor"] = o.PaymentProcessor
	}
	if !IsNil(o.LiveMode) {
		toSerialize["live_mode"] = o.LiveMode
	}
	if !IsNil(o.SupportedCurrencies) {
		toSerialize["supported_currencies"] = o.SupportedCurrencies
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentMethodOverview) UnmarshalJSON(data []byte) (err error) {
	varPaymentMethodOverview := _PaymentMethodOverview{}

	err = json.Unmarshal(data, &varPaymentMethodOverview)

	if err != nil {
		return err
	}

	*o = PaymentMethodOverview(varPaymentMethodOverview)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "external_gateway")
		delete(additionalProperties, "payment_confirmation_speed")
		delete(additionalProperties, "payment_method_type")
		delete(additionalProperties, "payment_method_subtype")
		delete(additionalProperties, "payment_processor")
		delete(additionalProperties, "live_mode")
		delete(additionalProperties, "supported_currencies")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentMethodOverview struct {
	value *PaymentMethodOverview
	isSet bool
}

func (v NullablePaymentMethodOverview) Get() *PaymentMethodOverview {
	return v.value
}

func (v *NullablePaymentMethodOverview) Set(val *PaymentMethodOverview) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodOverview) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodOverview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodOverview(val *PaymentMethodOverview) *NullablePaymentMethodOverview {
	return &NullablePaymentMethodOverview{value: val, isSet: true}
}

func (v NullablePaymentMethodOverview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodOverview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
