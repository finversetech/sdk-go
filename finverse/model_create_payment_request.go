/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// CreatePaymentRequest struct for CreatePaymentRequest
type CreatePaymentRequest struct {
	// Amount to be paid, in currency's smallest unit or “minor unit”, as defined in ISO 4217. For example, HKD 100.01 is represented as amount = 10001 (minor unit = cents). For currencies without minor units (e.g. VND, JPY), the amount is represented as is, without modification. For example, VND 15101 is represented as amount = 15101.
	Amount int32 `json:"amount"`
	// The currency code as defined in ISO 4217.
	Currency string `json:"currency"`
	// Indicates whether this is a mandate-based payment or one-off direct payment to an account. Possible values - MANDATE, SINGLE
	Type           string          `json:"type"`
	PaymentDetails PaymentDetails2 `json:"payment_details"`
	// Additional attributes of the payment in key:value format (e.g. payment_internal_id: 1234). It supports up to 10 key:value pairs, whereas the key and value supports up to 50 and 500 characters respectively.
	Metadata *map[string]string `json:"metadata,omitempty"`
}

// NewCreatePaymentRequest instantiates a new CreatePaymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePaymentRequest(amount int32, currency string, type_ string, paymentDetails PaymentDetails2) *CreatePaymentRequest {
	this := CreatePaymentRequest{}
	this.Amount = amount
	this.Currency = currency
	this.Type = type_
	this.PaymentDetails = paymentDetails
	return &this
}

// NewCreatePaymentRequestWithDefaults instantiates a new CreatePaymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePaymentRequestWithDefaults() *CreatePaymentRequest {
	this := CreatePaymentRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *CreatePaymentRequest) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CreatePaymentRequest) SetAmount(v int32) {
	o.Amount = v
}

// GetCurrency returns the Currency field value
func (o *CreatePaymentRequest) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *CreatePaymentRequest) SetCurrency(v string) {
	o.Currency = v
}

// GetType returns the Type field value
func (o *CreatePaymentRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreatePaymentRequest) SetType(v string) {
	o.Type = v
}

// GetPaymentDetails returns the PaymentDetails field value
func (o *CreatePaymentRequest) GetPaymentDetails() PaymentDetails2 {
	if o == nil {
		var ret PaymentDetails2
		return ret
	}

	return o.PaymentDetails
}

// GetPaymentDetailsOk returns a tuple with the PaymentDetails field value
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetPaymentDetailsOk() (*PaymentDetails2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentDetails, true
}

// SetPaymentDetails sets field value
func (o *CreatePaymentRequest) SetPaymentDetails(v PaymentDetails2) {
	o.PaymentDetails = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CreatePaymentRequest) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePaymentRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreatePaymentRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CreatePaymentRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

func (o CreatePaymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["payment_details"] = o.PaymentDetails
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePaymentRequest struct {
	value *CreatePaymentRequest
	isSet bool
}

func (v NullableCreatePaymentRequest) Get() *CreatePaymentRequest {
	return v.value
}

func (v *NullableCreatePaymentRequest) Set(val *CreatePaymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePaymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePaymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePaymentRequest(val *CreatePaymentRequest) *NullableCreatePaymentRequest {
	return &NullableCreatePaymentRequest{value: val, isSet: true}
}

func (v NullableCreatePaymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePaymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
