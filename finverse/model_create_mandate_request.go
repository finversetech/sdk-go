/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// CreateMandateRequest struct for CreateMandateRequest
type CreateMandateRequest struct {
	Recipient      MandateRecipientRequest     `json:"recipient"`
	Sender         CreateMandateSender         `json:"sender"`
	SenderAccount  *CreateMandateSenderAccount `json:"sender_account,omitempty"`
	MandateDetails MandateDetails              `json:"mandate_details"`
	// Additional attributes of the mandate in key:value format (e.g. mandate_internal_id: 1234). It supports up to 10 key:value pairs, whereas the key and value supports up to 50 and 500 characters respectively.
	Metadata *map[string]string `json:"metadata,omitempty"`
}

// NewCreateMandateRequest instantiates a new CreateMandateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMandateRequest(recipient MandateRecipientRequest, sender CreateMandateSender, mandateDetails MandateDetails) *CreateMandateRequest {
	this := CreateMandateRequest{}
	this.Recipient = recipient
	this.Sender = sender
	this.MandateDetails = mandateDetails
	return &this
}

// NewCreateMandateRequestWithDefaults instantiates a new CreateMandateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMandateRequestWithDefaults() *CreateMandateRequest {
	this := CreateMandateRequest{}
	return &this
}

// GetRecipient returns the Recipient field value
func (o *CreateMandateRequest) GetRecipient() MandateRecipientRequest {
	if o == nil {
		var ret MandateRecipientRequest
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *CreateMandateRequest) GetRecipientOk() (*MandateRecipientRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *CreateMandateRequest) SetRecipient(v MandateRecipientRequest) {
	o.Recipient = v
}

// GetSender returns the Sender field value
func (o *CreateMandateRequest) GetSender() CreateMandateSender {
	if o == nil {
		var ret CreateMandateSender
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *CreateMandateRequest) GetSenderOk() (*CreateMandateSender, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *CreateMandateRequest) SetSender(v CreateMandateSender) {
	o.Sender = v
}

// GetSenderAccount returns the SenderAccount field value if set, zero value otherwise.
func (o *CreateMandateRequest) GetSenderAccount() CreateMandateSenderAccount {
	if o == nil || o.SenderAccount == nil {
		var ret CreateMandateSenderAccount
		return ret
	}
	return *o.SenderAccount
}

// GetSenderAccountOk returns a tuple with the SenderAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMandateRequest) GetSenderAccountOk() (*CreateMandateSenderAccount, bool) {
	if o == nil || o.SenderAccount == nil {
		return nil, false
	}
	return o.SenderAccount, true
}

// HasSenderAccount returns a boolean if a field has been set.
func (o *CreateMandateRequest) HasSenderAccount() bool {
	if o != nil && o.SenderAccount != nil {
		return true
	}

	return false
}

// SetSenderAccount gets a reference to the given CreateMandateSenderAccount and assigns it to the SenderAccount field.
func (o *CreateMandateRequest) SetSenderAccount(v CreateMandateSenderAccount) {
	o.SenderAccount = &v
}

// GetMandateDetails returns the MandateDetails field value
func (o *CreateMandateRequest) GetMandateDetails() MandateDetails {
	if o == nil {
		var ret MandateDetails
		return ret
	}

	return o.MandateDetails
}

// GetMandateDetailsOk returns a tuple with the MandateDetails field value
// and a boolean to check if the value has been set.
func (o *CreateMandateRequest) GetMandateDetailsOk() (*MandateDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MandateDetails, true
}

// SetMandateDetails sets field value
func (o *CreateMandateRequest) SetMandateDetails(v MandateDetails) {
	o.MandateDetails = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CreateMandateRequest) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMandateRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreateMandateRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CreateMandateRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

func (o CreateMandateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["recipient"] = o.Recipient
	}
	if true {
		toSerialize["sender"] = o.Sender
	}
	if o.SenderAccount != nil {
		toSerialize["sender_account"] = o.SenderAccount
	}
	if true {
		toSerialize["mandate_details"] = o.MandateDetails
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableCreateMandateRequest struct {
	value *CreateMandateRequest
	isSet bool
}

func (v NullableCreateMandateRequest) Get() *CreateMandateRequest {
	return v.value
}

func (v *NullableCreateMandateRequest) Set(val *CreateMandateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMandateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMandateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMandateRequest(val *CreateMandateRequest) *NullableCreateMandateRequest {
	return &NullableCreateMandateRequest{value: val, isSet: true}
}

func (v NullableCreateMandateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMandateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
