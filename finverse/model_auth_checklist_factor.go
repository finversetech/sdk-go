/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// AuthChecklistFactor struct for AuthChecklistFactor
type AuthChecklistFactor struct {
	// Type of authorization factor
	Type string `json:"type"`
	// Allows grouping similar checklist item types together
	GroupId string `json:"group_id"`
	// Indicates whether authorization factor is known to be required at this time.  Possible values are YES, NO, OPTIONAL
	Required string `json:"required"`
	// Helper text that applies to a specific checklist item
	HelperText *string `json:"helper_text,omitempty"`
	// Array of the options accepted for a specific authorization factor
	Options []AuthChecklistOptions `json:"options"`
}

// NewAuthChecklistFactor instantiates a new AuthChecklistFactor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthChecklistFactor(type_ string, groupId string, required string, options []AuthChecklistOptions) *AuthChecklistFactor {
	this := AuthChecklistFactor{}
	this.Type = type_
	this.GroupId = groupId
	this.Required = required
	this.Options = options
	return &this
}

// NewAuthChecklistFactorWithDefaults instantiates a new AuthChecklistFactor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthChecklistFactorWithDefaults() *AuthChecklistFactor {
	this := AuthChecklistFactor{}
	return &this
}

// GetType returns the Type field value
func (o *AuthChecklistFactor) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AuthChecklistFactor) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AuthChecklistFactor) SetType(v string) {
	o.Type = v
}

// GetGroupId returns the GroupId field value
func (o *AuthChecklistFactor) GetGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *AuthChecklistFactor) GetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *AuthChecklistFactor) SetGroupId(v string) {
	o.GroupId = v
}

// GetRequired returns the Required field value
func (o *AuthChecklistFactor) GetRequired() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Required
}

// GetRequiredOk returns a tuple with the Required field value
// and a boolean to check if the value has been set.
func (o *AuthChecklistFactor) GetRequiredOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Required, true
}

// SetRequired sets field value
func (o *AuthChecklistFactor) SetRequired(v string) {
	o.Required = v
}

// GetHelperText returns the HelperText field value if set, zero value otherwise.
func (o *AuthChecklistFactor) GetHelperText() string {
	if o == nil || o.HelperText == nil {
		var ret string
		return ret
	}
	return *o.HelperText
}

// GetHelperTextOk returns a tuple with the HelperText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthChecklistFactor) GetHelperTextOk() (*string, bool) {
	if o == nil || o.HelperText == nil {
		return nil, false
	}
	return o.HelperText, true
}

// HasHelperText returns a boolean if a field has been set.
func (o *AuthChecklistFactor) HasHelperText() bool {
	if o != nil && o.HelperText != nil {
		return true
	}

	return false
}

// SetHelperText gets a reference to the given string and assigns it to the HelperText field.
func (o *AuthChecklistFactor) SetHelperText(v string) {
	o.HelperText = &v
}

// GetOptions returns the Options field value
func (o *AuthChecklistFactor) GetOptions() []AuthChecklistOptions {
	if o == nil {
		var ret []AuthChecklistOptions
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *AuthChecklistFactor) GetOptionsOk() ([]AuthChecklistOptions, bool) {
	if o == nil {
		return nil, false
	}
	return o.Options, true
}

// SetOptions sets field value
func (o *AuthChecklistFactor) SetOptions(v []AuthChecklistOptions) {
	o.Options = v
}

func (o AuthChecklistFactor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["group_id"] = o.GroupId
	}
	if true {
		toSerialize["required"] = o.Required
	}
	if o.HelperText != nil {
		toSerialize["helper_text"] = o.HelperText
	}
	if true {
		toSerialize["options"] = o.Options
	}
	return json.Marshal(toSerialize)
}

type NullableAuthChecklistFactor struct {
	value *AuthChecklistFactor
	isSet bool
}

func (v NullableAuthChecklistFactor) Get() *AuthChecklistFactor {
	return v.value
}

func (v *NullableAuthChecklistFactor) Set(val *AuthChecklistFactor) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthChecklistFactor) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthChecklistFactor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthChecklistFactor(val *AuthChecklistFactor) *NullableAuthChecklistFactor {
	return &NullableAuthChecklistFactor{value: val, isSet: true}
}

func (v NullableAuthChecklistFactor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthChecklistFactor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
