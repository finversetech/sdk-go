/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"time"
)

// ProductStatus struct for ProductStatus
type ProductStatus struct {
	// The current health of this product
	Status *string `json:"status,omitempty"`
	// The detailed event name
	StatusDetails        *string      `json:"status_details,omitempty"`
	LastUpdate           NullableTime `json:"last_update,omitempty"`
	LastSuccessfulUpdate NullableTime `json:"last_successful_update,omitempty"`
}

// NewProductStatus instantiates a new ProductStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductStatus() *ProductStatus {
	this := ProductStatus{}
	return &this
}

// NewProductStatusWithDefaults instantiates a new ProductStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductStatusWithDefaults() *ProductStatus {
	this := ProductStatus{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProductStatus) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductStatus) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProductStatus) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ProductStatus) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDetails returns the StatusDetails field value if set, zero value otherwise.
func (o *ProductStatus) GetStatusDetails() string {
	if o == nil || o.StatusDetails == nil {
		var ret string
		return ret
	}
	return *o.StatusDetails
}

// GetStatusDetailsOk returns a tuple with the StatusDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductStatus) GetStatusDetailsOk() (*string, bool) {
	if o == nil || o.StatusDetails == nil {
		return nil, false
	}
	return o.StatusDetails, true
}

// HasStatusDetails returns a boolean if a field has been set.
func (o *ProductStatus) HasStatusDetails() bool {
	if o != nil && o.StatusDetails != nil {
		return true
	}

	return false
}

// SetStatusDetails gets a reference to the given string and assigns it to the StatusDetails field.
func (o *ProductStatus) SetStatusDetails(v string) {
	o.StatusDetails = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductStatus) GetLastUpdate() time.Time {
	if o == nil || o.LastUpdate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdate.Get()
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductStatus) GetLastUpdateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUpdate.Get(), o.LastUpdate.IsSet()
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *ProductStatus) HasLastUpdate() bool {
	if o != nil && o.LastUpdate.IsSet() {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given NullableTime and assigns it to the LastUpdate field.
func (o *ProductStatus) SetLastUpdate(v time.Time) {
	o.LastUpdate.Set(&v)
}

// SetLastUpdateNil sets the value for LastUpdate to be an explicit nil
func (o *ProductStatus) SetLastUpdateNil() {
	o.LastUpdate.Set(nil)
}

// UnsetLastUpdate ensures that no value is present for LastUpdate, not even an explicit nil
func (o *ProductStatus) UnsetLastUpdate() {
	o.LastUpdate.Unset()
}

// GetLastSuccessfulUpdate returns the LastSuccessfulUpdate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductStatus) GetLastSuccessfulUpdate() time.Time {
	if o == nil || o.LastSuccessfulUpdate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulUpdate.Get()
}

// GetLastSuccessfulUpdateOk returns a tuple with the LastSuccessfulUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductStatus) GetLastSuccessfulUpdateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastSuccessfulUpdate.Get(), o.LastSuccessfulUpdate.IsSet()
}

// HasLastSuccessfulUpdate returns a boolean if a field has been set.
func (o *ProductStatus) HasLastSuccessfulUpdate() bool {
	if o != nil && o.LastSuccessfulUpdate.IsSet() {
		return true
	}

	return false
}

// SetLastSuccessfulUpdate gets a reference to the given NullableTime and assigns it to the LastSuccessfulUpdate field.
func (o *ProductStatus) SetLastSuccessfulUpdate(v time.Time) {
	o.LastSuccessfulUpdate.Set(&v)
}

// SetLastSuccessfulUpdateNil sets the value for LastSuccessfulUpdate to be an explicit nil
func (o *ProductStatus) SetLastSuccessfulUpdateNil() {
	o.LastSuccessfulUpdate.Set(nil)
}

// UnsetLastSuccessfulUpdate ensures that no value is present for LastSuccessfulUpdate, not even an explicit nil
func (o *ProductStatus) UnsetLastSuccessfulUpdate() {
	o.LastSuccessfulUpdate.Unset()
}

func (o ProductStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusDetails != nil {
		toSerialize["status_details"] = o.StatusDetails
	}
	if o.LastUpdate.IsSet() {
		toSerialize["last_update"] = o.LastUpdate.Get()
	}
	if o.LastSuccessfulUpdate.IsSet() {
		toSerialize["last_successful_update"] = o.LastSuccessfulUpdate.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProductStatus struct {
	value *ProductStatus
	isSet bool
}

func (v NullableProductStatus) Get() *ProductStatus {
	return v.value
}

func (v *NullableProductStatus) Set(val *ProductStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableProductStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableProductStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductStatus(val *ProductStatus) *NullableProductStatus {
	return &NullableProductStatus{value: val, isSet: true}
}

func (v NullableProductStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
