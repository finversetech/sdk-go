openapi: 3.0.1
info:
  contact:
    email: info@finverse.com
    name: Maintainers
  description: Documentation of the early finverse services
  license:
    name: unknown license
  termsOfService: https://example.com
  title: Finverse Public
  version: 0.0.1
servers:
- url: https://api.sandbox.finverse.net/
security:
- Oauth2:
  - test
tags:
- description: Operations does not required an access token
  name: public
- description: Operations required a customer access token
  name: customer
- description: Operations required a login identity access token
  name: login_identity
- description: Operations required a link token
  name: link
paths:
  /jwks:
    get:
      description: get jwks
      operationId: getCredSubmitJwks
      responses:
        "200":
          content: {}
          description: ok
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModel'
          description: Internal Server Error
      tags:
      - public
  /auth/customer/token:
    post:
      description: generate an access_token
      operationId: generateCustomerAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        description: token request
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: ok
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      tags:
      - public
      x-codegen-request-body-name: tokenRequest
  /accounts/{accountId}:
    get:
      description: Get a specific account's information
      operationId: getAccount
      parameters:
      - description: The account id
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - account
      tags:
      - login_identity
  /accounts:
    get:
      description: Get a list of accounts for a login identity
      operationId: listAccounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountsResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - account
      tags:
      - login_identity
  /card_details:
    get:
      description: Get a list of card details for a login identity
      operationId: listCardDetails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCardsDetailsResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - card:get
      tags:
      - login_identity
  /account_numbers/{accountId}:
    get:
      description: Get the account number for a specific account
      operationId: getAccountNumber
      parameters:
      - description: The account id
        in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountNumberResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - account_number
      tags:
      - login_identity
  /balance_history/{accountId}:
    get:
      description: Get the balance history for a specific account
      operationId: getBalanceHistory
      parameters:
      - description: The account id
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: The source will determine what type of balance history will be
          returned
        in: query
        name: source
        schema:
          enum:
          - INSTITUTION
          - COMPUTED
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBalanceHistoryResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - balance_history
      tags:
      - login_identity
  /transactions/{accountId}:
    get:
      description: Get a list of transactions for a particular account. The transactions
        are returned in sorted order, with the most recent one appearing first.
      operationId: listTransactionsByAccountId
      parameters:
      - description: The account id (ULID, example - 01EP4A1MZDHKETZFRPF0K62S6S)
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: default is 0
        in: query
        name: offset
        schema:
          default: 0
          minimum: 0
          type: integer
      - description: default is 500, max is 1000
        in: query
        name: limit
        schema:
          default: 500
          maximum: 1000
          minimum: 1
          type: integer
      - description: when true, response will be enriched transactions; otherwise
          it will be raw transactions
        in: query
        name: enrichments
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionsResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - transaction
      tags:
      - login_identity
  /transactions:
    get:
      description: Get a list of transactions for a login identity. The transactions
        are returned in sorted order, with the most recent one appearing first.
      operationId: listTransactionsByLoginIdentityId
      parameters:
      - description: default is 0
        in: query
        name: offset
        schema:
          default: 0
          minimum: 0
          type: integer
      - description: default is 500, max is 1000
        in: query
        name: limit
        schema:
          default: 500
          maximum: 1000
          minimum: 1
          type: integer
      - description: when true, response will be enriched transactions; otherwise
          it will be raw transactions
        in: query
        name: enrichments
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransactionsResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - transaction
      tags:
      - login_identity
  /income:
    get:
      description: Get income figures for a login identity
      operationId: getIncomeEstimateByLoginIdentityId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - income:get
      tags:
      - login_identity
  /institutions/{institutionId}:
    get:
      description: Get a specific institution by institutionId
      operationId: getInstitution
      parameters:
      - description: The institution id
        in: path
        name: institutionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - institution
      tags:
      - customer
  /institutions:
    get:
      description: Get a list of institutions
      operationId: listInstitutions
      parameters:
      - description: (Deprecated) The country the institution belongs to
        in: query
        name: country
        schema:
          type: string
      - description: The countries the institution belongs to
        explode: false
        in: query
        name: countries
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The products that this institution supports
        in: query
        name: products_supported
        schema:
          type: string
      - description: The type of institution
        in: query
        name: institution_type
        schema:
          enum:
          - BANK
          - WALLET
          - TEST
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstitutionsResponse'
          description: Successful
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - institution
      tags:
      - customer
      - link
  /institutions/customer:
    get:
      description: Get a customer-specific list of institutions for Finverse Link
      operationId: getInstitutionsForCustomer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstitutionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - institution:link
  /identity:
    get:
      description: \[BETA] Get a list of identity data for a given login identity
      operationId: getIdentity
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIdentityResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - identity
      tags:
      - login_identity
  /payment_links/confirm:
    post:
      description: Confirm a payment against a payment Link
      operationId: confirmPayment
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmPaymentResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - payment:confirm
  /payment_links/mandates:
    post:
      description: CREATE Mandate for payment link
      operationId: createPaymentLinkMandate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentLinkMandateRequest'
        description: request body for creating mandate for payment-link
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentLinkMandateResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - paymentlink:mandate:create
      x-codegen-request-body-name: createPaymentLinkMandateRequest
  /payment_links/card:
    post:
      description: Initiate Card Payment for a Payment Link
      operationId: createPaymentLinkCardPayment
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentLinkCardPaymentResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - paymentlink:cc:create
  /payment_links/fps/token:
    post:
      description: Create token for fps flow
      operationId: createFpsToken
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFpsTokenResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - paymentlink:fps:token
  /payment_links:
    post:
      description: Create payment link
      operationId: CreatePaymentLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentLinkRequest'
        description: Parameters required to create a payment link
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLinkResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - paymentlink:create
      x-codegen-request-body-name: createPaymentLinkRequest
  /payment_links/{paymentLinkId}:
    get:
      description: Get payment link
      operationId: GetPaymentLink
      parameters:
      - description: The payment link id
        in: path
        name: paymentLinkId
        required: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLinkResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - paymentlink:get
  /payment_links/{paymentLinkId}/cancel:
    post:
      description: Cancel a payment link
      operationId: CancelPaymentLink
      parameters:
      - description: The payment link id
        in: path
        name: paymentLinkId
        required: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLinkResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - paymentlink:cancel
  /link:
    post:
      description: Create a new link and submit credentials
      operationId: createLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiLinkRequest'
        description: Request body for creating a new link and submitting credentials
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoginIdentityByIdResponse'
          description: ok
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModel'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModel'
          description: Internal Server Error
      security:
      - Oauth2:
        - linkApi:create
      tags:
      - link
      x-codegen-request-body-name: apiLinkRequest
  /link/woauth:
    post:
      description: Creates a new link
      operationId: createLinkWoauth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkRequest'
        description: Request body for starting a new Link
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResponse'
          description: Service Okay
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModel'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModel'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - Oauth2:
        - link
      tags:
      - link
      x-codegen-request-body-name: linkRequest
  /link/token:
    post:
      description: generate a link token that can be used to create link
      operationId: generateLinkToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkTokenRequest'
        description: token request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkTokenResponse'
          description: ok
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - link:token
      tags:
      - customer
      - login_identity
      x-codegen-request-body-name: linkTokenRequest
  /link/relink:
    post:
      description: Update an existing link
      operationId: relink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelinkRequest'
        description: Request body for updating Link
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResponse'
          description: Service Okay
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModel'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - Oauth2:
        - loginIdentity:update
      tags:
      - link
      x-codegen-request-body-name: relinkRequest
  /link/relink/{loginIdentityId}:
    post:
      description: Create a new link using an existing LIID
      operationId: relinkV2
      parameters:
      - description: The login identity id
        in: path
        name: loginIdentityId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRelinkRequest'
        description: Request body for relinking and submitting credentials
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoginIdentityByIdResponse'
          description: Service Okay
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModel'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModel'
          description: Internal Server Error
      security:
      - Oauth2:
        - relinkApi:create
      tags:
      - link
      x-codegen-request-body-name: apiRelinkRequest
  /link/action/{loginIdentityId}:
    post:
      description: Post the user action value
      operationId: linkAction
      parameters:
      - description: The login identity id
        in: path
        name: loginIdentityId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionRequest'
        description: Request body for post link action
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoginIdentityByIdResponse'
          description: Service Okay
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModel'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModel'
          description: Internal Server Error
      security:
      - Oauth2:
        - linkApi:update
      tags:
      - link
      x-codegen-request-body-name: actionRequest
  /link/status/{loginIdentityId}:
    get:
      description: Check the status of a given loginIdentity
      operationId: linkStatus
      parameters:
      - description: The login identity id
        in: path
        name: loginIdentityId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkStatusResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModel'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModel'
          description: Internal Server Error
      security:
      - Oauth2:
        - linkApi:read
      tags:
      - link
  /link/fvlink/status/{loginIdentityId}:
    get:
      description: Check the status of a given login identity via FVLink
      operationId: linkStatusNonSensitive
      parameters:
      - description: The login identity id
        in: path
        name: loginIdentityId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonSensitiveLinkStatusResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModel'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModel'
          description: Internal Server Error
      security:
      - Oauth2:
        - fvLinkStatus:read
      tags:
      - link
  /auth/callback:
    get:
      description: Callback url to get the oauth authorization token
      operationId: authCallback
      parameters:
      - description: The state of the client when oauth was initialized
        in: query
        name: state
        required: true
        schema:
          type: string
      - description: The authorization code generated by the Oauth provider
        in: query
        name: code
        schema:
          type: string
      - description: error
        in: query
        name: error
        schema:
          type: string
      - description: error description
        in: query
        name: error_description
        schema:
          type: string
      - description: error details
        in: query
        name: error_details
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectUriResponse'
          description: Returns the redirect uri with either sucess or error
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid Request
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      tags:
      - public
  /auth/token:
    post:
      description: Exchange authorization code for token
      operationId: token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                grant_type:
                  enum:
                  - authorization_code
                  type: string
                code:
                  type: string
                client_id:
                  type: string
                redirect_uri:
                  type: string
              required:
              - client_id
              - code
              - grant_type
              - redirect_uri
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
          description: Service Okay
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - loginIdentity:token
      tags:
      - link
  /auth/token/refresh:
    post:
      description: Refresh an access token
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
        description: The refresh token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
          description: New refresh, access token
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - loginIdentity:token
      tags:
      - customer
      x-codegen-request-body-name: refreshRequest
  /login_identity/{loginIdentityId}:
    get:
      description: Get a specific loginIdentity
      operationId: getLoginIdentityById
      parameters:
      - description: The login identity id
        in: path
        name: loginIdentityId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoginIdentityByIdResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - loginIdentity:get
      tags:
      - customer
  /login_identity/{loginIdentityId}/history:
    get:
      description: Get a history of events for a specific loginIdentity
      operationId: getLoginIdentityHistory
      parameters:
      - description: The login identity id
        in: path
        name: loginIdentityId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoginIdentityHistoryResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - loginIdentity:get
      tags:
      - customer
  /login_identity:
    delete:
      description: Delete a specific loginIdentity
      operationId: deleteLoginIdentity
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLoginIdentityResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - loginIdentity:delete
      tags:
      - login_identity
    get:
      description: Get a specific loginIdentity
      operationId: getLoginIdentity
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoginIdentityByIdResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - loginIdentity:self
      tags:
      - login_identity
  /login_identity/refresh:
    post:
      description: Create a refresh job for a login identity
      operationId: refreshLoginIdentity
      responses:
        "200":
          content: {}
          description: Refresh queued
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Refresh error
        "401":
          content: {}
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - loginIdentity:update
      tags:
      - login_identity
  /statements:
    get:
      description: Get list of available statements
      operationId: getStatements
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatementsResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - statement:read
      tags:
      - login_identity
  /statements/{statementId}:
    get:
      description: Download statement
      operationId: getStatement
      parameters:
      - description: The statement id
        in: path
        name: statementId
        required: true
        schema:
          type: string
      - description: when true, response will be http redirect; otherwise it will
          be json response with the download link
        in: query
        name: redirect
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatementLinkResponse'
          description: Successful
        "307":
          content: {}
          description: Redirect
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - statement:read
      tags:
      - login_identity
  /composite_statement:
    get:
      description: Download composite statement
      operationId: getCompositeStatement
      parameters:
      - description: when true, response will be http redirect; otherwise it will
          be json response with the download link
        in: query
        name: redirect
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeStatementLink'
          description: Successful
        "307":
          content: {}
          description: Redirect
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Invalid Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - composite_statement
      tags:
      - login_identity
  /payments/jwks:
    get:
      description: get payment jwks
      operationId: getPaymentsJwks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJWKSResponse'
          description: Successful
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      tags:
      - public
  /mandates:
    get:
      description: List mandates
      operationId: listMandates
      parameters:
      - description: ISO format (YYYY-MM-DD)
        in: query
        name: date_from
        schema:
          format: date
          type: string
      - description: ISO format (YYYY-MM-DD)
        in: query
        name: date_to
        schema:
          format: date
          type: string
      - description: The mandate statuses to filter for, comma separated
        explode: false
        in: query
        name: statuses
        schema:
          items:
            enum:
            - AUTHORIZATION_REQUIRED
            - AUTHORIZING
            - PROCESSING
            - SUBMITTED
            - SUCCEEDED
            - FAILED
            - REVOKED
            type: string
          type: array
        style: form
      - description: The sender type of the mandate
        in: query
        name: sender_type
        schema:
          enum:
          - INDIVIDUAL
          - BUSINESS
          type: string
      - description: The user_id the mandate was setup for
        in: query
        name: user_id
        schema:
          type: string
      - description: The institution the mandate was executed against
        in: query
        name: institution_id
        schema:
          type: string
      - description: default is 0
        in: query
        name: offset
        schema:
          default: 0
          minimum: 0
          type: integer
      - description: default is 500, max is 1000
        in: query
        name: limit
        schema:
          default: 500
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMandatesResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - mandate:list
    post:
      description: CREATE Mandate
      operationId: createMandate
      parameters:
      - description: A random key provided by the customer, per unique payment. The
          purpose for the Idempotency key is to allow safe retrying without the operation
          being performed multiple times.
        in: header
        name: Idempotency-Key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMandateRequest'
        description: request body for creating mandate
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMandateResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - mandate:create
      tags:
      - customer
      x-codegen-request-body-name: createMandateRequest
  /mandates/institution_selection:
    post:
      description: Update InstitutionID and SenderType for Mandate
      operationId: setMandateInstitution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMandateInstitutionRequest'
        description: request body for updating mandate institutionId and senderType
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetMandateInstitutionResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - mandate_auth:update
      tags:
      - customer
      x-codegen-request-body-name: updateRequest
  /mandates/{mandateId}:
    get:
      description: Get Mandate details by mandate_id
      operationId: getMandate
      parameters:
      - description: mandate id
        in: path
        name: mandateId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMandateResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - mandate:get
      tags:
      - customer
  /mandates/link:
    post:
      description: Get link to launch FV Link UI in mandate authorization mode
      operationId: getMandateAuthLink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMandateAuthLinkRequest'
        description: request body for mandate authorization link
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMandateAuthLinkResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - mandate:create
      tags:
      - customer
      x-codegen-request-body-name: getMandateAuthLinkRequest
  /mandates/payment_user/sender:
    get:
      description: Get sender payment user for mandate
      operationId: getSenderPaymentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentUserResponse'
          description: Successful
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - mandates:payment_user:get
  /mandates/payment_user/autopay:
    post:
      description: Set autopay consent for payment user
      operationId: setAutopayConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAutopayConsentRequest'
        required: true
      responses:
        "200":
          content: {}
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - mandates:payment_user:set
      x-codegen-request-body-name: setAutopayConsentRequest
  /mandates/sender_account:
    post:
      description: Create mandate for an existing sender account
      operationId: createMandateForExistingSender
      parameters:
      - description: A random key provided by the customer, per unique payment. The
          purpose for the Idempotency key is to allow safe retrying without the operation
          being performed multiple times.
        in: header
        name: Idempotency-Key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMandateWithSenderAccountRequest'
        description: request body for creating mandate
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMandateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - mandate:create
      x-codegen-request-body-name: createMandateRequest
  /payments:
    get:
      description: List Payments
      operationId: listPayments
      parameters:
      - description: ISO format (YYYY-MM-DD)
        in: query
        name: date_from
        schema:
          format: date
          type: string
      - description: ISO format (YYYY-MM-DD)
        in: query
        name: date_to
        schema:
          format: date
          type: string
      - description: The payment statuses to filter for, comma separated
        explode: false
        in: query
        name: statuses
        schema:
          items:
            enum:
            - AUTHORIZATION_REQUIRED
            - AUTHORIZING
            - PROCESSING
            - SUBMITTED
            - EXECUTED
            - FAILED
            - REVOKED
            type: string
          type: array
        style: form
      - description: The sender type of the mandate
        in: query
        name: sender_type
        schema:
          enum:
          - INDIVIDUAL
          - BUSINESS
          type: string
      - description: The user_id the mandate was setup for
        in: query
        name: user_id
        schema:
          type: string
      - description: The institution the mandate was executed against
        in: query
        name: institution_id
        schema:
          type: string
      - description: The type of payment
        in: query
        name: payment_type
        schema:
          enum:
          - MANDATE
          - SINGLE
          type: string
      - description: The mandate the payment belongs to
        in: query
        name: mandate_id
        schema:
          type: string
      - description: The currency the payment is made in
        in: query
        name: currency
        schema:
          type: string
      - description: default is 0
        in: query
        name: offset
        schema:
          default: 0
          minimum: 0
          type: integer
      - description: default is 500, max is 1000
        in: query
        name: limit
        schema:
          default: 500
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPaymentsResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - payment:list
    post:
      description: Create new Payment
      operationId: createPayment
      parameters:
      - description: A random key provided by the customer, per unique payment. The
          purpose for the Idempotency key is to allow safe retrying without the operation
          being performed multiple times.
        in: header
        name: Idempotency-Key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
        description: request body for creating payment
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - payment:create
      tags:
      - customer
      x-codegen-request-body-name: createPaymentRequest
  /payments/{paymentId}:
    get:
      description: Get Payment details by payment_id
      operationId: getPayment
      parameters:
      - description: payment id
        in: path
        name: paymentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - payment:get
      tags:
      - customer
  /mandates/auth:
    get:
      description: Get Mandate Authorization by mandate id
      operationId: getMandateAuth
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMandateAuthResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - mandate_auth:get
      tags:
      - customer
    post:
      description: Submit authorization checklist items
      operationId: submitAuthChecklist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitAuthChecklistRequest'
        description: request body for submitting auth checklist
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitAuthChecklistResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - mandate_auth:update
      tags:
      - customer
      x-codegen-request-body-name: submitAuthChecklistRequest
  /mandates/{mandateId}/authorize:
    post:
      description: Allows a customer to authorize a specific mandate
      operationId: authorizeMandate
      parameters:
      - description: The mandate_id that is being authorized
        in: path
        name: mandateId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeMandateRequest'
        description: request body for authorizing a mandate
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitAuthChecklistResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - mandates:authorize
      tags:
      - customer
      x-codegen-request-body-name: authorizeMandateRequest
  /payments/instruction:
    post:
      description: Create a new payment instruction to be used when linking to perform
        new payment
      operationId: createPaymentInstruction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPaymentInstruction'
        description: Request body for starting a new Link
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentInstructionResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModel'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModel'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - Oauth2:
        - payment:create
      tags:
      - customer
      x-codegen-request-body-name: paymentInstruction
  /payments/instruction/{paymentInstructionId}:
    get:
      description: Get payment instructions by payment_instruction_id
      operationId: getPaymentInstruction
      parameters:
      - description: The id of a payment instruction
        in: path
        name: paymentInstructionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentInstructionsResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModel'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestModel'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      security:
      - Oauth2:
        - payment:get
      tags:
      - customer
  /payments/manual_payment:
    post:
      description: Submit manual payment confirmation
      operationId: confirmManualPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualPaymentConfirmationRequest'
        description: Request body containing information to identify manual payment
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualPaymentConfirmationResponse'
          description: ok
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - manual_payment:confirm
      x-codegen-request-body-name: manualPaymentIdentifiers
  /payout_instructions:
    post:
      description: Create new Payout instruction
      operationId: createPayoutInstruction
      parameters:
      - description: A random key provided by the customer, per unique payout. The
          purpose for the Idempotency key is to allow safe retrying without the operation
          being performed multiple times.
        in: header
        name: Idempotency-Key
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePayoutInstructionRequest'
        description: request body for creating payout instruction
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutInstructionResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - payoutInstruction:create
      tags:
      - customer
      x-codegen-request-body-name: createPayoutInstructionRequest
  /payout_instructions/{payoutInstructionId}:
    get:
      description: Get Payout Instruction details by payout_instruction_id
      operationId: getPayoutInstruction
      parameters:
      - description: payout instruction id
        in: path
        name: payoutInstructionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutInstructionResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - payoutInstruction:get
      tags:
      - customer
  /payout_instructions/{payoutInstructionId}/cancel:
    post:
      description: Cancel Payout Instruction by payout_instruction_id
      operationId: cancelPayoutInstruction
      parameters:
      - description: payout instruction id
        in: path
        name: payoutInstructionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutInstructionResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - payoutInstruction:cancel
      tags:
      - customer
  /calculate/line_items/{paymentType}:
    get:
      description: Get line items for display
      operationId: getLineItemsForDisplay
      parameters:
      - description: The payment type
        in: path
        name: paymentType
        required: true
        schema:
          enum:
          - MANDATE
          - MANUAL
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLineItemsForDisplayResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - line_items:get
      tags:
      - customer
  /payment_users/{paymentUserId}/payment_accounts:
    get:
      description: Get payment account by user id
      operationId: listPaymentAccounts
      parameters:
      - description: The payment user id
        in: path
        name: paymentUserId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPaymentAccountsResponse'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - payment_account:get
      tags:
      - customer
  /payment_accounts:
    post:
      description: create payment account
      operationId: createPaymentAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentAccountRequest'
        description: request body for creating payment account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAccountDetails'
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - payment_account:create
      tags:
      - customer
      x-codegen-request-body-name: createPaymentAccountRequest
  /payment_accounts/{paymentAccountId}:
    delete:
      description: delete payment account
      operationId: deletePaymentAccount
      parameters:
      - description: The payment account id
        in: path
        name: paymentAccountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - payment_account:delete
      tags:
      - customer
  /payment_users:
    post:
      description: Create a payment user
      operationId: createPaymentUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentUserRequest'
        description: request body for creating payment user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - payment_user:create
      tags:
      - customer
      x-codegen-request-body-name: createPaymentUserRequest
  /payment_users/{paymentUserId}:
    get:
      description: Get a payment user
      operationId: getPaymentUser
      parameters:
      - in: path
        name: paymentUserId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentUser'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Invalid Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrBodyModelV2'
          description: Internal Server Error
      security:
      - Oauth2:
        - payment_user:get
      tags:
      - customer
components:
  schemas:
    Principal:
      properties:
        subject:
          example: could be clientId/customerAppId/loginIdentityId depends on the
            type of token, see also the explict claims for each of these ids
          type: string
        token:
          example: algorithm.claims.hmac
          type: string
        client_id:
          example: someClientId
          type: string
        customer_app_id:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        login_identity_id:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        customization_id:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        mandate_id:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        expires_in:
          example: 3600.0
          type: number
        payment_attempt_id:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        product_flow:
          example: PAYMENT_LINK
          type: string
        scopes:
          example:
          - link
          - transaction
          items:
            type: string
          type: array
        link_token_request:
          $ref: '#/components/schemas/LinkTokenRequest'
        get_mandate_auth_link_request:
          $ref: '#/components/schemas/GetMandateAuthLinkRequest'
        currency:
          type: string
        redirect_uri:
          type: string
        payment_link_id:
          type: string
        unique_reference_id:
          type: string
      required:
      - client_id
      - customer_app_id
      - login_identity_id
      - subject
      type: object
    GetAccountResponse:
      example:
        institution:
          portal_name: Personal Internet Banking
          countries:
          - HKG
          institution_name: Mock Bank
          institution_id: "123"
        login_identity:
          login_identity_id: login_identity_id
          last_session_id: last_session_id
          status: LINKING
        account:
          country: HKG
          account_currency: HKD
          account_type:
            subtype: SAVINGS
            type: DEPOSIT
          account_holder_name: John Doe
          account_sub_type: TIME_DEPOSIT
          created_at: 2000-01-23T04:56:07.000+00:00
          account_nickname: Emergency Fund
          is_parent: false
          statement_balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          updated_at: 2000-01-23T04:56:07.000+00:00
          balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          is_excluded: false
          group_id: 03504faef9ad3ac048c6a43efa6db7ba1c5239a856536839d87ac949559e7ceb
          account_name: HKD Savings
          account_number_masked: 123XXXXXX89
          is_closed: false
      properties:
        account:
          $ref: '#/components/schemas/Account'
        login_identity:
          $ref: '#/components/schemas/LoginIdentityShort'
        institution:
          $ref: '#/components/schemas/InstitutionShort'
      type: object
    ListCardsDetailsResponse:
      example:
        card_details:
          card_accounts:
          - account_type:
              subtype: SAVINGS
              type: DEPOSIT
            last_payment_date: 2021-10-27
            total_credit_limit:
              raw: "69.00"
              currency: HKD
              value: 69.0
            payment_due_amount:
              raw: "69.00"
              currency: HKD
              value: 69.0
            minimum_payment_due:
              raw: "69.00"
              currency: HKD
              value: 69.0
            last_payment_amount:
              raw: "69.00"
              currency: HKD
              value: 69.0
            statement_date: 2021-10-27
            rewards_points_balance:
              unit: UNI$
              raw: "69.00"
              value: 69.0
            statement_due_amount:
              raw: "69.00"
              currency: HKD
              value: 69.0
            account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
            statement_payment_due_date: 2021-02-01
            updated_at: 2021-02-01T10:01:02.333Z
            available_credit_limit:
              raw: "69.00"
              currency: HKD
              value: 69.0
            account_name: HKD Visa
            account_number_masked: account_number_masked
            current_balance:
              raw: "69.00"
              currency: HKD
              value: 69.0
            next_payment_due_date: 2021-02-01
          - account_type:
              subtype: SAVINGS
              type: DEPOSIT
            last_payment_date: 2021-10-27
            total_credit_limit:
              raw: "69.00"
              currency: HKD
              value: 69.0
            payment_due_amount:
              raw: "69.00"
              currency: HKD
              value: 69.0
            minimum_payment_due:
              raw: "69.00"
              currency: HKD
              value: 69.0
            last_payment_amount:
              raw: "69.00"
              currency: HKD
              value: 69.0
            statement_date: 2021-10-27
            rewards_points_balance:
              unit: UNI$
              raw: "69.00"
              value: 69.0
            statement_due_amount:
              raw: "69.00"
              currency: HKD
              value: 69.0
            account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
            statement_payment_due_date: 2021-02-01
            updated_at: 2021-02-01T10:01:02.333Z
            available_credit_limit:
              raw: "69.00"
              currency: HKD
              value: 69.0
            account_name: HKD Visa
            account_number_masked: account_number_masked
            current_balance:
              raw: "69.00"
              currency: HKD
              value: 69.0
            next_payment_due_date: 2021-02-01
          card_total:
            rewards_points_balance:
              unit: UNI$
              raw: "69.00"
              value: 69.0
            statement_due_amount:
              raw: "69.00"
              currency: HKD
              value: 69.0
            updated_at: 2021-02-01T10:01:02.333Z
            available_credit_limit:
              raw: "69.00"
              currency: HKD
              value: 69.0
            current_balance:
              raw: "69.00"
              currency: HKD
              value: 69.0
            total_credit_limit:
              raw: "69.00"
              currency: HKD
              value: 69.0
            payment_due_amount:
              raw: "69.00"
              currency: HKD
              value: 69.0
            minimum_payment_due:
              raw: "69.00"
              currency: HKD
              value: 69.0
        institution:
          portal_name: Personal Internet Banking
          countries:
          - HKG
          institution_name: Mock Bank
          institution_id: "123"
        login_identity:
          login_identity_id: login_identity_id
          last_session_id: last_session_id
          status: LINKING
      properties:
        login_identity:
          $ref: '#/components/schemas/LoginIdentityShort'
        institution:
          $ref: '#/components/schemas/InstitutionShort'
        card_details:
          $ref: '#/components/schemas/CardDetails'
      type: object
    GetAccountNumberResponse:
      example:
        account_number:
          number: "1234567890123"
          account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          raw: 123-4567890-123
        institution:
          portal_name: Personal Internet Banking
          countries:
          - HKG
          institution_name: Mock Bank
          institution_id: "123"
        payment_details:
        - other_info:
            bank_code: bank_code
          bank_shortname: testbank
          format: SWIFT
          bank_address: 99 Stree, Building, City
          bank_country: Country
          bank_fullname: Finverse test bank
          bic: BKCHHKHHXXX
        - other_info:
            bank_code: bank_code
          bank_shortname: testbank
          format: SWIFT
          bank_address: 99 Stree, Building, City
          bank_country: Country
          bank_fullname: Finverse test bank
          bic: BKCHHKHHXXX
        login_identity:
          login_identity_id: login_identity_id
          last_session_id: last_session_id
          status: LINKING
        account:
          country: HKG
          account_currency: HKD
          account_type:
            subtype: SAVINGS
            type: DEPOSIT
          account_holder_name: John Doe
          account_sub_type: TIME_DEPOSIT
          created_at: 2000-01-23T04:56:07.000+00:00
          account_nickname: Emergency Fund
          is_parent: false
          statement_balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          updated_at: 2000-01-23T04:56:07.000+00:00
          balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          is_excluded: false
          group_id: 03504faef9ad3ac048c6a43efa6db7ba1c5239a856536839d87ac949559e7ceb
          account_name: HKD Savings
          account_number_masked: 123XXXXXX89
          is_closed: false
      properties:
        account_number:
          $ref: '#/components/schemas/AccountNumber'
        account:
          $ref: '#/components/schemas/Account'
        login_identity:
          $ref: '#/components/schemas/LoginIdentityShort'
        institution:
          $ref: '#/components/schemas/InstitutionShort'
        payment_details:
          items:
            $ref: '#/components/schemas/PaymentDetails'
          type: array
      type: object
    GetBalanceHistoryResponse:
      example:
        institution:
          portal_name: Personal Internet Banking
          countries:
          - HKG
          institution_name: Mock Bank
          institution_id: "123"
        login_identity:
          login_identity_id: login_identity_id
          last_session_id: last_session_id
          status: LINKING
        balance_history:
        - date: 2021-10-27
          amount: 69.0
          currency: HKD
        - date: 2021-10-27
          amount: 69.0
          currency: HKD
        source: INSTITUTION
        account:
          country: HKG
          account_currency: HKD
          account_type:
            subtype: SAVINGS
            type: DEPOSIT
          account_holder_name: John Doe
          account_sub_type: TIME_DEPOSIT
          created_at: 2000-01-23T04:56:07.000+00:00
          account_nickname: Emergency Fund
          is_parent: false
          statement_balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          updated_at: 2000-01-23T04:56:07.000+00:00
          balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          is_excluded: false
          group_id: 03504faef9ad3ac048c6a43efa6db7ba1c5239a856536839d87ac949559e7ceb
          account_name: HKD Savings
          account_number_masked: 123XXXXXX89
          is_closed: false
      properties:
        account:
          $ref: '#/components/schemas/Account'
        login_identity:
          $ref: '#/components/schemas/LoginIdentityShort'
        institution:
          $ref: '#/components/schemas/InstitutionShort'
        balance_history:
          items:
            $ref: '#/components/schemas/BalanceHistory'
          type: array
        source:
          enum:
          - INSTITUTION
          - COMPUTED
          type: string
      type: object
    GetIdentityResponse:
      example:
        institution:
          portal_name: Personal Internet Banking
          countries:
          - HKG
          institution_name: Mock Bank
          institution_id: "123"
        identity:
          emails:
          - source_ids:
            - source_ids
            - source_ids
            account_ids:
            - account_ids
            - account_ids
            raw: example123@example.com
            source: INTERNET_BANKING
            email: example123@example.com
            masked_email: exam******@example.com
          - source_ids:
            - source_ids
            - source_ids
            account_ids:
            - account_ids
            - account_ids
            raw: example123@example.com
            source: INTERNET_BANKING
            email: example123@example.com
            masked_email: exam******@example.com
          phone_numbers:
          - source_ids:
            - source_ids
            - source_ids
            account_ids:
            - account_ids
            - account_ids
            mobile_phone: +12345678901
            raw: +123 4567 8901
            masked_phone: +12345****01
            source: INTERNET_BANKING
            other_phone: +12345678901
          - source_ids:
            - source_ids
            - source_ids
            account_ids:
            - account_ids
            - account_ids
            mobile_phone: +12345678901
            raw: +123 4567 8901
            masked_phone: +12345****01
            source: INTERNET_BANKING
            other_phone: +12345678901
          addresses:
          - building_name: Building A
            street_address: 221B Baker Street
            country: United Kingdom
            account_ids:
            - account_ids
            - account_ids
            city: London
            raw: 221B Baker Street, Westminster, London
            floor_number: "2"
            full_address: 221B Baker Street, Westminster, London
            ward: Sheung Wan
            source: INTERNET_BANKING
            street_name: Baker Street
            source_ids:
            - source_ids
            - source_ids
            unit_number: 221B
            province: Westminster
            district: Marleybone
            street_number: 221B
            postal_code: NW1 6XE
          - building_name: Building A
            street_address: 221B Baker Street
            country: United Kingdom
            account_ids:
            - account_ids
            - account_ids
            city: London
            raw: 221B Baker Street, Westminster, London
            floor_number: "2"
            full_address: 221B Baker Street, Westminster, London
            ward: Sheung Wan
            source: INTERNET_BANKING
            street_name: Baker Street
            source_ids:
            - source_ids
            - source_ids
            unit_number: 221B
            province: Westminster
            district: Marleybone
            street_number: 221B
            postal_code: NW1 6XE
          names:
          - source_ids:
            - source_ids
            - source_ids
            full_name: John Maximus Doe
            account_ids:
            - account_ids
            - account_ids
            raw: John Maximus Doe
            last_name: Doe
            other_name: Maximus
            source: INTERNET_BANKING
            first_name: John
          - source_ids:
            - source_ids
            - source_ids
            full_name: John Maximus Doe
            account_ids:
            - account_ids
            - account_ids
            raw: John Maximus Doe
            last_name: Doe
            other_name: Maximus
            source: INTERNET_BANKING
            first_name: John
          date_of_births:
          - source_ids:
            - source_ids
            - source_ids
            account_ids:
            - account_ids
            - account_ids
            date_of_birth: 1999-01-22
            raw: 1999-01-22
            masked_date_of_birth: XXXX-01-22
            source: INTERNET_BANKING
          - source_ids:
            - source_ids
            - source_ids
            account_ids:
            - account_ids
            - account_ids
            date_of_birth: 1999-01-22
            raw: 1999-01-22
            masked_date_of_birth: XXXX-01-22
            source: INTERNET_BANKING
        login_identity:
          login_identity_id: login_identity_id
          last_session_id: last_session_id
          status: LINKING
      properties:
        identity:
          $ref: '#/components/schemas/Identity'
        login_identity:
          $ref: '#/components/schemas/LoginIdentityShort'
        institution:
          $ref: '#/components/schemas/InstitutionShort'
      type: object
    Identity:
      example:
        emails:
        - source_ids:
          - source_ids
          - source_ids
          account_ids:
          - account_ids
          - account_ids
          raw: example123@example.com
          source: INTERNET_BANKING
          email: example123@example.com
          masked_email: exam******@example.com
        - source_ids:
          - source_ids
          - source_ids
          account_ids:
          - account_ids
          - account_ids
          raw: example123@example.com
          source: INTERNET_BANKING
          email: example123@example.com
          masked_email: exam******@example.com
        phone_numbers:
        - source_ids:
          - source_ids
          - source_ids
          account_ids:
          - account_ids
          - account_ids
          mobile_phone: +12345678901
          raw: +123 4567 8901
          masked_phone: +12345****01
          source: INTERNET_BANKING
          other_phone: +12345678901
        - source_ids:
          - source_ids
          - source_ids
          account_ids:
          - account_ids
          - account_ids
          mobile_phone: +12345678901
          raw: +123 4567 8901
          masked_phone: +12345****01
          source: INTERNET_BANKING
          other_phone: +12345678901
        addresses:
        - building_name: Building A
          street_address: 221B Baker Street
          country: United Kingdom
          account_ids:
          - account_ids
          - account_ids
          city: London
          raw: 221B Baker Street, Westminster, London
          floor_number: "2"
          full_address: 221B Baker Street, Westminster, London
          ward: Sheung Wan
          source: INTERNET_BANKING
          street_name: Baker Street
          source_ids:
          - source_ids
          - source_ids
          unit_number: 221B
          province: Westminster
          district: Marleybone
          street_number: 221B
          postal_code: NW1 6XE
        - building_name: Building A
          street_address: 221B Baker Street
          country: United Kingdom
          account_ids:
          - account_ids
          - account_ids
          city: London
          raw: 221B Baker Street, Westminster, London
          floor_number: "2"
          full_address: 221B Baker Street, Westminster, London
          ward: Sheung Wan
          source: INTERNET_BANKING
          street_name: Baker Street
          source_ids:
          - source_ids
          - source_ids
          unit_number: 221B
          province: Westminster
          district: Marleybone
          street_number: 221B
          postal_code: NW1 6XE
        names:
        - source_ids:
          - source_ids
          - source_ids
          full_name: John Maximus Doe
          account_ids:
          - account_ids
          - account_ids
          raw: John Maximus Doe
          last_name: Doe
          other_name: Maximus
          source: INTERNET_BANKING
          first_name: John
        - source_ids:
          - source_ids
          - source_ids
          full_name: John Maximus Doe
          account_ids:
          - account_ids
          - account_ids
          raw: John Maximus Doe
          last_name: Doe
          other_name: Maximus
          source: INTERNET_BANKING
          first_name: John
        date_of_births:
        - source_ids:
          - source_ids
          - source_ids
          account_ids:
          - account_ids
          - account_ids
          date_of_birth: 1999-01-22
          raw: 1999-01-22
          masked_date_of_birth: XXXX-01-22
          source: INTERNET_BANKING
        - source_ids:
          - source_ids
          - source_ids
          account_ids:
          - account_ids
          - account_ids
          date_of_birth: 1999-01-22
          raw: 1999-01-22
          masked_date_of_birth: XXXX-01-22
          source: INTERNET_BANKING
      properties:
        names:
          items:
            $ref: '#/components/schemas/IdentityName'
          type: array
        addresses:
          items:
            $ref: '#/components/schemas/IdentityAddress'
          type: array
        emails:
          items:
            $ref: '#/components/schemas/IdentityEmail'
          type: array
        phone_numbers:
          items:
            $ref: '#/components/schemas/IdentityPhoneNumber'
          type: array
        date_of_births:
          items:
            $ref: '#/components/schemas/IdentityDateOfBirth'
          type: array
      type: object
    ListAccountsResponse:
      example:
        institution:
          portal_name: Personal Internet Banking
          countries:
          - HKG
          institution_name: Mock Bank
          institution_id: "123"
        login_identity:
          login_identity_id: login_identity_id
          last_session_id: last_session_id
          status: LINKING
        accounts:
        - country: HKG
          account_currency: HKD
          account_type:
            subtype: SAVINGS
            type: DEPOSIT
          account_holder_name: John Doe
          account_sub_type: TIME_DEPOSIT
          created_at: 2000-01-23T04:56:07.000+00:00
          account_nickname: Emergency Fund
          is_parent: false
          statement_balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          updated_at: 2000-01-23T04:56:07.000+00:00
          balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          is_excluded: false
          group_id: 03504faef9ad3ac048c6a43efa6db7ba1c5239a856536839d87ac949559e7ceb
          account_name: HKD Savings
          account_number_masked: 123XXXXXX89
          is_closed: false
        - country: HKG
          account_currency: HKD
          account_type:
            subtype: SAVINGS
            type: DEPOSIT
          account_holder_name: John Doe
          account_sub_type: TIME_DEPOSIT
          created_at: 2000-01-23T04:56:07.000+00:00
          account_nickname: Emergency Fund
          is_parent: false
          statement_balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          updated_at: 2000-01-23T04:56:07.000+00:00
          balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          is_excluded: false
          group_id: 03504faef9ad3ac048c6a43efa6db7ba1c5239a856536839d87ac949559e7ceb
          account_name: HKD Savings
          account_number_masked: 123XXXXXX89
          is_closed: false
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        login_identity:
          $ref: '#/components/schemas/LoginIdentityShort'
        institution:
          $ref: '#/components/schemas/InstitutionShort'
      type: object
    RefreshRequest:
      example:
        refresh_token: refresh_token
      properties:
        refresh_token:
          type: string
      required:
      - refresh_token
      type: object
    Account:
      example:
        country: HKG
        account_currency: HKD
        account_type:
          subtype: SAVINGS
          type: DEPOSIT
        account_holder_name: John Doe
        account_sub_type: TIME_DEPOSIT
        created_at: 2000-01-23T04:56:07.000+00:00
        account_nickname: Emergency Fund
        is_parent: false
        statement_balance:
          raw: "69.00"
          currency: HKD
          value: 69.0
        account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        updated_at: 2000-01-23T04:56:07.000+00:00
        balance:
          raw: "69.00"
          currency: HKD
          value: 69.0
        is_excluded: false
        group_id: 03504faef9ad3ac048c6a43efa6db7ba1c5239a856536839d87ac949559e7ceb
        account_name: HKD Savings
        account_number_masked: 123XXXXXX89
        is_closed: false
      properties:
        account_id:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        group_id:
          description: The SHA3-256 hash of the account number, salted with the loginIdentityId
          example: 03504faef9ad3ac048c6a43efa6db7ba1c5239a856536839d87ac949559e7ceb
          type: string
        account_holder_name:
          example: John Doe
          type: string
        account_name:
          example: HKD Savings
          type: string
        account_nickname:
          example: Emergency Fund
          type: string
        account_sub_type:
          example: TIME_DEPOSIT
          type: string
        account_number_masked:
          example: 123XXXXXX89
          type: string
        country:
          example: HKG
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        account_currency:
          example: HKD
          type: string
        balance:
          $ref: '#/components/schemas/CurrencyAmount'
        statement_balance:
          $ref: '#/components/schemas/CurrencyAmount'
        is_parent:
          example: false
          type: boolean
        is_closed:
          example: false
          type: boolean
        is_excluded:
          example: false
          type: boolean
        account_type:
          $ref: '#/components/schemas/AccountType'
      required:
      - account_id
      - account_name
      - group_id
      - is_closed
      - is_excluded
      - is_parent
      type: object
    BalanceHistory:
      example:
        date: 2021-10-27
        amount: 69.0
        currency: HKD
      properties:
        date:
          description: The date the balance was recorded
          example: 2021-10-27
          type: string
        amount:
          description: The end of day balance for this account on this specific date
          example: 69.0
          type: number
        currency:
          description: The currency the balance
          example: HKD
          type: string
      required:
      - amount
      - currency
      - date
      type: object
    AccountNumber:
      example:
        number: "1234567890123"
        account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        raw: 123-4567890-123
      properties:
        account_id:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        number:
          example: "1234567890123"
          type: string
        raw:
          example: 123-4567890-123
          type: string
      required:
      - account_id
      - raw
      type: object
    GenericAmount:
      example:
        unit: UNI$
        raw: "69.00"
        value: 69.0
      properties:
        unit:
          example: UNI$
          type: string
        value:
          example: 69.0
          type: number
        raw:
          example: "69.00"
          type: string
      required:
      - value
      type: object
    CurrencyAmount:
      example:
        raw: "69.00"
        currency: HKD
        value: 69.0
      properties:
        currency:
          example: HKD
          type: string
        value:
          example: 69.0
          type: number
        raw:
          example: "69.00"
          type: string
      required:
      - value
      type: object
    Transaction:
      example:
        transaction_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        amount:
          raw: "69.00"
          currency: HKD
          value: 69.0
        transfer_details: '{}'
        merchant_name: FUEL COFFEE
        description: Latte
        created_at: 2000-01-23T04:56:07.000+00:00
        transaction_type: OTHER
        account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        category_id: OTHER
        updated_at: 2000-01-23T04:56:07.000+00:00
        transaction_state: ACTIVE
        location: Pacific Place
        categories:
        - TRANSFER
        category: OTHER
        category_predictions:
        - categories:
          - TRANSFER
          source: TRANSACTION_RULES
          source_id: source_id
        - categories:
          - TRANSFER
          source: TRANSACTION_RULES
          source_id: source_id
        posted_date: 2020-10-10T00:00:00.000+0000
        is_pending: false
        status: COMPLETED
      properties:
        transaction_id:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        account_id:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        transaction_state:
          example: ACTIVE
          type: string
        transaction_type:
          example: OTHER
          type: string
        category:
          description: (Deprecated)
          example: OTHER
          type: string
        category_id:
          description: (Deprecated)
          example: OTHER
          type: string
        merchant_name:
          example: FUEL COFFEE
          type: string
        description:
          example: Latte
          type: string
        location:
          example: Pacific Place
          type: string
        is_pending:
          example: false
          type: boolean
        status:
          example: COMPLETED
          type: string
        posted_date:
          description: YYYY-MM-DD
          example: 2020-10-10T00:00:00.000+0000
          type: string
        amount:
          $ref: '#/components/schemas/CurrencyAmount'
        transfer_details:
          description: (Deprecated)
          properties: {}
          type: object
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        categories:
          description: Array of category labels
          example:
          - TRANSFER
          items:
            type: string
          type: array
        category_predictions:
          items:
            $ref: '#/components/schemas/categoryPredictions'
          type: array
      required:
      - is_pending
      type: object
    categoryPredictions:
      example:
        categories:
        - TRANSFER
        source: TRANSACTION_RULES
        source_id: source_id
      properties:
        categories:
          example:
          - TRANSFER
          items:
            type: string
          type: array
        source:
          example: TRANSACTION_RULES
          type: string
        source_id:
          type: string
      type: object
    ListTransactionsResponse:
      example:
        institution:
          portal_name: Personal Internet Banking
          countries:
          - HKG
          institution_name: Mock Bank
          institution_id: "123"
        login_identity:
          login_identity_id: login_identity_id
          last_session_id: last_session_id
          status: LINKING
        total_transactions: 0
        accounts:
        - country: HKG
          account_currency: HKD
          account_type:
            subtype: SAVINGS
            type: DEPOSIT
          account_holder_name: John Doe
          account_sub_type: TIME_DEPOSIT
          created_at: 2000-01-23T04:56:07.000+00:00
          account_nickname: Emergency Fund
          is_parent: false
          statement_balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          updated_at: 2000-01-23T04:56:07.000+00:00
          balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          is_excluded: false
          group_id: 03504faef9ad3ac048c6a43efa6db7ba1c5239a856536839d87ac949559e7ceb
          account_name: HKD Savings
          account_number_masked: 123XXXXXX89
          is_closed: false
        - country: HKG
          account_currency: HKD
          account_type:
            subtype: SAVINGS
            type: DEPOSIT
          account_holder_name: John Doe
          account_sub_type: TIME_DEPOSIT
          created_at: 2000-01-23T04:56:07.000+00:00
          account_nickname: Emergency Fund
          is_parent: false
          statement_balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          updated_at: 2000-01-23T04:56:07.000+00:00
          balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          is_excluded: false
          group_id: 03504faef9ad3ac048c6a43efa6db7ba1c5239a856536839d87ac949559e7ceb
          account_name: HKD Savings
          account_number_masked: 123XXXXXX89
          is_closed: false
        transactions:
        - transaction_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          amount:
            raw: "69.00"
            currency: HKD
            value: 69.0
          transfer_details: '{}'
          merchant_name: FUEL COFFEE
          description: Latte
          created_at: 2000-01-23T04:56:07.000+00:00
          transaction_type: OTHER
          account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          category_id: OTHER
          updated_at: 2000-01-23T04:56:07.000+00:00
          transaction_state: ACTIVE
          location: Pacific Place
          categories:
          - TRANSFER
          category: OTHER
          category_predictions:
          - categories:
            - TRANSFER
            source: TRANSACTION_RULES
            source_id: source_id
          - categories:
            - TRANSFER
            source: TRANSACTION_RULES
            source_id: source_id
          posted_date: 2020-10-10T00:00:00.000+0000
          is_pending: false
          status: COMPLETED
        - transaction_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          amount:
            raw: "69.00"
            currency: HKD
            value: 69.0
          transfer_details: '{}'
          merchant_name: FUEL COFFEE
          description: Latte
          created_at: 2000-01-23T04:56:07.000+00:00
          transaction_type: OTHER
          account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          category_id: OTHER
          updated_at: 2000-01-23T04:56:07.000+00:00
          transaction_state: ACTIVE
          location: Pacific Place
          categories:
          - TRANSFER
          category: OTHER
          category_predictions:
          - categories:
            - TRANSFER
            source: TRANSACTION_RULES
            source_id: source_id
          - categories:
            - TRANSFER
            source: TRANSACTION_RULES
            source_id: source_id
          posted_date: 2020-10-10T00:00:00.000+0000
          is_pending: false
          status: COMPLETED
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        transactions:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
        login_identity:
          $ref: '#/components/schemas/LoginIdentityShort'
        institution:
          $ref: '#/components/schemas/InstitutionShort'
        total_transactions:
          type: integer
      required:
      - total_transactions
      type: object
    ListInstitutionsResponse:
      items:
        $ref: '#/components/schemas/Institution'
      type: array
    IdentityName:
      example:
        source_ids:
        - source_ids
        - source_ids
        full_name: John Maximus Doe
        account_ids:
        - account_ids
        - account_ids
        raw: John Maximus Doe
        last_name: Doe
        other_name: Maximus
        source: INTERNET_BANKING
        first_name: John
      properties:
        raw:
          example: John Maximus Doe
          type: string
        full_name:
          example: John Maximus Doe
          type: string
        first_name:
          example: John
          type: string
        last_name:
          example: Doe
          type: string
        other_name:
          example: Maximus
          type: string
        source:
          example: INTERNET_BANKING
          type: string
        source_ids:
          items:
            type: string
          type: array
        account_ids:
          items:
            type: string
          type: array
      type: object
    IdentityAddress:
      example:
        building_name: Building A
        street_address: 221B Baker Street
        country: United Kingdom
        account_ids:
        - account_ids
        - account_ids
        city: London
        raw: 221B Baker Street, Westminster, London
        floor_number: "2"
        full_address: 221B Baker Street, Westminster, London
        ward: Sheung Wan
        source: INTERNET_BANKING
        street_name: Baker Street
        source_ids:
        - source_ids
        - source_ids
        unit_number: 221B
        province: Westminster
        district: Marleybone
        street_number: 221B
        postal_code: NW1 6XE
      properties:
        raw:
          example: 221B Baker Street, Westminster, London
          type: string
        full_address:
          example: 221B Baker Street, Westminster, London
          type: string
        unit_number:
          example: 221B
          type: string
        floor_number:
          example: "2"
          type: string
        building_name:
          example: Building A
          type: string
        street_number:
          example: 221B
          type: string
        street_name:
          example: Baker Street
          type: string
        city:
          example: London
          type: string
        district:
          example: Marleybone
          type: string
        ward:
          example: Sheung Wan
          type: string
        street_address:
          example: 221B Baker Street
          type: string
        province:
          example: Westminster
          type: string
        country:
          example: United Kingdom
          type: string
        postal_code:
          example: NW1 6XE
          type: string
        source:
          example: INTERNET_BANKING
          type: string
        source_ids:
          items:
            type: string
          type: array
        account_ids:
          items:
            type: string
          type: array
      type: object
    IdentityEmail:
      example:
        source_ids:
        - source_ids
        - source_ids
        account_ids:
        - account_ids
        - account_ids
        raw: example123@example.com
        source: INTERNET_BANKING
        email: example123@example.com
        masked_email: exam******@example.com
      properties:
        raw:
          example: example123@example.com
          type: string
        email:
          example: example123@example.com
          type: string
        masked_email:
          example: exam******@example.com
          type: string
        source:
          example: INTERNET_BANKING
          type: string
        source_ids:
          items:
            type: string
          type: array
        account_ids:
          items:
            type: string
          type: array
      type: object
    IdentityPhoneNumber:
      example:
        source_ids:
        - source_ids
        - source_ids
        account_ids:
        - account_ids
        - account_ids
        mobile_phone: +12345678901
        raw: +123 4567 8901
        masked_phone: +12345****01
        source: INTERNET_BANKING
        other_phone: +12345678901
      properties:
        raw:
          example: +123 4567 8901
          type: string
        mobile_phone:
          example: +12345678901
          type: string
        other_phone:
          example: +12345678901
          type: string
        masked_phone:
          example: +12345****01
          type: string
        source:
          example: INTERNET_BANKING
          type: string
        source_ids:
          items:
            type: string
          type: array
        account_ids:
          items:
            type: string
          type: array
      type: object
    IdentityDateOfBirth:
      example:
        source_ids:
        - source_ids
        - source_ids
        account_ids:
        - account_ids
        - account_ids
        date_of_birth: 1999-01-22
        raw: 1999-01-22
        masked_date_of_birth: XXXX-01-22
        source: INTERNET_BANKING
      properties:
        raw:
          example: 1999-01-22
          type: string
        date_of_birth:
          example: 1999-01-22
          type: string
        masked_date_of_birth:
          example: XXXX-01-22
          type: string
        source:
          example: INTERNET_BANKING
          type: string
        source_ids:
          items:
            type: string
          type: array
        account_ids:
          items:
            type: string
          type: array
      type: object
    InstitutionShort:
      example:
        portal_name: Personal Internet Banking
        countries:
        - HKG
        institution_name: Mock Bank
        institution_id: "123"
      properties:
        institution_id:
          example: "123"
          type: string
        countries:
          example:
          - HKG
          items:
            type: string
          type: array
        institution_name:
          example: Mock Bank
          type: string
        portal_name:
          example: Personal Internet Banking
          type: string
      type: object
    Institution:
      example:
        portal_name: Personal Internet Banking
        login_methods:
        - is_default_method: true
          name: SMS OTP
          id: SMS OTP
          status: SUPPORTED
          login_fields:
          - name: Password
            type: password
            key: password
          - name: Password
            type: password
            key: password
        - is_default_method: true
          name: SMS OTP
          id: SMS OTP
          status: SUPPORTED
          login_fields:
          - name: Password
            type: password
            key: password
          - name: Password
            type: password
            key: password
        institution_type: BANK
        color: '#FFFFFF'
        parent_institution_name: Parent Mock Bank
        countries:
        - HKG
        institution_name: Mock Bank
        login_details: '{}'
        institution_id: "123"
        tags:
        - real
        login_actions:
        - buttons:
          - name: name
            type: SUBMIT
            value: Submit One time password
          - name: name
            type: SUBMIT
            value: Submit One time password
          name: MOBILE_OTP
          messages:
          - name: name
            type: type
            value: value
          - name: name
            type: type
            value: value
          type: ACTION
          fields:
          - name: name
            options:
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            label: label
            placeholder: placeholder
            type: SELECT
          - name: name
            options:
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            label: label
            placeholder: placeholder
            type: SELECT
        - buttons:
          - name: name
            type: SUBMIT
            value: Submit One time password
          - name: name
            type: SUBMIT
            value: Submit One time password
          name: MOBILE_OTP
          messages:
          - name: name
            type: type
            value: value
          - name: name
            type: type
            value: value
          type: ACTION
          fields:
          - name: name
            options:
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            label: label
            placeholder: placeholder
            type: SELECT
          - name: name
            options:
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            label: label
            placeholder: placeholder
            type: SELECT
        products_supported:
        - ACCOUNTS
        - TRANSACTIONS
        - STATEMENTS
        - ACCOUNT_NUMBERS
        - IDENTITY
        login_url: https://example.com/login
        user_type:
        - INDIVIDUAL
        - INDIVIDUAL
        updated_at: 2000-01-23T04:56:07.000+00:00
        payment_info:
          currencies_supported:
          - HKD
          - CNY
          other_info:
            bank_code: bank_code
          payments_supported:
          - MANDATE
          - DEBIT_AUTHORIZATION
        status_details: {}
        status: SUPPORTED
      properties:
        institution_id:
          example: "123"
          type: string
        countries:
          example:
          - HKG
          items:
            type: string
          type: array
        tags:
          example:
          - real
          items:
            enum:
            - real
            - test
            type: string
          type: array
        institution_type:
          enum:
          - BANK
          - WALLET
          - TEST
          example: BANK
          type: string
        products_supported:
          example:
          - ACCOUNTS
          - TRANSACTIONS
          - STATEMENTS
          - ACCOUNT_NUMBERS
          - IDENTITY
          items:
            enum:
            - ACCOUNTS
            - TRANSACTIONS
            - STATEMENTS
            - ACCOUNT_NUMBERS
            - IDENTITY
            type: string
          type: array
        parent_institution_name:
          example: Parent Mock Bank
          type: string
        institution_name:
          example: Mock Bank
          type: string
        portal_name:
          example: Personal Internet Banking
          type: string
        user_type:
          items:
            enum:
            - PERSONAL
            - INDIVIDUAL
            - BUSINESS
            example: INDIVIDUAL
            type: string
          type: array
        status:
          enum:
          - SUPPORTED
          - ALPHA
          - BETA
          example: SUPPORTED
          type: string
        status_details:
          example: {}
          properties: {}
          type: object
        login_url:
          example: https://example.com/login
          type: string
        login_details:
          type: object
          x-go-type:
            type: LoginDetails
            import:
              package: gitlab.com/finverse/gitops/applications/api/models/custom
        login_methods:
          items:
            $ref: '#/components/schemas/LoginMethod'
          type: array
        payment_info:
          $ref: '#/components/schemas/PaymentInfo'
        color:
          example: '#FFFFFF'
          type: string
        updated_at:
          format: date-time
          type: string
        login_actions:
          items:
            $ref: '#/components/schemas/LoginAction'
          type: array
      required:
      - countries
      - institution_id
      - institution_name
      - institution_type
      - login_details
      - products_supported
      - status
      - user_type
      type: object
    LoginMethod:
      example:
        is_default_method: true
        name: SMS OTP
        id: SMS OTP
        status: SUPPORTED
        login_fields:
        - name: Password
          type: password
          key: password
        - name: Password
          type: password
          key: password
      properties:
        id:
          example: SMS OTP
          type: string
        name:
          example: SMS OTP
          type: string
        is_default_method:
          example: true
          nullable: true
          type: boolean
        status:
          enum:
          - SUPPORTED
          - ALPHA
          - BETA
          example: SUPPORTED
          type: string
        login_fields:
          items:
            $ref: '#/components/schemas/LoginField'
          type: array
      type: object
    LoginAction:
      example:
        buttons:
        - name: name
          type: SUBMIT
          value: Submit One time password
        - name: name
          type: SUBMIT
          value: Submit One time password
        name: MOBILE_OTP
        messages:
        - name: name
          type: type
          value: value
        - name: name
          type: type
          value: value
        type: ACTION
        fields:
        - name: name
          options:
          - label: joe-iphone-13
            value: Joe's iPhone 13 Pro Max
          - label: joe-iphone-13
            value: Joe's iPhone 13 Pro Max
          label: label
          placeholder: placeholder
          type: SELECT
        - name: name
          options:
          - label: joe-iphone-13
            value: Joe's iPhone 13 Pro Max
          - label: joe-iphone-13
            value: Joe's iPhone 13 Pro Max
          label: label
          placeholder: placeholder
          type: SELECT
      properties:
        type:
          example: ACTION
          type: string
        name:
          example: MOBILE_OTP
          type: string
        messages:
          items:
            $ref: '#/components/schemas/UserMessage'
          type: array
        fields:
          items:
            $ref: '#/components/schemas/UserField'
          type: array
        buttons:
          items:
            $ref: '#/components/schemas/UserButton'
          type: array
      type: object
    LoginField:
      example:
        name: Password
        type: password
        key: password
      properties:
        key:
          example: password
          type: string
        name:
          example: Password
          type: string
        type:
          description: could be password, text, number
          example: password
          type: string
      type: object
    TokenRequest:
      example:
        grant_type: grant_type
        client_secret: client_secret
        client_id: client_id
      properties:
        client_id:
          maxLength: 26
          minLength: 26
          type: string
        client_secret:
          maxLength: 80
          minLength: 64
          type: string
        grant_type:
          description: support only client_credentials
          type: string
      required:
      - client_id
      - client_secret
      - grant_type
      type: object
    TokenResponse:
      example:
        access_token: access_token
        token_type: token_type
        expires_in: 0.8008281904610115
        issued_at: 2000-01-23T04:56:07.000+00:00
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          description: seconds
          format: int64
          type: number
        issued_at:
          format: date-time
          type: string
      required:
      - access_token
      - expires_in
      - issued_at
      - token_type
      type: object
    LinkTokenRequest:
      example:
        institution_status: alpha beta supported
        link_mode: real
        payment_instruction_id: payment_instruction_id
        response_type: code
        language: en
        code_challenge_method: code-challenge-method
        countries:
        - HKG
        - SGP
        client_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        response_mode: form_post
        institution_id: hsbc-hk
        products_supported:
        - ACCOUNTS
        - TRANSACTIONS
        customization_id: AULIDGOESHERE
        user_type:
        - PERSONAL
        grant_type: grant_type
        user_id: 01BX5ZZKBKACTAV9WEVGEMMVRY
        scope: comma,separated,scopes
        automatic_data_refresh: "ON"
        redirect_uri: https://example.com/callback
        state: user-state-passed
        login_identity_id: uhdasidasodaso
        ui_mode: redirect
        code_challenge: code-challenge
        products_requested:
        - ACCOUNTS
        - TRANSACTIONS
        - PAYMENTS
      properties:
        grant_type:
          description: support only client_credentials
          type: string
        response_type:
          example: code
          type: string
        response_mode:
          example: form_post
          type: string
        user_id:
          description: required when creating new Link, ignored when updating existing
            Link
          example: 01BX5ZZKBKACTAV9WEVGEMMVRY
          minLength: 4
          type: string
        client_id:
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          minLength: 4
          type: string
        redirect_uri:
          example: https://example.com/callback
          minLength: 4
          type: string
        state:
          example: user-state-passed
          type: string
        scope:
          example: comma,separated,scopes
          type: string
        link_mode:
          description: Space separated list of the tags of the institutions to view.
          example: real
          type: string
        ui_mode:
          description: The UI mode link is intended to be used in - "iframe", "auto_redirect",
            "redirect" or "standalone"
          enum:
          - iframe
          - redirect
          - auto_redirect
          - standalone
          example: redirect
          type: string
        language:
          description: ISO639-1 language code. Language to display when user open
            the link, default to English (en) if not specified
          example: en
          type: string
        code_challenge:
          example: code-challenge
          type: string
        code_challenge_method:
          example: code-challenge-method
          type: string
        login_identity_id:
          description: use this to update a specific login identity
          example: uhdasidasodaso
          type: string
        customization_id:
          description: The customization id if the customer wishes to embed it into
            link token for spawning link with their choice of stuffs
          example: AULIDGOESHERE
          type: string
        institution_id:
          description: Institution to preselect
          example: hsbc-hk
          type: string
        countries:
          description: institution's country filter
          example:
          - HKG
          - SGP
          items:
            type: string
          type: array
        user_type:
          description: institution's supported user_type filter
          example:
          - PERSONAL
          items:
            type: string
          type: array
        products_supported:
          description: institution's supported product filter
          example:
          - ACCOUNTS
          - TRANSACTIONS
          items:
            type: string
          type: array
        products_requested:
          description: products that is requested
          example:
          - ACCOUNTS
          - TRANSACTIONS
          - PAYMENTS
          items:
            type: string
          type: array
        payment_instruction_id:
          description: The identifier returned after creating payment instruction
          example: payment_instruction_id
          type: string
        automatic_data_refresh:
          description: Controls the behavior of the automatic data refresh checkbox
          enum:
          - "ON"
          - "OFF"
          - FORCED_ON
          type: string
        institution_status:
          description: institution's status filter
          example: alpha beta supported
          type: string
      required:
      - client_id
      - grant_type
      - redirect_uri
      - response_mode
      - response_type
      type: object
    LinkTokenResponse:
      example:
        access_token: access_token
        link_url: https://link.dev.finverse.net/onboarding?token=dasdsa8erhiu7rey78r
        token_type: token_type
        expires_in: 0.8008281904610115
        issued_at: 2000-01-23T04:56:07.000+00:00
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          description: seconds
          format: int64
          type: number
        issued_at:
          format: date-time
          type: string
        link_url:
          example: https://link.dev.finverse.net/onboarding?token=dasdsa8erhiu7rey78r
          type: string
      required:
      - access_token
      - expires_in
      - issued_at
      - link_url
      - token_type
      type: object
    LinkRequest:
      example:
        payment_instruction_id: payment_instruction_id
        store_credential: true
        consent: true
        products_requested:
        - ACCOUNTS
        - TRANSACTIONS
        - PAYMENTS
        institution_id: ez-bank
      properties:
        institution_id:
          example: ez-bank
          minLength: 2
          type: string
        store_credential:
          example: true
          type: boolean
        consent:
          description: this is a mandatory field
          example: true
          nullable: true
          type: boolean
        products_requested:
          description: products that is requested
          example:
          - ACCOUNTS
          - TRANSACTIONS
          - PAYMENTS
          items:
            type: string
          type: array
        payment_instruction_id:
          description: The identifier returned after creating payment instruction
          example: payment_instruction_id
          type: string
      required:
      - institution_id
      - store_credential
      type: object
    ConfirmPaymentResponse:
      example:
        success: true
      properties:
        success:
          example: true
          type: boolean
      required:
      - success
      type: object
    CreatePaymentLinkMandateRequest:
      example:
        sender_type: INDIVIDUAL
        payment_attempt_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
      properties:
        payment_attempt_id:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        sender_type:
          description: The sender type of the mandate
          enum:
          - INDIVIDUAL
          - BUSINESS
          type: string
      required:
      - payment_attempt_id
      - sender_type
      type: object
    CreatePaymentLinkMandateResponse:
      example:
        mandate_link_token:
          access_token: access_token
          link_url: link_url
          qr_code: qr_code
          token_type: Bearer
          expires_in: 0
      properties:
        mandate_link_token:
          $ref: '#/components/schemas/PaymentLinkTokenResponse'
      required:
      - mandate_link_token
      type: object
    CreatePaymentLinkCardPaymentResponse:
      example:
        card_processor_redirect_uri: card_processor_redirect_uri
        payment_id: payment_id
      properties:
        card_processor_redirect_uri:
          description: URL to redirect to for making the card payment (e.g. Stripe)
          type: string
        payment_id:
          description: Finverse Payment ID
          type: string
      required:
      - card_processor_redirect_uri
      type: object
    CreateFpsTokenResponse:
      example:
        fps_token:
          access_token: access_token
          link_url: link_url
          qr_code: qr_code
          token_type: Bearer
          expires_in: 0
      properties:
        fps_token:
          $ref: '#/components/schemas/PaymentLinkTokenResponse'
      required:
      - fps_token
      type: object
    PaymentLinkTokenResponse:
      example:
        access_token: access_token
        link_url: link_url
        qr_code: qr_code
        token_type: Bearer
        expires_in: 0
      properties:
        access_token:
          description: Short-lived access-token to interact with Finverse Link
          type: string
        expires_in:
          description: Access token validity duration (in seconds)
          format: int64
          type: integer
        link_url:
          description: URL to launch Finverse Link to authorize the mandate
          type: string
        qr_code:
          description: The FPS QR code in base64
          type: string
        token_type:
          enum:
          - Bearer
          type: string
      required:
      - access_token
      - expires_in
      - link_url
      - token_type
      type: object
    ApiLinkRequest:
      example:
        user_id: user_id
        payment_instruction_id: payment_instruction_id
        encrypted_credentials:
          initializationVector: initializationVector
          ciphertext: ciphertext
          envelopeEncryptionKey: envelopeEncryptionKey
          messageAuthenticationCode: messageAuthenticationCode
          keyId: keyId
        store_credentials: true
        consent: true
        products_requested:
        - ACCOUNTS
        - TRANSACTIONS
        - PAYMENTS
        institution_id: ez-bank
      properties:
        institution_id:
          example: ez-bank
          minLength: 2
          type: string
        user_id:
          description: Identifier for end user
          type: string
        consent:
          description: this is a mandatory field
          example: true
          nullable: true
          type: boolean
        products_requested:
          description: products that are requested
          example:
          - ACCOUNTS
          - TRANSACTIONS
          - PAYMENTS
          items:
            type: string
          type: array
        store_credentials:
          example: true
          type: boolean
        encrypted_credentials:
          $ref: '#/components/schemas/EncryptedPayload'
        payment_instruction_id:
          type: string
      required:
      - consent
      - encrypted_credentials
      - institution_id
      - products_requested
      - store_credentials
      - user_id
      type: object
    ApiRelinkRequest:
      example:
        encrypted_credentials:
          initializationVector: initializationVector
          ciphertext: ciphertext
          envelopeEncryptionKey: envelopeEncryptionKey
          messageAuthenticationCode: messageAuthenticationCode
          keyId: keyId
        store_credential: true
        consent: true
      properties:
        store_credential:
          type: boolean
        consent:
          type: boolean
        encrypted_credentials:
          $ref: '#/components/schemas/EncryptedPayload'
      required:
      - consent
      - encrypted_credentials
      type: object
    RelinkRequest:
      example:
        store_credential: true
        consent: true
      properties:
        store_credential:
          example: true
          type: boolean
        consent:
          description: this is a mandatory field
          example: true
          nullable: true
          type: boolean
      required:
      - store_credential
      type: object
    ActionRequest:
      example:
        action_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        encrypted_credentials:
          initializationVector: initializationVector
          ciphertext: ciphertext
          envelopeEncryptionKey: envelopeEncryptionKey
          messageAuthenticationCode: messageAuthenticationCode
          keyId: keyId
      properties:
        encrypted_credentials:
          $ref: '#/components/schemas/EncryptedPayload'
        action_id:
          description: The action id
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
      required:
      - action_id
      - encrypted_credentials
      type: object
    GetLoginIdentityByIdResponse:
      example:
        institution:
          portal_name: Personal Internet Banking
          countries:
          - HKG
          institution_name: Mock Bank
          institution_id: "123"
        login_identity:
          login_methods_available:
            havePassword: true
            haveSecret: true
          customer_app_id: customer_app_id
          permissions_expiry_date: 2000-01-23T04:56:07.000+00:00
          billing_details:
            billed_products:
            - billed_products
            - billed_products
          webhook: https://auth.example.com/callback
          last_success: 2000-01-23T04:56:07.000+00:00
          permissions_grant_date: 2000-01-23T04:56:07.000+00:00
          product_status:
            card_details:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            identity:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            income_estimation:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            payments:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            balance_history:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            statements:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            accounts:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            account_numbers:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            historical_transactions:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            online_transactions:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          created_at: 2000-01-23T04:56:07.000+00:00
          refresh:
            refresh_allowed: true
            credentials_stored: true
          error:
            code: 0
            details: Credentials are invalid. Please try again.
            type: INVALID_CREDENTIALS
            message: Credentials invalid
          last_session_id: last_session_id
          authentication_id: "123"
          institution_id: "123"
          linking_attempt_id: "123"
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: form_post
          permissions:
          - permissions
          - permissions
          authentication_status:
            last_successful_update: 2021-02-01T10:01:02.333Z
            last_update: 2021-02-01T10:01:02.333Z
            status_details: AUTHENTICATION_INITIALIZED
            status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          first_success: 2000-01-23T04:56:07.000+00:00
          login_identity_id: login_identity_id
          session_status: COMPLETED
          status_details:
            event_date: 2000-01-23T04:56:07.000+00:00
            event_name: event_name
          status: LINKING
      properties:
        login_identity:
          $ref: '#/components/schemas/LoginIdentity'
        institution:
          $ref: '#/components/schemas/InstitutionShort'
      type: object
    GetLoginIdentityHistoryResponse:
      example:
        login_identity:
          login_methods_available:
            havePassword: true
            haveSecret: true
          customer_app_id: customer_app_id
          permissions_expiry_date: 2000-01-23T04:56:07.000+00:00
          billing_details:
            billed_products:
            - billed_products
            - billed_products
          webhook: https://auth.example.com/callback
          last_success: 2000-01-23T04:56:07.000+00:00
          permissions_grant_date: 2000-01-23T04:56:07.000+00:00
          product_status:
            card_details:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            identity:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            income_estimation:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            payments:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            balance_history:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            statements:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            accounts:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            account_numbers:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            historical_transactions:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
            online_transactions:
              last_successful_update: 2021-02-01T10:01:02.333Z
              last_update: 2021-02-01T10:01:02.333Z
              status_details: AUTHENTICATION_INITIALIZED
              status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          created_at: 2000-01-23T04:56:07.000+00:00
          refresh:
            refresh_allowed: true
            credentials_stored: true
          error:
            code: 0
            details: Credentials are invalid. Please try again.
            type: INVALID_CREDENTIALS
            message: Credentials invalid
          last_session_id: last_session_id
          authentication_id: "123"
          institution_id: "123"
          linking_attempt_id: "123"
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: form_post
          permissions:
          - permissions
          - permissions
          authentication_status:
            last_successful_update: 2021-02-01T10:01:02.333Z
            last_update: 2021-02-01T10:01:02.333Z
            status_details: AUTHENTICATION_INITIALIZED
            status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          first_success: 2000-01-23T04:56:07.000+00:00
          login_identity_id: login_identity_id
          session_status: COMPLETED
          status_details:
            event_date: 2000-01-23T04:56:07.000+00:00
            event_name: event_name
          status: LINKING
        status_history:
        - event_date: 2000-01-23T04:56:07.000+00:00
          event_name: event_name
        - event_date: 2000-01-23T04:56:07.000+00:00
          event_name: event_name
      properties:
        login_identity:
          $ref: '#/components/schemas/LoginIdentity'
        status_history:
          items:
            $ref: '#/components/schemas/LoginIdentityStatusDetails'
          type: array
      type: object
    LoginIdentityStatusDetails:
      example:
        event_date: 2000-01-23T04:56:07.000+00:00
        event_name: event_name
      properties:
        event_date:
          format: date-time
          type: string
        event_name:
          type: string
      type: object
    LoginIdentityLoginMethodsAvailable:
      example:
        havePassword: true
        haveSecret: true
      properties:
        havePassword:
          type: boolean
        haveSecret:
          type: boolean
      type: object
    LoginIdentityBillingDetails:
      example:
        billed_products:
        - billed_products
        - billed_products
      properties:
        billed_products:
          items:
            type: string
          type: array
      type: object
    LoginIdentityShort:
      example:
        login_identity_id: login_identity_id
        last_session_id: last_session_id
        status: LINKING
      properties:
        login_identity_id:
          format: ulid
          type: string
        status:
          example: LINKING
          type: string
        last_session_id:
          format: ulid
          type: string
      type: object
    LoginIdentity:
      example:
        login_methods_available:
          havePassword: true
          haveSecret: true
        customer_app_id: customer_app_id
        permissions_expiry_date: 2000-01-23T04:56:07.000+00:00
        billing_details:
          billed_products:
          - billed_products
          - billed_products
        webhook: https://auth.example.com/callback
        last_success: 2000-01-23T04:56:07.000+00:00
        permissions_grant_date: 2000-01-23T04:56:07.000+00:00
        product_status:
          card_details:
            last_successful_update: 2021-02-01T10:01:02.333Z
            last_update: 2021-02-01T10:01:02.333Z
            status_details: AUTHENTICATION_INITIALIZED
            status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          identity:
            last_successful_update: 2021-02-01T10:01:02.333Z
            last_update: 2021-02-01T10:01:02.333Z
            status_details: AUTHENTICATION_INITIALIZED
            status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          income_estimation:
            last_successful_update: 2021-02-01T10:01:02.333Z
            last_update: 2021-02-01T10:01:02.333Z
            status_details: AUTHENTICATION_INITIALIZED
            status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          payments:
            last_successful_update: 2021-02-01T10:01:02.333Z
            last_update: 2021-02-01T10:01:02.333Z
            status_details: AUTHENTICATION_INITIALIZED
            status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          balance_history:
            last_successful_update: 2021-02-01T10:01:02.333Z
            last_update: 2021-02-01T10:01:02.333Z
            status_details: AUTHENTICATION_INITIALIZED
            status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          statements:
            last_successful_update: 2021-02-01T10:01:02.333Z
            last_update: 2021-02-01T10:01:02.333Z
            status_details: AUTHENTICATION_INITIALIZED
            status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          accounts:
            last_successful_update: 2021-02-01T10:01:02.333Z
            last_update: 2021-02-01T10:01:02.333Z
            status_details: AUTHENTICATION_INITIALIZED
            status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          account_numbers:
            last_successful_update: 2021-02-01T10:01:02.333Z
            last_update: 2021-02-01T10:01:02.333Z
            status_details: AUTHENTICATION_INITIALIZED
            status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          historical_transactions:
            last_successful_update: 2021-02-01T10:01:02.333Z
            last_update: 2021-02-01T10:01:02.333Z
            status_details: AUTHENTICATION_INITIALIZED
            status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          online_transactions:
            last_successful_update: 2021-02-01T10:01:02.333Z
            last_update: 2021-02-01T10:01:02.333Z
            status_details: AUTHENTICATION_INITIALIZED
            status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
        created_at: 2000-01-23T04:56:07.000+00:00
        refresh:
          refresh_allowed: true
          credentials_stored: true
        error:
          code: 0
          details: Credentials are invalid. Please try again.
          type: INVALID_CREDENTIALS
          message: Credentials invalid
        last_session_id: last_session_id
        authentication_id: "123"
        institution_id: "123"
        linking_attempt_id: "123"
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: form_post
        permissions:
        - permissions
        - permissions
        authentication_status:
          last_successful_update: 2021-02-01T10:01:02.333Z
          last_update: 2021-02-01T10:01:02.333Z
          status_details: AUTHENTICATION_INITIALIZED
          status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
        first_success: 2000-01-23T04:56:07.000+00:00
        login_identity_id: login_identity_id
        session_status: COMPLETED
        status_details:
          event_date: 2000-01-23T04:56:07.000+00:00
          event_name: event_name
        status: LINKING
      properties:
        login_identity_id:
          format: ulid
          type: string
        customer_app_id:
          format: ulid
          type: string
        user_id:
          example: form_post
          type: string
        login_methods_available:
          $ref: '#/components/schemas/LoginIdentityLoginMethodsAvailable'
        permissions_grant_date:
          format: date-time
          type: string
        permissions_expiry_date:
          format: date-time
          type: string
        permissions:
          items:
            type: string
          type: array
        billing_details:
          $ref: '#/components/schemas/LoginIdentityBillingDetails'
        status:
          example: LINKING
          type: string
        status_details:
          $ref: '#/components/schemas/LoginIdentityStatusDetails'
        product_status:
          $ref: '#/components/schemas/AllProductStatus'
        authentication_status:
          $ref: '#/components/schemas/ProductStatus'
        error:
          $ref: '#/components/schemas/LoginIdentityError'
        last_success:
          format: date-time
          type: string
        first_success:
          format: date-time
          type: string
        webhook:
          example: https://auth.example.com/callback
          format: uri
          type: string
        session_status:
          example: COMPLETED
          type: string
        institution_id:
          example: "123"
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        linking_attempt_id:
          description: a login attempt id which is unique per login_identity
          example: "123"
          type: string
        authentication_id:
          description: a successful login attempt id which is unique per login_identity
          example: "123"
          type: string
        last_session_id:
          format: ulid
          type: string
        refresh:
          $ref: '#/components/schemas/RefreshData'
      required:
      - customer_app_id
      - institution_id
      - user_id
      type: object
    RefreshData:
      example:
        refresh_allowed: true
        credentials_stored: true
      properties:
        credentials_stored:
          type: boolean
        refresh_allowed:
          type: boolean
      required:
      - credentials_stored
      - refresh_allowed
      type: object
    LoginIdentityError:
      example:
        code: 0
        details: Credentials are invalid. Please try again.
        type: INVALID_CREDENTIALS
        message: Credentials invalid
      properties:
        code:
          type: integer
        type:
          example: INVALID_CREDENTIALS
          type: string
        message:
          example: Credentials invalid
          type: string
        details:
          example: Credentials are invalid. Please try again.
          type: string
      type: object
    DeleteLoginIdentityResponse:
      example:
        success: true
      properties:
        success:
          example: true
          type: boolean
      type: object
    LinkResponse:
      example:
        auth_url: https://auth.example.com/auth?client_id=clientIDstate=userState&redirect_url=callback
      properties:
        auth_url:
          example: https://auth.example.com/auth?client_id=clientIDstate=userState&redirect_url=callback
          type: string
      type: object
    AccessTokenResponse:
      example:
        access_token: access_token
        refresh_token: refresh_token
        login_identity_id: login_identity_id
        token_type: token_type
        expires_in: 0.8008281904610115
        issued_at: 2000-01-23T04:56:07.000+00:00
      properties:
        access_token:
          type: string
        login_identity_id:
          type: string
        token_type:
          type: string
        expires_in:
          description: seconds
          format: int64
          type: number
        refresh_token:
          type: string
        issued_at:
          format: date-time
          type: string
      required:
      - access_token
      - expires_in
      - issued_at
      - login_identity_id
      - refresh_token
      - token_type
      type: object
    GetStatementsResponse:
      example:
        institution:
          portal_name: Personal Internet Banking
          countries:
          - HKG
          institution_name: Mock Bank
          institution_id: "123"
        login_identity:
          login_identity_id: login_identity_id
          last_session_id: last_session_id
          status: LINKING
        statements:
        - date: 2021-02-01
          name: BusinessVantage
          created_at: 2021-02-01T10:01:02.333Z
          id: daiosdosi7823e43
        - date: 2021-02-01
          name: BusinessVantage
          created_at: 2021-02-01T10:01:02.333Z
          id: daiosdosi7823e43
      properties:
        statements:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        login_identity:
          $ref: '#/components/schemas/LoginIdentityShort'
        institution:
          $ref: '#/components/schemas/InstitutionShort'
      type: object
    GetStatementLinkResponse:
      example:
        statement_links:
        - expiry: 2000-01-23T04:56:07.000+00:00
          statement_id: sadasd
          url: https://www.finverse.net/statement.pdf
        - expiry: 2000-01-23T04:56:07.000+00:00
          statement_id: sadasd
          url: https://www.finverse.net/statement.pdf
      properties:
        statement_links:
          items:
            $ref: '#/components/schemas/StatementLink'
          type: array
      type: object
    Statement:
      example:
        date: 2021-02-01
        name: BusinessVantage
        created_at: 2021-02-01T10:01:02.333Z
        id: daiosdosi7823e43
      properties:
        id:
          example: daiosdosi7823e43
          type: string
        date:
          description: YYYY-MM-DD
          example: 2021-02-01
          type: string
        name:
          example: BusinessVantage
          type: string
        created_at:
          example: 2021-02-01T10:01:02.333Z
          format: date-time
          type: string
      type: object
    StatementLink:
      example:
        expiry: 2000-01-23T04:56:07.000+00:00
        statement_id: sadasd
        url: https://www.finverse.net/statement.pdf
      properties:
        url:
          description: signedURL to download statement
          example: https://www.finverse.net/statement.pdf
          type: string
        expiry:
          description: expiry of the signedURL
          format: date-time
          type: string
        statement_id:
          example: sadasd
          type: string
      type: object
    AllProductStatus:
      example:
        card_details:
          last_successful_update: 2021-02-01T10:01:02.333Z
          last_update: 2021-02-01T10:01:02.333Z
          status_details: AUTHENTICATION_INITIALIZED
          status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
        identity:
          last_successful_update: 2021-02-01T10:01:02.333Z
          last_update: 2021-02-01T10:01:02.333Z
          status_details: AUTHENTICATION_INITIALIZED
          status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
        income_estimation:
          last_successful_update: 2021-02-01T10:01:02.333Z
          last_update: 2021-02-01T10:01:02.333Z
          status_details: AUTHENTICATION_INITIALIZED
          status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
        payments:
          last_successful_update: 2021-02-01T10:01:02.333Z
          last_update: 2021-02-01T10:01:02.333Z
          status_details: AUTHENTICATION_INITIALIZED
          status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
        balance_history:
          last_successful_update: 2021-02-01T10:01:02.333Z
          last_update: 2021-02-01T10:01:02.333Z
          status_details: AUTHENTICATION_INITIALIZED
          status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
        statements:
          last_successful_update: 2021-02-01T10:01:02.333Z
          last_update: 2021-02-01T10:01:02.333Z
          status_details: AUTHENTICATION_INITIALIZED
          status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
        accounts:
          last_successful_update: 2021-02-01T10:01:02.333Z
          last_update: 2021-02-01T10:01:02.333Z
          status_details: AUTHENTICATION_INITIALIZED
          status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
        account_numbers:
          last_successful_update: 2021-02-01T10:01:02.333Z
          last_update: 2021-02-01T10:01:02.333Z
          status_details: AUTHENTICATION_INITIALIZED
          status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
        historical_transactions:
          last_successful_update: 2021-02-01T10:01:02.333Z
          last_update: 2021-02-01T10:01:02.333Z
          status_details: AUTHENTICATION_INITIALIZED
          status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
        online_transactions:
          last_successful_update: 2021-02-01T10:01:02.333Z
          last_update: 2021-02-01T10:01:02.333Z
          status_details: AUTHENTICATION_INITIALIZED
          status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
      properties:
        accounts:
          $ref: '#/components/schemas/ProductStatus'
        online_transactions:
          $ref: '#/components/schemas/ProductStatus'
        statements:
          $ref: '#/components/schemas/ProductStatus'
        historical_transactions:
          $ref: '#/components/schemas/ProductStatus'
        account_numbers:
          $ref: '#/components/schemas/ProductStatus'
        identity:
          $ref: '#/components/schemas/ProductStatus'
        balance_history:
          $ref: '#/components/schemas/ProductStatus'
        payments:
          $ref: '#/components/schemas/ProductStatus'
        income_estimation:
          $ref: '#/components/schemas/ProductStatus'
        card_details:
          $ref: '#/components/schemas/ProductStatus'
      type: object
    ProductStatus:
      example:
        last_successful_update: 2021-02-01T10:01:02.333Z
        last_update: 2021-02-01T10:01:02.333Z
        status_details: AUTHENTICATION_INITIALIZED
        status: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
      properties:
        status:
          description: The current health of this product
          example: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
          type: string
        status_details:
          description: The detailed event name
          example: AUTHENTICATION_INITIALIZED
          type: string
        last_update:
          example: 2021-02-01T10:01:02.333Z
          format: date-time
          nullable: true
          type: string
        last_successful_update:
          example: 2021-02-01T10:01:02.333Z
          format: date-time
          nullable: true
          type: string
      type: object
    CardDetails:
      example:
        card_accounts:
        - account_type:
            subtype: SAVINGS
            type: DEPOSIT
          last_payment_date: 2021-10-27
          total_credit_limit:
            raw: "69.00"
            currency: HKD
            value: 69.0
          payment_due_amount:
            raw: "69.00"
            currency: HKD
            value: 69.0
          minimum_payment_due:
            raw: "69.00"
            currency: HKD
            value: 69.0
          last_payment_amount:
            raw: "69.00"
            currency: HKD
            value: 69.0
          statement_date: 2021-10-27
          rewards_points_balance:
            unit: UNI$
            raw: "69.00"
            value: 69.0
          statement_due_amount:
            raw: "69.00"
            currency: HKD
            value: 69.0
          account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          statement_payment_due_date: 2021-02-01
          updated_at: 2021-02-01T10:01:02.333Z
          available_credit_limit:
            raw: "69.00"
            currency: HKD
            value: 69.0
          account_name: HKD Visa
          account_number_masked: account_number_masked
          current_balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          next_payment_due_date: 2021-02-01
        - account_type:
            subtype: SAVINGS
            type: DEPOSIT
          last_payment_date: 2021-10-27
          total_credit_limit:
            raw: "69.00"
            currency: HKD
            value: 69.0
          payment_due_amount:
            raw: "69.00"
            currency: HKD
            value: 69.0
          minimum_payment_due:
            raw: "69.00"
            currency: HKD
            value: 69.0
          last_payment_amount:
            raw: "69.00"
            currency: HKD
            value: 69.0
          statement_date: 2021-10-27
          rewards_points_balance:
            unit: UNI$
            raw: "69.00"
            value: 69.0
          statement_due_amount:
            raw: "69.00"
            currency: HKD
            value: 69.0
          account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          statement_payment_due_date: 2021-02-01
          updated_at: 2021-02-01T10:01:02.333Z
          available_credit_limit:
            raw: "69.00"
            currency: HKD
            value: 69.0
          account_name: HKD Visa
          account_number_masked: account_number_masked
          current_balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          next_payment_due_date: 2021-02-01
        card_total:
          rewards_points_balance:
            unit: UNI$
            raw: "69.00"
            value: 69.0
          statement_due_amount:
            raw: "69.00"
            currency: HKD
            value: 69.0
          updated_at: 2021-02-01T10:01:02.333Z
          available_credit_limit:
            raw: "69.00"
            currency: HKD
            value: 69.0
          current_balance:
            raw: "69.00"
            currency: HKD
            value: 69.0
          total_credit_limit:
            raw: "69.00"
            currency: HKD
            value: 69.0
          payment_due_amount:
            raw: "69.00"
            currency: HKD
            value: 69.0
          minimum_payment_due:
            raw: "69.00"
            currency: HKD
            value: 69.0
      properties:
        card_accounts:
          items:
            $ref: '#/components/schemas/CardAccount'
          type: array
        card_total:
          $ref: '#/components/schemas/CardTotal'
      type: object
    CardAccount:
      example:
        account_type:
          subtype: SAVINGS
          type: DEPOSIT
        last_payment_date: 2021-10-27
        total_credit_limit:
          raw: "69.00"
          currency: HKD
          value: 69.0
        payment_due_amount:
          raw: "69.00"
          currency: HKD
          value: 69.0
        minimum_payment_due:
          raw: "69.00"
          currency: HKD
          value: 69.0
        last_payment_amount:
          raw: "69.00"
          currency: HKD
          value: 69.0
        statement_date: 2021-10-27
        rewards_points_balance:
          unit: UNI$
          raw: "69.00"
          value: 69.0
        statement_due_amount:
          raw: "69.00"
          currency: HKD
          value: 69.0
        account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        statement_payment_due_date: 2021-02-01
        updated_at: 2021-02-01T10:01:02.333Z
        available_credit_limit:
          raw: "69.00"
          currency: HKD
          value: 69.0
        account_name: HKD Visa
        account_number_masked: account_number_masked
        current_balance:
          raw: "69.00"
          currency: HKD
          value: 69.0
        next_payment_due_date: 2021-02-01
      properties:
        account_id:
          description: Account this card is associated with
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        account_name:
          example: HKD Visa
          type: string
        account_number_masked:
          description: Masked Account number of the card account
          type: string
        account_type:
          $ref: '#/components/schemas/AccountType'
        statement_payment_due_date:
          description: The statement payment due date
          example: 2021-02-01
          type: string
        next_payment_due_date:
          description: The next payment due date
          example: 2021-02-01
          type: string
        statement_date:
          description: The statement date
          example: 2021-10-27
          type: string
        last_payment_date:
          description: The date of the last payment
          example: 2021-10-27
          type: string
        last_payment_amount:
          $ref: '#/components/schemas/CurrencyAmount'
        current_balance:
          $ref: '#/components/schemas/CurrencyAmount'
        payment_due_amount:
          $ref: '#/components/schemas/CurrencyAmount'
        statement_due_amount:
          $ref: '#/components/schemas/CurrencyAmount'
        total_credit_limit:
          $ref: '#/components/schemas/CurrencyAmount'
        available_credit_limit:
          $ref: '#/components/schemas/CurrencyAmount'
        minimum_payment_due:
          $ref: '#/components/schemas/CurrencyAmount'
        rewards_points_balance:
          $ref: '#/components/schemas/GenericAmount'
        updated_at:
          example: 2021-02-01T10:01:02.333Z
          format: date-time
          type: string
      type: object
    CardTotal:
      example:
        rewards_points_balance:
          unit: UNI$
          raw: "69.00"
          value: 69.0
        statement_due_amount:
          raw: "69.00"
          currency: HKD
          value: 69.0
        updated_at: 2021-02-01T10:01:02.333Z
        available_credit_limit:
          raw: "69.00"
          currency: HKD
          value: 69.0
        current_balance:
          raw: "69.00"
          currency: HKD
          value: 69.0
        total_credit_limit:
          raw: "69.00"
          currency: HKD
          value: 69.0
        payment_due_amount:
          raw: "69.00"
          currency: HKD
          value: 69.0
        minimum_payment_due:
          raw: "69.00"
          currency: HKD
          value: 69.0
      properties:
        current_balance:
          $ref: '#/components/schemas/CurrencyAmount'
        payment_due_amount:
          $ref: '#/components/schemas/CurrencyAmount'
        statement_due_amount:
          $ref: '#/components/schemas/CurrencyAmount'
        total_credit_limit:
          $ref: '#/components/schemas/CurrencyAmount'
        available_credit_limit:
          $ref: '#/components/schemas/CurrencyAmount'
        minimum_payment_due:
          $ref: '#/components/schemas/CurrencyAmount'
        rewards_points_balance:
          $ref: '#/components/schemas/GenericAmount'
        updated_at:
          example: 2021-02-01T10:01:02.333Z
          format: date-time
          type: string
      type: object
    PaymentDetails:
      example:
        other_info:
          bank_code: bank_code
        bank_shortname: testbank
        format: SWIFT
        bank_address: 99 Stree, Building, City
        bank_country: Country
        bank_fullname: Finverse test bank
        bic: BKCHHKHHXXX
      properties:
        format:
          example: SWIFT
          type: string
        bic:
          example: BKCHHKHHXXX
          type: string
        bank_fullname:
          example: Finverse test bank
          type: string
        bank_shortname:
          example: testbank
          type: string
        bank_address:
          example: 99 Stree, Building, City
          type: string
        bank_country:
          example: Country
          type: string
        other_info:
          $ref: '#/components/schemas/OtherInfo'
      type: object
    OtherInfo:
      example:
        bank_code: bank_code
      properties:
        bank_code:
          type: string
      type: object
    RedirectUriResponse:
      example:
        redirect_uri: redirect_uri
      properties:
        redirect_uri:
          type: string
      type: object
    IncomeEstimate:
      example:
        amount: 100.0
        currency: HKD
      properties:
        amount:
          description: Income amount
          example: 100.0
          type: number
        currency:
          description: Currency
          example: HKD
          type: string
      required:
      - amount
      - currency
      type: object
    MonthlyIncomeEstimate:
      example:
        month: 1.0
        year: 2020.0
        estimated_income:
          amount: 100.0
          currency: HKD
      properties:
        estimated_income:
          $ref: '#/components/schemas/IncomeEstimate'
        month:
          description: The numeric month
          example: 1.0
          format: int32
          type: number
        year:
          description: The year
          example: 2020.0
          format: int32
          type: number
      required:
      - estimated_income
      - month
      - year
      type: object
    IncomeStream:
      example:
        account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        estimated_monthly_income:
          amount: 100.0
          currency: HKD
        transaction_count: 3.0
        monthly_history:
        - month: 1.0
          year: 2020.0
          estimated_income:
            amount: 100.0
            currency: HKD
        - month: 1.0
          year: 2020.0
          estimated_income:
            amount: 100.0
            currency: HKD
      properties:
        account_id:
          description: Account this income estimate is associated with
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        estimated_monthly_income:
          $ref: '#/components/schemas/IncomeEstimate'
        transaction_count:
          description: Number of transactions counted towards income
          example: 3.0
          format: int64
          type: number
        monthly_history:
          items:
            $ref: '#/components/schemas/MonthlyIncomeEstimate'
          type: array
      required:
      - account_id
      - monthly_history
      - transaction_count
      type: object
    IncomeTotal:
      example:
        estimated_monthly_income:
          amount: 100.0
          currency: HKD
        transaction_count: 3.0
        monthly_history:
        - month: 1.0
          year: 2020.0
          estimated_income:
            amount: 100.0
            currency: HKD
        - month: 1.0
          year: 2020.0
          estimated_income:
            amount: 100.0
            currency: HKD
      properties:
        estimated_monthly_income:
          $ref: '#/components/schemas/IncomeEstimate'
        transaction_count:
          description: Number of transactions counted towards income
          example: 3.0
          format: int64
          type: number
        monthly_history:
          items:
            $ref: '#/components/schemas/MonthlyIncomeEstimate'
          type: array
      required:
      - monthly_history
      - transaction_count
      type: object
    SingleSourceIncome:
      example:
        income_total:
          estimated_monthly_income:
            amount: 100.0
            currency: HKD
          transaction_count: 3.0
          monthly_history:
          - month: 1.0
            year: 2020.0
            estimated_income:
              amount: 100.0
              currency: HKD
          - month: 1.0
            year: 2020.0
            estimated_income:
              amount: 100.0
              currency: HKD
        income_streams:
        - account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          estimated_monthly_income:
            amount: 100.0
            currency: HKD
          transaction_count: 3.0
          monthly_history:
          - month: 1.0
            year: 2020.0
            estimated_income:
              amount: 100.0
              currency: HKD
          - month: 1.0
            year: 2020.0
            estimated_income:
              amount: 100.0
              currency: HKD
        - account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          estimated_monthly_income:
            amount: 100.0
            currency: HKD
          transaction_count: 3.0
          monthly_history:
          - month: 1.0
            year: 2020.0
            estimated_income:
              amount: 100.0
              currency: HKD
          - month: 1.0
            year: 2020.0
            estimated_income:
              amount: 100.0
              currency: HKD
        source: DEPOSITS_ANALYSIS
        source_id: source_id
      properties:
        income_streams:
          items:
            $ref: '#/components/schemas/IncomeStream'
          type: array
        income_total:
          $ref: '#/components/schemas/IncomeTotal'
        source:
          description: Where the income estimate was sourced from
          example: DEPOSITS_ANALYSIS
          type: string
        source_id:
          description: Unknown
          type: string
      required:
      - income_streams
      - income_total
      - source
      - source_id
      type: object
    IncomeResponse:
      example:
        income:
        - income_total:
            estimated_monthly_income:
              amount: 100.0
              currency: HKD
            transaction_count: 3.0
            monthly_history:
            - month: 1.0
              year: 2020.0
              estimated_income:
                amount: 100.0
                currency: HKD
            - month: 1.0
              year: 2020.0
              estimated_income:
                amount: 100.0
                currency: HKD
          income_streams:
          - account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
            estimated_monthly_income:
              amount: 100.0
              currency: HKD
            transaction_count: 3.0
            monthly_history:
            - month: 1.0
              year: 2020.0
              estimated_income:
                amount: 100.0
                currency: HKD
            - month: 1.0
              year: 2020.0
              estimated_income:
                amount: 100.0
                currency: HKD
          - account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
            estimated_monthly_income:
              amount: 100.0
              currency: HKD
            transaction_count: 3.0
            monthly_history:
            - month: 1.0
              year: 2020.0
              estimated_income:
                amount: 100.0
                currency: HKD
            - month: 1.0
              year: 2020.0
              estimated_income:
                amount: 100.0
                currency: HKD
          source: DEPOSITS_ANALYSIS
          source_id: source_id
        - income_total:
            estimated_monthly_income:
              amount: 100.0
              currency: HKD
            transaction_count: 3.0
            monthly_history:
            - month: 1.0
              year: 2020.0
              estimated_income:
                amount: 100.0
                currency: HKD
            - month: 1.0
              year: 2020.0
              estimated_income:
                amount: 100.0
                currency: HKD
          income_streams:
          - account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
            estimated_monthly_income:
              amount: 100.0
              currency: HKD
            transaction_count: 3.0
            monthly_history:
            - month: 1.0
              year: 2020.0
              estimated_income:
                amount: 100.0
                currency: HKD
            - month: 1.0
              year: 2020.0
              estimated_income:
                amount: 100.0
                currency: HKD
          - account_id: 01ARZ3NDEKTSV4RRFFQ69G5FAV
            estimated_monthly_income:
              amount: 100.0
              currency: HKD
            transaction_count: 3.0
            monthly_history:
            - month: 1.0
              year: 2020.0
              estimated_income:
                amount: 100.0
                currency: HKD
            - month: 1.0
              year: 2020.0
              estimated_income:
                amount: 100.0
                currency: HKD
          source: DEPOSITS_ANALYSIS
          source_id: source_id
        institution:
          portal_name: Personal Internet Banking
          countries:
          - HKG
          institution_name: Mock Bank
          institution_id: "123"
        login_identity:
          login_identity_id: login_identity_id
          last_session_id: last_session_id
          status: LINKING
      properties:
        income:
          items:
            $ref: '#/components/schemas/SingleSourceIncome'
          type: array
        login_identity:
          $ref: '#/components/schemas/LoginIdentityShort'
        institution:
          $ref: '#/components/schemas/InstitutionShort'
      required:
      - income
      - institution
      - login_identity
      type: object
    PaymentAccount:
      example:
        raw: raw
        institution_id: institution_id
      properties:
        raw:
          description: The raw value for the account the user selected when making
            payment request
          type: string
        institution_id:
          description: Finverse Institution ID. Only returned if institution_id was
            included in the request.
          type: string
      type: object
    CompositeStatementLink:
      example:
        expiry: 2000-01-23T04:56:07.000+00:00
        url: https://www.finverse.net/statement.pdf
      properties:
        url:
          description: signedURL to download statement
          example: https://www.finverse.net/statement.pdf
          type: string
        expiry:
          description: expiry of the signedURL
          format: date-time
          type: string
      required:
      - expiry
      - url
      type: object
    GetJWKSResponse:
      example:
        keys:
        - kty: kty
          e: e
          use: use
          kid: kid
          x5c:
          - x5c
          - x5c
          n: "n"
        - kty: kty
          e: e
          use: use
          kid: kid
          x5c:
          - x5c
          - x5c
          n: "n"
      properties:
        keys:
          items:
            $ref: '#/components/schemas/JWKSKey'
          type: array
      type: object
    JWKSKey:
      example:
        kty: kty
        e: e
        use: use
        kid: kid
        x5c:
        - x5c
        - x5c
        n: "n"
      properties:
        kty:
          description: The "kty" (key type) parameter identifies the cryptographic
            algorithm family used with the key, such as "RSA" or "EC".
          type: string
        kid:
          description: The "kid" (key ID) parameter is used to match a specific key
          type: string
        use:
          description: The "use" (public key use) parameter identifies the intended
            use of the public key
          type: string
        e:
          description: RSA key value "e"
          type: string
        n:
          description: RSA key value "n"
          type: string
        x5c:
          description: The "x5c" (X.509 certificate chain) parameter contains a chain
            of one or more PKIX certificates
          items:
            type: string
          type: array
      type: object
    EncryptedPayload:
      example:
        initializationVector: initializationVector
        ciphertext: ciphertext
        envelopeEncryptionKey: envelopeEncryptionKey
        messageAuthenticationCode: messageAuthenticationCode
        keyId: keyId
      properties:
        ciphertext:
          description: The credential payload encrypted with AES (base64)
          type: string
        initializationVector:
          description: The 16 byte IV used w/ AES (base64)
          type: string
        messageAuthenticationCode:
          description: The MAC to verify AES decryption validity
          type: string
        envelopeEncryptionKey:
          description: The AES key encrypted with an RSA pubkey (base64)
          type: string
        keyId:
          description: The identifier of the public key used to encrypt the AES key
          type: string
      required:
      - ciphertext
      - envelopeEncryptionKey
      - initializationVector
      - keyId
      - messageAuthenticationCode
      type: object
    LinkStatusResponse:
      example:
        success:
          access_token: access_token
          refresh_token: refresh_token
          login_identity_id: login_identity_id
          token_type: token_type
          expires_in: 0.8008281904610115
          issued_at: 2000-01-23T04:56:07.000+00:00
        pending:
          code: code
          details: details
          message: message
        action:
          buttons:
          - name: name
            type: SUBMIT
            value: Submit One time password
          - name: name
            type: SUBMIT
            value: Submit One time password
          action_id: action_id
          name: DEVICE_SELECTION
          messages:
          - name: name
            type: type
            value: value
          - name: name
            type: type
            value: value
          type: ACTION
          fields:
          - name: name
            options:
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            label: label
            placeholder: placeholder
            type: SELECT
          - name: name
            options:
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            label: label
            placeholder: placeholder
            type: SELECT
      properties:
        success:
          $ref: '#/components/schemas/AccessTokenResponse'
        pending:
          $ref: '#/components/schemas/LinkStatusPendingModel'
        action:
          $ref: '#/components/schemas/LinkStatusActionModel'
      type: object
    NonSensitiveLinkStatusResponse:
      example:
        action:
          buttons:
          - name: name
            type: SUBMIT
            value: Submit One time password
          - name: name
            type: SUBMIT
            value: Submit One time password
          action_id: action_id
          name: DEVICE_SELECTION
          messages:
          - name: name
            type: type
            value: value
          - name: name
            type: type
            value: value
          type: ACTION
          fields:
          - name: name
            options:
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            label: label
            placeholder: placeholder
            type: SELECT
          - name: name
            options:
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            - label: joe-iphone-13
              value: Joe's iPhone 13 Pro Max
            label: label
            placeholder: placeholder
            type: SELECT
        redirect_uri: redirect_uri
      properties:
        action:
          $ref: '#/components/schemas/LinkStatusActionModel'
        redirect_uri:
          type: string
      type: object
    LinkStatusPendingModel:
      example:
        code: code
        details: details
        message: message
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: string
      type: object
    LinkStatusActionModel:
      example:
        buttons:
        - name: name
          type: SUBMIT
          value: Submit One time password
        - name: name
          type: SUBMIT
          value: Submit One time password
        action_id: action_id
        name: DEVICE_SELECTION
        messages:
        - name: name
          type: type
          value: value
        - name: name
          type: type
          value: value
        type: ACTION
        fields:
        - name: name
          options:
          - label: joe-iphone-13
            value: Joe's iPhone 13 Pro Max
          - label: joe-iphone-13
            value: Joe's iPhone 13 Pro Max
          label: label
          placeholder: placeholder
          type: SELECT
        - name: name
          options:
          - label: joe-iphone-13
            value: Joe's iPhone 13 Pro Max
          - label: joe-iphone-13
            value: Joe's iPhone 13 Pro Max
          label: label
          placeholder: placeholder
          type: SELECT
      properties:
        action_id:
          description: Unique identifier
          type: string
        type:
          description: The type of user screen the UI is to render
          example: ACTION
          type: string
        name:
          description: The name of the user screen the UI is to render
          example: DEVICE_SELECTION
          type: string
        messages:
          items:
            $ref: '#/components/schemas/UserMessage'
          type: array
        fields:
          items:
            $ref: '#/components/schemas/UserField'
          type: array
        buttons:
          items:
            $ref: '#/components/schemas/UserButton'
          type: array
      required:
      - action_id
      - fields
      - messages
      - name
      - type
      type: object
    UserMessage:
      example:
        name: name
        type: type
        value: value
      properties:
        name:
          description: The name of the message
          type: string
        type:
          description: The type of the message. This will help how the UI renders
            this text.
          type: string
        value:
          description: The actual text value.
          type: string
      required:
      - name
      - type
      - value
      type: object
    UserField:
      example:
        name: name
        options:
        - label: joe-iphone-13
          value: Joe's iPhone 13 Pro Max
        - label: joe-iphone-13
          value: Joe's iPhone 13 Pro Max
        label: label
        placeholder: placeholder
        type: SELECT
      properties:
        name:
          description: The name of the field. This will be used as the key when submitting
            response.
          type: string
        label:
          description: The label for this field.
          type: string
        placeholder:
          description: The placeholder for this field.
          type: string
        type:
          description: The type of field. Currently it can only be SELECT, INPUT or
            PASSWORD
          example: SELECT
          type: string
        options:
          description: This is only applicable when the field type is SELECT
          items:
            $ref: '#/components/schemas/UserFieldOption'
          type: array
      required:
      - name
      - type
      type: object
    UserButton:
      example:
        name: name
        type: SUBMIT
        value: Submit One time password
      properties:
        name:
          description: The name of the button.
          type: string
        value:
          description: The text that will be displayed for this button
          example: Submit One time password
          type: string
        type:
          description: The type of button. Currently it can only be SUBMIT
          example: SUBMIT
          type: string
      required:
      - name
      - type
      - value
      type: object
    UserFieldOption:
      example:
        label: joe-iphone-13
        value: Joe's iPhone 13 Pro Max
      properties:
        label:
          description: The value displayed in the select element.
          example: joe-iphone-13
          type: string
        value:
          description: The value that will be submitted if this option was selected.
          example: Joe's iPhone 13 Pro Max
          type: string
      required:
      - label
      - value
      type: object
    ErrBodyModelV2:
      properties:
        error:
          $ref: '#/components/schemas/FvErrorModelV2'
      type: object
    FvErrorModelV2:
      example:
        error_code: CREDENTIALS_INVALID
        details: details
        type: LINKING_ERROR
        message: message
        request_id: request_id
      properties:
        type:
          description: The error type
          enum:
          - LINK_ERROR
          - API_ERROR
          example: LINKING_ERROR
          type: string
        error_code:
          example: CREDENTIALS_INVALID
          type: string
        message:
          type: string
        details:
          type: string
        request_id:
          description: The request_id provided in the request header
          type: string
      required:
      - details
      - error_code
      - message
      - request_id
      - type
      type: object
    ErrBodyModel:
      properties:
        error:
          $ref: '#/components/schemas/FvErrorModel'
      type: object
    SwaggerErrBodyModel:
      properties:
        code:
          type: integer
        message:
          type: string
        error:
          $ref: '#/components/schemas/FvErrorModel'
      type: object
    FvErrorModel:
      properties:
        type:
          description: The error type
          enum:
          - LINK_ERROR
          - API_ERROR
          example: LINKING_ERROR
          type: string
        error_code:
          example: CREDENTIALS_INVALID
          type: string
        code:
          example: CREDENTIALS_INVALID
          type: string
        message:
          type: string
        details:
          type: string
        request_id:
          description: The request_id provided in the request header
          type: string
      required:
      - code
      - details
      - error_code
      - message
      - request_id
      - type
      type: object
    ErrorResponse:
      properties:
        err:
          type: string
        http_status_code:
          format: int
          type: number
        status_text:
          type: string
        app_code:
          format: int64
          type: number
        error_category:
          type: string
        error_text:
          type: string
        request_id:
          type: string
      type: object
    BadRequestModel:
      properties:
        error:
          $ref: '#/components/schemas/BadRequestModel_error'
      type: object
    BadRequestModelV2:
      properties:
        error:
          $ref: '#/components/schemas/BadRequestModelV2_error'
      type: object
    PaymentInfo:
      example:
        currencies_supported:
        - HKD
        - CNY
        other_info:
          bank_code: bank_code
        payments_supported:
        - MANDATE
        - DEBIT_AUTHORIZATION
      properties:
        currencies_supported:
          example:
          - HKD
          - CNY
          items:
            type: string
          type: array
        payments_supported:
          example:
          - MANDATE
          - DEBIT_AUTHORIZATION
          items:
            enum:
            - MANDATE
            - DEBIT_AUTHORIZATION
            type: string
          type: array
        other_info:
          $ref: '#/components/schemas/OtherInfo'
      required:
      - payments_supported
      type: object
    AccountType:
      example:
        subtype: SAVINGS
        type: DEPOSIT
      properties:
        type:
          enum:
          - DEPOSIT
          - CARD
          - INVESTMENT
          - LOAN
          - UNKNOWN
          example: DEPOSIT
          type: string
        subtype:
          enum:
          - CURRENT
          - SAVINGS
          - TIME_DEPOSIT
          - OTHER
          - CREDIT_CARD
          - DEBIT_CARD
          - SECURITIES
          - FUNDS
          - STOCKS
          - BONDS
          - MORTGAGE
          - PERSONAL_LOAN
          - REVOLVING_LOAN
          - UNKNOWN
          example: SAVINGS
          type: string
      type: object
    CreatePaymentRequest:
      example:
        amount: 100
        metadata:
          key: metadata
        payment_details:
          transaction_reference_id: transaction_reference_id
          description: description
          mandate_id: mandate_id
        currency: HKD
        type: MANDATE
      properties:
        amount:
          description: Amount to be paid, in currency's smallest unit or “minor unit”,
            as defined in ISO 4217. For example, HKD 100.01 is represented as amount
            = 10001 (minor unit = cents). For currencies without minor units (e.g.
            VND, JPY), the amount is represented as is, without modification. For
            example, VND 15101 is represented as amount = 15101.
          example: 100
          type: integer
        currency:
          description: The currency code as defined in ISO 4217.
          example: HKD
          type: string
        type:
          description: Indicates whether this is a mandate-based payment or one-off
            direct payment to an account. Possible values - MANDATE, SINGLE
          enum:
          - MANDATE
          - SINGLE
          type: string
        payment_details:
          $ref: '#/components/schemas/PaymentDetails2'
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the payment in key:value format (e.g.
            payment_internal_id: 1234). It supports up to 10 key:value pairs, whereas
            the key and value supports up to 50 and 500 characters respectively.'
          type: object
      required:
      - amount
      - currency
      - payment_details
      - type
      type: object
    PaymentDetails2:
      example:
        transaction_reference_id: transaction_reference_id
        description: description
        mandate_id: mandate_id
      properties:
        description:
          description: The transaction description provided to banks, which banks
            will show to their customers.
          type: string
        mandate_id:
          description: ID of the mandate this pament is referring to.
          type: string
        transaction_reference_id:
          description: Customer's ID for this transaction
          type: string
      required:
      - mandate_id
      type: object
    PaymentResponse:
      example:
        amount: 100
        fees:
        - paid_by_account_id: The payment account ID
          amount: 100
          currency: HKD
          paid_by: RECIPIENT
        - paid_by_account_id: The payment account ID
          amount: 100
          currency: HKD
          paid_by: RECIPIENT
        metadata:
          key: metadata
        payment_details:
          transaction_reference_id: transaction_reference_id
          description: description
          mandate_id: mandate_id
        recipient_account:
          account_type: SETTLEMENT_ACCOUNT
          account_id: account_id
        created_at: 2000-01-23T04:56:07.000+00:00
        type: MANDATE
        error:
          error_code: CREDENTIALS_INVALID
          details: details
          type: LINKING_ERROR
          message: message
          request_id: request_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        sender:
          user_type: INDIVIDUAL
          user_id: user_id
          user_details:
          - values:
            - values
            - values
            - values
            - values
            - values
            details_type: HK_ID
          - values:
            - values
            - values
            - values
            - values
            - values
            details_type: HK_ID
          name: name
          external_user_id: external_user_id
        payment_id: payment_id
        sender_account:
          account_number:
            number: number
            type: LOCAL
          account_type: EXTERNAL_ACCOUNT
          metadata:
            key: metadata
          account_id: sender_account_id
          user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
          account_number_masked: account_number_masked
          accountholder_name: Chan Li Pak
          institution_id: hsbc-hk
        recipient:
          name: name
        currency: HKD
        status: AUTHORIZATION_REQUIRED
      properties:
        payment_id:
          description: Finverse Payment ID
          type: string
        amount:
          description: Amount to be paid, in currency's smallest unit or “minor unit”,
            as defined in ISO 4217. For example, HKD 100.01 is represented as amount
            = 10001 (minor unit = cents). For currencies without minor units (e.g.
            VND, JPY), the amount is represented as is, without modification. For
            example, VND 15101 is represented as amount = 15101.
          example: 100
          type: integer
        currency:
          description: The currency code as defined in ISO 4217.
          example: HKD
          type: string
        type:
          description: Indicates whether this is a mandate-based payment or one-off
            direct payment to an account. Possible values - MANDATE, SINGLE
          enum:
          - MANDATE
          - SINGLE
          type: string
        updated_at:
          description: Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
        status:
          description: Possible values - CREATED, AUTHORIZED, SUBMITTED, EXECUTED,
            FAILED, REJECTED, CANCELLED.
          enum:
          - AUTHORIZATION_REQUIRED
          - AUTHORIZING
          - PROCESSING
          - SUBMITTED
          - EXECUTED
          - FAILED
          - REVOKED
          type: string
        payment_details:
          $ref: '#/components/schemas/PaymentDetails2'
        recipient:
          $ref: '#/components/schemas/MandateRecipient'
        recipient_account:
          $ref: '#/components/schemas/MandateRecipientAccount'
        sender:
          $ref: '#/components/schemas/GetMandateSender'
        sender_account:
          $ref: '#/components/schemas/MandateSenderAccount'
        fees:
          items:
            $ref: '#/components/schemas/Fee'
          type: array
        created_at:
          description: Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the payment in key:value format (e.g.
            payment_internal_id: 1234). It supports up to 10 key:value pairs, whereas
            the key and value supports up to 50 and 500 characters respectively.'
          type: object
        error:
          $ref: '#/components/schemas/FvErrorModelV2'
      type: object
    ListPaymentsResponse:
      example:
        payments:
        - amount: 100
          fees:
          - paid_by_account_id: The payment account ID
            amount: 100
            currency: HKD
            paid_by: RECIPIENT
          - paid_by_account_id: The payment account ID
            amount: 100
            currency: HKD
            paid_by: RECIPIENT
          metadata:
            key: metadata
          payment_details:
            transaction_reference_id: transaction_reference_id
            description: description
            mandate_id: mandate_id
          recipient_account:
            account_type: SETTLEMENT_ACCOUNT
            account_id: account_id
          created_at: 2000-01-23T04:56:07.000+00:00
          type: MANDATE
          error:
            error_code: CREDENTIALS_INVALID
            details: details
            type: LINKING_ERROR
            message: message
            request_id: request_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          sender:
            user_type: INDIVIDUAL
            user_id: user_id
            user_details:
            - values:
              - values
              - values
              - values
              - values
              - values
              details_type: HK_ID
            - values:
              - values
              - values
              - values
              - values
              - values
              details_type: HK_ID
            name: name
            external_user_id: external_user_id
          payment_id: payment_id
          sender_account:
            account_number:
              number: number
              type: LOCAL
            account_type: EXTERNAL_ACCOUNT
            metadata:
              key: metadata
            account_id: sender_account_id
            user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
            account_number_masked: account_number_masked
            accountholder_name: Chan Li Pak
            institution_id: hsbc-hk
          recipient:
            name: name
          currency: HKD
          status: AUTHORIZATION_REQUIRED
        - amount: 100
          fees:
          - paid_by_account_id: The payment account ID
            amount: 100
            currency: HKD
            paid_by: RECIPIENT
          - paid_by_account_id: The payment account ID
            amount: 100
            currency: HKD
            paid_by: RECIPIENT
          metadata:
            key: metadata
          payment_details:
            transaction_reference_id: transaction_reference_id
            description: description
            mandate_id: mandate_id
          recipient_account:
            account_type: SETTLEMENT_ACCOUNT
            account_id: account_id
          created_at: 2000-01-23T04:56:07.000+00:00
          type: MANDATE
          error:
            error_code: CREDENTIALS_INVALID
            details: details
            type: LINKING_ERROR
            message: message
            request_id: request_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          sender:
            user_type: INDIVIDUAL
            user_id: user_id
            user_details:
            - values:
              - values
              - values
              - values
              - values
              - values
              details_type: HK_ID
            - values:
              - values
              - values
              - values
              - values
              - values
              details_type: HK_ID
            name: name
            external_user_id: external_user_id
          payment_id: payment_id
          sender_account:
            account_number:
              number: number
              type: LOCAL
            account_type: EXTERNAL_ACCOUNT
            metadata:
              key: metadata
            account_id: sender_account_id
            user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
            account_number_masked: account_number_masked
            accountholder_name: Chan Li Pak
            institution_id: hsbc-hk
          recipient:
            name: name
          currency: HKD
          status: AUTHORIZATION_REQUIRED
        total_payments: 0
      properties:
        payments:
          items:
            $ref: '#/components/schemas/PaymentResponse'
          type: array
        total_payments:
          type: integer
      required:
      - total_payments
      type: object
    CreatePayoutInstructionRequest:
      example:
        amount: 100
        metadata:
          key: metadata
        payment_details:
          mandate_id: mandate_id
          description: description
          scheduled_date: 2000-01-23
        recipient_account:
          account_id: account_id
        currency: HKD
      properties:
        amount:
          description: Amount to be paid, in currency's smallest unit or “minor unit”,
            as defined in ISO 4217. For example, HKD 100.01 is represented as amount
            = 10001 (minor unit = cents). For currencies without minor units (e.g.
            VND, JPY), the amount is represented as is, without modification. For
            example, VND 15101 is represented as amount = 15101.
          example: 100
          type: integer
        currency:
          description: The currency code as defined in ISO 4217.
          example: HKD
          type: string
        payment_details:
          $ref: '#/components/schemas/PayoutDetails'
        recipient_account:
          $ref: '#/components/schemas/MandateRecipientRequest'
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the payout instruction in key:value
            format (e.g. payout_instruction_internal_id: 1234). It supports up to
            10 key:value pairs, whereas the key and value supports up to 50 and 500
            characters respectively.'
          type: object
      required:
      - amount
      - currency
      - payment_details
      - recipient_account
      type: object
    PayoutInstructionResponse:
      example:
        amount: 100
        metadata:
          key: metadata
        payment_details:
          mandate_id: mandate_id
          description: description
          scheduled_date: 2000-01-23
        updated_at: 2000-01-23T04:56:07.000+00:00
        sender:
          name: name
        recipient:
          account_id: account_id
          name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        currency: HKD
        payout_instruction_id: payout_instruction_id
        error:
          error_code: CREDENTIALS_INVALID
          details: details
          type: LINKING_ERROR
          message: message
          request_id: request_id
        status: CREATED
      properties:
        amount:
          description: Amount to be paid, in currency's smallest unit or “minor unit”,
            as defined in ISO 4217. For example, HKD 100.01 is represented as amount
            = 10001 (minor unit = cents). For currencies without minor units (e.g.
            VND, JPY), the amount is represented as is, without modification. For
            example, VND 15101 is represented as amount = 15101.
          example: 100
          type: integer
        currency:
          description: The currency code as defined in ISO 4217.
          example: HKD
          type: string
        payment_details:
          $ref: '#/components/schemas/PayoutDetailsResponse'
        recipient:
          $ref: '#/components/schemas/PayoutRecipient'
        sender:
          $ref: '#/components/schemas/PayoutSender'
        payout_instruction_id:
          description: Finverse Payout Instruction ID
          type: string
        status:
          description: Possible values - CREATED, PROCESSING, EXECUTED, CANCELLED,
            FAILED.
          enum:
          - CREATED
          - PROCESSING
          - EXECUTED
          - CANCELLED
          - FAILED
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the payout instruction in key:value
            format (e.g. payout_instruction_internal_id: 1234). It supports up to
            10 key:value pairs, whereas the key and value supports up to 50 and 500
            characters respectively.'
          type: object
        created_at:
          description: Timestamp of when the recipient was created in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
        updated_at:
          description: Timestamp of when the recipient was last updated in ISO format
            (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/FvErrorModelV2'
      type: object
    PayoutRecipient:
      example:
        account_id: account_id
        name: name
      properties:
        name:
          description: Merchant account name
          type: string
        account_id:
          description: Merchant account ID assigned by Finverse
          type: string
      type: object
    PayoutSender:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    PayoutDetails:
      example:
        mandate_id: mandate_id
        description: description
        scheduled_date: 2000-01-23
      properties:
        mandate_id:
          description: The mandate used to execute payments for this payout instruction.
            Currency for the mandate must be supported by the recipient account
          type: string
        description:
          description: A description for the payment (that will appear as the transaction
            description on bank statements)
          type: string
        scheduled_date:
          description: YYYY-MM-DD, date (in UTC) to execute the payment, must be 1
            day later than current date
          format: date
          type: string
      required:
      - mandate_id
      - scheduled_date
      type: object
    PayoutDetailsResponse:
      example:
        mandate_id: mandate_id
        description: description
        scheduled_date: 2000-01-23
      properties:
        mandate_id:
          description: The mandate used to execute payments for this payout instruction.
            Currency for the mandate must be supported by the recipient account
          type: string
        description:
          description: A description for the payment (that will appear as the transaction
            description on bank statements)
          type: string
        scheduled_date:
          description: YYYY-MM-DD, date (in UTC) to execute the payment, must be 1
            day later than current date
          format: date
          type: string
      type: object
    CreatePaymentInstructionResponse:
      example:
        payment_instruction_id: payment_instruction_id
      properties:
        payment_instruction_id:
          type: string
      type: object
    GetPaymentInstructionsResponse:
      example:
        payment_instruction:
          end_date: 2000-01-23
          amount: 123.45
          reference_id: reference_id
          payment_instruction_id: 01BX5ZZKBKACTAV9WEVGEMMVRY
          sender_name: Jane Doe
          recipient_account_id: Something
          type: DEBIT_AUTHORIZATION
          frequency: DAILY, WEEKLY OR MONTHLY
          user_id: 01BX5ZZKBKACTAV9WEVGEMMVRY
          sender_account:
            raw: raw
            institution_id: institution_id
          last_update: 2000-01-23T04:56:07.000+00:00
          sender_account_id: The sender account ID
          currency: HKD
          login_identity_id: 01BX5ZZKBKACTAV9WEVGEMMVRY
          recipient_name: John Wick
          remarks: This is regular payment to pay for loan
          start_date: 2000-01-23
          status: UNKNOWN, STARTED, SUBMITTED, FAILED, NOT_SUPPORTED OR TEMPORARILY_UNAVAILABLE_FOR_INSTITUTION
          info: '{}'
      properties:
        payment_instruction:
          $ref: '#/components/schemas/PaymentInstruction'
      type: object
    CustomerPaymentInstruction:
      example:
        end_date: 2000-01-23
        amount: 123.45
        user_id: 01BX5ZZKBKACTAV9WEVGEMMVRY
        sender_account_id: Something
        sender_name: Jane Doe
        currency: HKD
        recipient_account_id: Something
        type: DEBIT_AUTHORIZATION
        recipient_name: John Wick
        remarks: This is regular payment to pay for loan
        start_date: 2000-01-23
        frequency: DAILY, WEEKLY OR MONTHLY
      properties:
        user_id:
          description: A id of the user of this payment, need to equal to userId when
            creating link
          example: 01BX5ZZKBKACTAV9WEVGEMMVRY
          type: string
        type:
          description: Type of payment is being created, please check Documentation
            on which payment type is supported in each institution
          enum:
          - DEBIT_AUTHORIZATION
          type: string
        recipient_name:
          description: The recipient name
          example: John Wick
          type: string
        recipient_account_id:
          description: The recipient account Id
          example: Something
          type: string
        sender_name:
          description: The sender name
          example: Jane Doe
          type: string
        sender_account_id:
          description: The sender account Id
          example: Something
          type: string
        start_date:
          description: When the payment should start
          format: date
          nullable: true
          type: string
        end_date:
          description: When the payment should stop
          format: date
          nullable: true
          type: string
        currency:
          description: The currency for the payment
          example: HKD
          type: string
        amount:
          description: The payment amount
          example: 123.45
          type: number
        frequency:
          description: How often the payment should be executed
          example: DAILY, WEEKLY OR MONTHLY
          type: string
        remarks:
          description: Related remarks about this instruction
          example: This is regular payment to pay for loan
          type: string
      required:
      - type
      - user_id
      type: object
    PaymentInstruction:
      example:
        end_date: 2000-01-23
        amount: 123.45
        reference_id: reference_id
        payment_instruction_id: 01BX5ZZKBKACTAV9WEVGEMMVRY
        sender_name: Jane Doe
        recipient_account_id: Something
        type: DEBIT_AUTHORIZATION
        frequency: DAILY, WEEKLY OR MONTHLY
        user_id: 01BX5ZZKBKACTAV9WEVGEMMVRY
        sender_account:
          raw: raw
          institution_id: institution_id
        last_update: 2000-01-23T04:56:07.000+00:00
        sender_account_id: The sender account ID
        currency: HKD
        login_identity_id: 01BX5ZZKBKACTAV9WEVGEMMVRY
        recipient_name: John Wick
        remarks: This is regular payment to pay for loan
        start_date: 2000-01-23
        status: UNKNOWN, STARTED, SUBMITTED, FAILED, NOT_SUPPORTED OR TEMPORARILY_UNAVAILABLE_FOR_INSTITUTION
        info: '{}'
      properties:
        payment_instruction_id:
          description: An id of the this payment
          example: 01BX5ZZKBKACTAV9WEVGEMMVRY
          type: string
        user_id:
          description: An id of the user of this payment, need to equal to userId
            when creating link
          example: 01BX5ZZKBKACTAV9WEVGEMMVRY
          type: string
        login_identity_id:
          description: An id that links this payment to a specific Login Identity
          example: 01BX5ZZKBKACTAV9WEVGEMMVRY
          type: string
        type:
          description: Type of payment that was created, please check Documentation
            on which payment type is supported in each institution
          enum:
          - DEBIT_AUTHORIZATION
          type: string
        recipient_name:
          description: The recipient name
          example: John Wick
          type: string
        recipient_account_id:
          description: The recipient account Id
          example: Something
          type: string
        sender_name:
          description: The sender name
          example: Jane Doe
          type: string
        sender_account:
          $ref: '#/components/schemas/PaymentAccount'
        sender_account_id:
          description: The sender account Id
          example: The sender account ID
          type: string
        start_date:
          description: When the payment should start
          format: date
          nullable: true
          type: string
        end_date:
          description: When the payment should stop
          format: date
          nullable: true
          type: string
        currency:
          description: The currency for the payment
          example: HKD
          type: string
        amount:
          description: The payment amount
          example: 123.45
          type: number
        frequency:
          description: How often the payment should be executed
          example: DAILY, WEEKLY OR MONTHLY
          type: string
        remarks:
          description: Related remarks about this instruction
          example: This is regular payment to pay for loan
          type: string
        status:
          description: Status of the payment
          example: UNKNOWN, STARTED, SUBMITTED, FAILED, NOT_SUPPORTED OR TEMPORARILY_UNAVAILABLE_FOR_INSTITUTION
          type: string
        reference_id:
          description: Reference identification returned by institution
          type: string
        last_update:
          format: date-time
          type: string
        info:
          description: Extra information collected for this payment instruction
          properties: {}
          type: object
      type: object
    CreateMandateRequest:
      example:
        metadata:
          key: metadata
        sender:
          user_type: INDIVIDUAL
          user_details:
          - values:
            - values
            - values
            - values
            - values
            - values
            details_type: HK_ID
          - values:
            - values
            - values
            - values
            - values
            - values
            details_type: HK_ID
          - values:
            - values
            - values
            - values
            - values
            - values
            details_type: HK_ID
          - values:
            - values
            - values
            - values
            - values
            - values
            details_type: HK_ID
          - values:
            - values
            - values
            - values
            - values
            - values
            details_type: HK_ID
          name: name
          external_user_id: external_user_id
        mandate_details:
          end_date: 2000-01-23
          payment_schedule:
            amount: 100
            frequency: DAILY
          transaction_limits:
            period: DAILY
            max_period_amount: 0
            max_period_count: 6
            max_transaction_amount: 1
          mandate_bank_reference: mandate_bank_reference
          description: description
          currency: currency
          start_date: 2000-01-23
        recipient_account:
          account_id: account_id
      properties:
        recipient_account:
          $ref: '#/components/schemas/MandateRecipientRequest'
        sender:
          $ref: '#/components/schemas/CreateMandateSender'
        mandate_details:
          $ref: '#/components/schemas/MandateDetails'
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the mandate in key:value format (e.g.
            mandate_internal_id: 1234). It supports up to 10 key:value pairs, whereas
            the key and value supports up to 50 and 500 characters respectively.'
          type: object
      required:
      - mandate_details
      - recipient_account
      - sender
      type: object
    CreateMandateWithSenderAccountRequest:
      example:
        metadata:
          key: metadata
        mandate_details:
          end_date: 2000-01-23
          payment_schedule:
            amount: 100
            frequency: DAILY
          transaction_limits:
            period: DAILY
            max_period_amount: 0
            max_period_count: 6
            max_transaction_amount: 1
          mandate_bank_reference: mandate_bank_reference
          description: description
          currency: currency
          start_date: 2000-01-23
        recipient_account:
          account_id: account_id
        sender_account:
          account_id: account_id
      properties:
        recipient_account:
          $ref: '#/components/schemas/MandateRecipientRequest'
        sender_account:
          $ref: '#/components/schemas/MandateSenderAccountRequest'
        mandate_details:
          $ref: '#/components/schemas/MandateDetails'
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the mandate in key:value format (e.g.
            mandate_internal_id: 1234). It supports up to 10 key:value pairs, whereas
            the key and value supports up to 50 and 500 characters respectively.'
          type: object
      required:
      - mandate_details
      - recipient_account
      - sender_account
      type: object
    CreateMandateResponse:
      example:
        fees:
        - paid_by_account_id: The payment account ID
          amount: 100
          currency: HKD
          paid_by: RECIPIENT
        - paid_by_account_id: The payment account ID
          amount: 100
          currency: HKD
          paid_by: RECIPIENT
        metadata:
          key: metadata
        updated_at: 2000-01-23T04:56:07.000+00:00
        sender:
          user_type: INDIVIDUAL
          user_id: user_id
          user_details:
          - values:
            - values
            - values
            - values
            - values
            - values
            details_type: HK_ID
          - values:
            - values
            - values
            - values
            - values
            - values
            details_type: HK_ID
          name: name
          external_user_id: external_user_id
        mandate_details:
          end_date: 2000-01-23
          payment_schedule:
            amount: 100
            frequency: DAILY
          transaction_limits:
            period: DAILY
            max_period_amount: 0
            max_period_count: 6
            max_transaction_amount: 1
          mandate_bank_reference: mandate_bank_reference
          description: description
          currency: currency
          start_date: 2000-01-23
        recipient_account:
          account_type: SETTLEMENT_ACCOUNT
          account_id: account_id
        sender_account:
          account_number:
            number: number
            type: LOCAL
          account_type: EXTERNAL_ACCOUNT
          metadata:
            key: metadata
          account_id: sender_account_id
          user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
          account_number_masked: account_number_masked
          accountholder_name: Chan Li Pak
          institution_id: hsbc-hk
        recipient:
          name: name
        mandate_id: mandate_id
        error:
          error_code: CREDENTIALS_INVALID
          details: details
          type: LINKING_ERROR
          message: message
          request_id: request_id
        status: AUTHORIZATION_REQUIRED
      properties:
        updated_at:
          description: Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
        mandate_id:
          description: Finverse Mandate ID (ULID)
          type: string
        status:
          description: Mandate status
          enum:
          - AUTHORIZATION_REQUIRED
          - AUTHORIZING
          - PROCESSING
          - SUBMITTED
          - SUCCEEDED
          - FAILED
          - REVOKED
          type: string
        recipient:
          $ref: '#/components/schemas/MandateRecipient'
        recipient_account:
          $ref: '#/components/schemas/MandateRecipientAccount'
        sender:
          $ref: '#/components/schemas/GetMandateSender'
        sender_account:
          $ref: '#/components/schemas/MandateSenderAccount'
        mandate_details:
          $ref: '#/components/schemas/MandateDetails'
        fees:
          items:
            $ref: '#/components/schemas/Fee'
          type: array
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the mandate in key:value format (e.g.
            mandate_internal_id: 1234). It supports up to 10 key:value pairs, whereas
            the key and value supports up to 50 and 500 characters respectively.'
          type: object
        error:
          $ref: '#/components/schemas/FvErrorModelV2'
      required:
      - mandate_details
      - mandate_id
      - recipient
      - sender
      - status
      - updated_at
      type: object
    CreatePaymentLinkRequest:
      example:
        mode: PAYMENT
        amount: 100
        metadata:
          key: metadata
        link_customizations:
          language: en
          redirect_uri: redirect_uri
          ui_mode: redirect
        payment_details:
          description: description
          external_invoice_number: external_invoice_number
        sender:
          name: Chan Li Pak
          email: email
          external_user_id: external_user_id
        currency: HKD
        unique_reference_id: unique_reference_id
      properties:
        amount:
          description: The amount of the payment. Expressed in currency's smallest
            unit or “minor unit”, as defined in ISO 4217.
          example: 100
          minimum: 1
          type: integer
        currency:
          example: HKD
          maxLength: 3
          minLength: 3
          type: string
        link_customizations:
          $ref: '#/components/schemas/PaymentLinkCustomizations'
        mode:
          description: The payment link mode
          enum:
          - PAYMENT
          example: PAYMENT
          type: string
        payment_details:
          $ref: '#/components/schemas/PaymentLinkDetails'
        sender:
          $ref: '#/components/schemas/PaymentLinkSender'
        unique_reference_id:
          description: Unique reference id to identifying the payment to be collected.
          minLength: 1
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the payment link in key:value format
            (e.g. payment_id: 1234). It supports up to 10 key:value pairs, whereas
            the key and value supports up to 50 and 500 characters respectively.'
          type: object
      required:
      - amount
      - currency
      - mode
      - sender
      - unique_reference_id
      type: object
    PaymentLinkDetails:
      example:
        description: description
        external_invoice_number: external_invoice_number
      properties:
        description:
          type: string
        external_invoice_number:
          description: For external invoice reference
          type: string
      type: object
    PaymentLinkSender:
      example:
        name: Chan Li Pak
        email: email
        external_user_id: external_user_id
      properties:
        email:
          format: email
          type: string
        external_user_id:
          description: Customer App's user ID, representing the end-user making the
            payment.
          minLength: 1
          type: string
        name:
          description: Accountholder name of the sender's account
          example: Chan Li Pak
          minLength: 1
          type: string
      required:
      - external_user_id
      - name
      type: object
    PaymentLinkResponse:
      example:
        amount: 100
        metadata:
          key: metadata
        mandate:
          fees:
          - paid_by_account_id: The payment account ID
            amount: 100
            currency: HKD
            paid_by: RECIPIENT
          - paid_by_account_id: The payment account ID
            amount: 100
            currency: HKD
            paid_by: RECIPIENT
          metadata:
            key: metadata
          updated_at: 2000-01-23T04:56:07.000+00:00
          sender:
            user_type: INDIVIDUAL
            user_id: user_id
            user_details:
            - values:
              - values
              - values
              - values
              - values
              - values
              details_type: HK_ID
            - values:
              - values
              - values
              - values
              - values
              - values
              details_type: HK_ID
            name: name
            external_user_id: external_user_id
          mandate_details:
            end_date: 2000-01-23
            payment_schedule:
              amount: 100
              frequency: DAILY
            transaction_limits:
              period: DAILY
              max_period_amount: 0
              max_period_count: 6
              max_transaction_amount: 1
            mandate_bank_reference: mandate_bank_reference
            description: description
            currency: currency
            start_date: 2000-01-23
          recipient_account:
            account_type: SETTLEMENT_ACCOUNT
            account_id: account_id
          sender_account:
            account_number:
              number: number
              type: LOCAL
            account_type: EXTERNAL_ACCOUNT
            metadata:
              key: metadata
            account_id: sender_account_id
            user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
            account_number_masked: account_number_masked
            accountholder_name: Chan Li Pak
            institution_id: hsbc-hk
          recipient:
            name: name
          mandate_id: mandate_id
          error:
            error_code: CREDENTIALS_INVALID
            details: details
            type: LINKING_ERROR
            message: message
            request_id: request_id
          status: AUTHORIZATION_REQUIRED
        payment_details:
          description: description
          external_invoice_number: external_invoice_number
        payment_link_id: payment_link_id
        created_at: 2000-01-23T04:56:07.000+00:00
        unique_reference_id: unique_reference_id
        url: url
        mode: PAYMENT
        link_customizations:
          language: en
          redirect_uri: redirect_uri
          ui_mode: redirect
        expires_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        sender:
          user_id: user_id
          name: Chan Li Pak
          email: email
          external_user_id: external_user_id
        currency: HKD
        payment:
          amount: 100
          fees:
          - paid_by_account_id: The payment account ID
            amount: 100
            currency: HKD
            paid_by: RECIPIENT
          - paid_by_account_id: The payment account ID
            amount: 100
            currency: HKD
            paid_by: RECIPIENT
          metadata:
            key: metadata
          payment_details:
            transaction_reference_id: transaction_reference_id
            description: description
            mandate_id: mandate_id
          recipient_account:
            account_type: SETTLEMENT_ACCOUNT
            account_id: account_id
          created_at: 2000-01-23T04:56:07.000+00:00
          type: MANDATE
          error:
            error_code: CREDENTIALS_INVALID
            details: details
            type: LINKING_ERROR
            message: message
            request_id: request_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          sender:
            user_type: INDIVIDUAL
            user_id: user_id
            user_details:
            - values:
              - values
              - values
              - values
              - values
              - values
              details_type: HK_ID
            - values:
              - values
              - values
              - values
              - values
              - values
              details_type: HK_ID
            name: name
            external_user_id: external_user_id
          payment_id: payment_id
          sender_account:
            account_number:
              number: number
              type: LOCAL
            account_type: EXTERNAL_ACCOUNT
            metadata:
              key: metadata
            account_id: sender_account_id
            user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
            account_number_masked: account_number_masked
            accountholder_name: Chan Li Pak
            institution_id: hsbc-hk
          recipient:
            name: name
          currency: HKD
          status: AUTHORIZATION_REQUIRED
        status: CREATED
      properties:
        payment_link_id:
          description: Finverse Payment Link ID
          type: string
        amount:
          description: The amount of the payment. Expressed in currency's smallest
            unit or “minor unit”, as defined in ISO 4217.
          example: 100
          type: integer
        currency:
          example: HKD
          type: string
        link_customizations:
          $ref: '#/components/schemas/PaymentLinkCustomizations'
        mode:
          description: The payment link mode
          enum:
          - PAYMENT
          example: PAYMENT
          type: string
        payment_details:
          $ref: '#/components/schemas/PaymentLinkDetails'
        unique_reference_id:
          description: Unique reference id to identifying the payment to be collected.
          minLength: 1
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the payment link in key:value format
            (e.g. payment_id: 1234). It supports up to 10 key:value pairs, whereas
            the key and value supports up to 50 and 500 characters respectively.'
          type: object
        url:
          description: The URL for payment link
          type: string
        status:
          description: The status of payment link
          enum:
          - CREATED
          - PAID
          - EXPIRED
          type: string
        expires_at:
          description: Timestamp of when the payment link was or will expired in ISO
            format (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
        created_at:
          description: Timestamp of when the payment link was created in ISO format
            (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
        updated_at:
          description: Timestamp of when the payment link was last updated in ISO
            format (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
        mandate:
          $ref: '#/components/schemas/GetMandateResponse'
        payment:
          $ref: '#/components/schemas/PaymentResponse'
        sender:
          $ref: '#/components/schemas/PaymentLinkSenderResponse'
      type: object
    PaymentLinkSenderResponse:
      example:
        user_id: user_id
        name: Chan Li Pak
        email: email
        external_user_id: external_user_id
      properties:
        email:
          format: email
          type: string
        external_user_id:
          description: Customer App's user ID, representing the end-user making the
            payment.
          minLength: 1
          type: string
        name:
          description: Accountholder name of the sender's account
          example: Chan Li Pak
          minLength: 1
          type: string
        user_id:
          description: A unique identifier generated after creating sender
          type: string
      type: object
    Fee:
      example:
        paid_by_account_id: The payment account ID
        amount: 100
        currency: HKD
        paid_by: RECIPIENT
      properties:
        amount:
          description: The amount of fee for a single transaction. Expressed in currency's
            smallest unit or “minor unit”, as defined in ISO 4217.
          example: 100
          type: integer
        currency:
          example: HKD
          type: string
        paid_by:
          enum:
          - RECIPIENT
          - SENDER
          example: RECIPIENT
          type: string
        paid_by_account_id:
          description: The payment account Id
          example: The payment account ID
          type: string
      required:
      - amount
      type: object
    GetLineItemsForDisplayResponse:
      example:
        line_items:
        - amount: amount
          item_type: AMOUNT_DUE
          currency: currency
        - amount: amount
          item_type: AMOUNT_DUE
          currency: currency
      properties:
        line_items:
          items:
            $ref: '#/components/schemas/LineItem'
          type: array
      type: object
    LineItem:
      example:
        amount: amount
        item_type: AMOUNT_DUE
        currency: currency
      properties:
        currency:
          type: string
        amount:
          description: The amount in decimal
          type: string
        item_type:
          enum:
          - AMOUNT_DUE
          - SURCHARGE
          - TOTAL
          type: string
      type: object
    SetMandateInstitutionRequest:
      example:
        institution_id: institution_id
      properties:
        institution_id:
          description: Finverse Institution ID
          type: string
      required:
      - institution_id
      type: object
    SetMandateInstitutionResponse:
      example:
        mandate_id: mandate_id
      properties:
        mandate_id:
          description: Finverse Mandate ID
          type: string
      required:
      - mandate_id
      type: object
    GetMandateResponse:
      example:
        fees:
        - paid_by_account_id: The payment account ID
          amount: 100
          currency: HKD
          paid_by: RECIPIENT
        - paid_by_account_id: The payment account ID
          amount: 100
          currency: HKD
          paid_by: RECIPIENT
        metadata:
          key: metadata
        updated_at: 2000-01-23T04:56:07.000+00:00
        sender:
          user_type: INDIVIDUAL
          user_id: user_id
          user_details:
          - values:
            - values
            - values
            - values
            - values
            - values
            details_type: HK_ID
          - values:
            - values
            - values
            - values
            - values
            - values
            details_type: HK_ID
          name: name
          external_user_id: external_user_id
        mandate_details:
          end_date: 2000-01-23
          payment_schedule:
            amount: 100
            frequency: DAILY
          transaction_limits:
            period: DAILY
            max_period_amount: 0
            max_period_count: 6
            max_transaction_amount: 1
          mandate_bank_reference: mandate_bank_reference
          description: description
          currency: currency
          start_date: 2000-01-23
        recipient_account:
          account_type: SETTLEMENT_ACCOUNT
          account_id: account_id
        sender_account:
          account_number:
            number: number
            type: LOCAL
          account_type: EXTERNAL_ACCOUNT
          metadata:
            key: metadata
          account_id: sender_account_id
          user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
          account_number_masked: account_number_masked
          accountholder_name: Chan Li Pak
          institution_id: hsbc-hk
        recipient:
          name: name
        mandate_id: mandate_id
        error:
          error_code: CREDENTIALS_INVALID
          details: details
          type: LINKING_ERROR
          message: message
          request_id: request_id
        status: AUTHORIZATION_REQUIRED
      properties:
        updated_at:
          description: Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
        mandate_id:
          description: Finverse Mandate ID (ULID)
          type: string
        status:
          description: Mandate Status
          enum:
          - AUTHORIZATION_REQUIRED
          - AUTHORIZING
          - PROCESSING
          - SUBMITTED
          - SUCCEEDED
          - FAILED
          - REVOKED
          type: string
        recipient:
          $ref: '#/components/schemas/MandateRecipient'
        recipient_account:
          $ref: '#/components/schemas/MandateRecipientAccount'
        sender:
          $ref: '#/components/schemas/GetMandateSender'
        sender_account:
          $ref: '#/components/schemas/MandateSenderAccount'
        mandate_details:
          $ref: '#/components/schemas/MandateDetails'
        fees:
          items:
            $ref: '#/components/schemas/Fee'
          type: array
        error:
          $ref: '#/components/schemas/FvErrorModelV2'
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the mandate in key:value format (e.g.
            mandate_internal_id: 1234). It supports up to 10 key:value pairs, whereas
            the key and value supports up to 50 and 500 characters respectively.'
          type: object
      required:
      - mandate_details
      - mandate_id
      - recipient
      - sender
      - status
      - updated_at
      type: object
    ListMandatesResponse:
      example:
        total_mandates: 0
        mandates:
        - fees:
          - paid_by_account_id: The payment account ID
            amount: 100
            currency: HKD
            paid_by: RECIPIENT
          - paid_by_account_id: The payment account ID
            amount: 100
            currency: HKD
            paid_by: RECIPIENT
          metadata:
            key: metadata
          updated_at: 2000-01-23T04:56:07.000+00:00
          sender:
            user_type: INDIVIDUAL
            user_id: user_id
            user_details:
            - values:
              - values
              - values
              - values
              - values
              - values
              details_type: HK_ID
            - values:
              - values
              - values
              - values
              - values
              - values
              details_type: HK_ID
            name: name
            external_user_id: external_user_id
          mandate_details:
            end_date: 2000-01-23
            payment_schedule:
              amount: 100
              frequency: DAILY
            transaction_limits:
              period: DAILY
              max_period_amount: 0
              max_period_count: 6
              max_transaction_amount: 1
            mandate_bank_reference: mandate_bank_reference
            description: description
            currency: currency
            start_date: 2000-01-23
          recipient_account:
            account_type: SETTLEMENT_ACCOUNT
            account_id: account_id
          sender_account:
            account_number:
              number: number
              type: LOCAL
            account_type: EXTERNAL_ACCOUNT
            metadata:
              key: metadata
            account_id: sender_account_id
            user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
            account_number_masked: account_number_masked
            accountholder_name: Chan Li Pak
            institution_id: hsbc-hk
          recipient:
            name: name
          mandate_id: mandate_id
          error:
            error_code: CREDENTIALS_INVALID
            details: details
            type: LINKING_ERROR
            message: message
            request_id: request_id
          status: AUTHORIZATION_REQUIRED
        - fees:
          - paid_by_account_id: The payment account ID
            amount: 100
            currency: HKD
            paid_by: RECIPIENT
          - paid_by_account_id: The payment account ID
            amount: 100
            currency: HKD
            paid_by: RECIPIENT
          metadata:
            key: metadata
          updated_at: 2000-01-23T04:56:07.000+00:00
          sender:
            user_type: INDIVIDUAL
            user_id: user_id
            user_details:
            - values:
              - values
              - values
              - values
              - values
              - values
              details_type: HK_ID
            - values:
              - values
              - values
              - values
              - values
              - values
              details_type: HK_ID
            name: name
            external_user_id: external_user_id
          mandate_details:
            end_date: 2000-01-23
            payment_schedule:
              amount: 100
              frequency: DAILY
            transaction_limits:
              period: DAILY
              max_period_amount: 0
              max_period_count: 6
              max_transaction_amount: 1
            mandate_bank_reference: mandate_bank_reference
            description: description
            currency: currency
            start_date: 2000-01-23
          recipient_account:
            account_type: SETTLEMENT_ACCOUNT
            account_id: account_id
          sender_account:
            account_number:
              number: number
              type: LOCAL
            account_type: EXTERNAL_ACCOUNT
            metadata:
              key: metadata
            account_id: sender_account_id
            user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
            account_number_masked: account_number_masked
            accountholder_name: Chan Li Pak
            institution_id: hsbc-hk
          recipient:
            name: name
          mandate_id: mandate_id
          error:
            error_code: CREDENTIALS_INVALID
            details: details
            type: LINKING_ERROR
            message: message
            request_id: request_id
          status: AUTHORIZATION_REQUIRED
      properties:
        mandates:
          items:
            $ref: '#/components/schemas/GetMandateResponse'
          type: array
        total_mandates:
          type: integer
      required:
      - total_mandates
      type: object
    MandateRecipient:
      example:
        name: name
      properties:
        name:
          description: Merchant account name
          type: string
      required:
      - name
      type: object
    MandateRecipientAccount:
      example:
        account_type: SETTLEMENT_ACCOUNT
        account_id: account_id
      properties:
        account_id:
          description: Merchant account ID assigned by Finverse
          type: string
        account_type:
          description: Type of recipient account.
          enum:
          - EXTERNAL_ACCOUNT
          - SETTLEMENT_ACCOUNT
          example: SETTLEMENT_ACCOUNT
          type: string
      required:
      - account_id
      - account_type
      type: object
    MandateRecipientRequest:
      example:
        account_id: account_id
      properties:
        account_id:
          description: Merchant account ID assigned by Finverse
          type: string
      required:
      - account_id
      type: object
    MandateSenderAccountRequest:
      example:
        account_id: account_id
      properties:
        account_id:
          description: account ID assigned by Finverse
          type: string
      required:
      - account_id
      type: object
    CreateMandateSender:
      example:
        user_type: INDIVIDUAL
        user_details:
        - values:
          - values
          - values
          - values
          - values
          - values
          details_type: HK_ID
        - values:
          - values
          - values
          - values
          - values
          - values
          details_type: HK_ID
        - values:
          - values
          - values
          - values
          - values
          - values
          details_type: HK_ID
        - values:
          - values
          - values
          - values
          - values
          - values
          details_type: HK_ID
        - values:
          - values
          - values
          - values
          - values
          - values
          details_type: HK_ID
        name: name
        external_user_id: external_user_id
      properties:
        name:
          type: string
        external_user_id:
          description: Customer App's user ID, representing the end-user making the
            payment.
          type: string
        user_type:
          description: Type of account held by the Sender at the Institution. Possible
            values are INDIVIDUAL, BUSINESS
          enum:
          - INDIVIDUAL
          - BUSINESS
          type: string
        user_details:
          description: Sender details which will be used for fraud checking.
          items:
            $ref: '#/components/schemas/SenderDetail'
          maxItems: 10
          type: array
      type: object
    GetMandateSender:
      example:
        user_type: INDIVIDUAL
        user_id: user_id
        user_details:
        - values:
          - values
          - values
          - values
          - values
          - values
          details_type: HK_ID
        - values:
          - values
          - values
          - values
          - values
          - values
          details_type: HK_ID
        name: name
        external_user_id: external_user_id
      properties:
        user_id:
          description: A unique identifier generated after creating sender
          type: string
        name:
          type: string
        external_user_id:
          description: Customer App's user ID, representing the end-user making the
            payment.
          type: string
        user_type:
          description: Type of account held by the Sender at the Institution. Possible
            values are INDIVIDUAL, BUSINESS
          enum:
          - INDIVIDUAL
          - BUSINESS
          type: string
        user_details:
          description: Sender details which will be used for fraud checking.
          items:
            $ref: '#/components/schemas/SenderDetail'
          type: array
      required:
      - external_user_id
      - user_id
      - user_type
      type: object
    MandateDetails:
      example:
        end_date: 2000-01-23
        payment_schedule:
          amount: 100
          frequency: DAILY
        transaction_limits:
          period: DAILY
          max_period_amount: 0
          max_period_count: 6
          max_transaction_amount: 1
        mandate_bank_reference: mandate_bank_reference
        description: description
        currency: currency
        start_date: 2000-01-23
      properties:
        currency:
          description: ISO currency code
          type: string
        start_date:
          description: YYYY-MM-DD, must be later than or the same as the date of creation.
            If unspecified, default to the date of creation.
          format: date
          nullable: true
          type: string
        end_date:
          description: YYYY-MM-DD, must be later than the date of creation.
          format: date
          nullable: true
          type: string
        payment_schedule:
          $ref: '#/components/schemas/PaymentSchedule'
        transaction_limits:
          $ref: '#/components/schemas/TransactionLimits'
        description:
          description: End-user facing description of the mandate (used in notifications,
            and in payments if no description is provided)
          type: string
        mandate_bank_reference:
          description: A bank specific reference, what the end user may see
          type: string
      required:
      - currency
      type: object
    SenderDetail:
      example:
        values:
        - values
        - values
        - values
        - values
        - values
        details_type: HK_ID
      properties:
        details_type:
          description: The type of the details. For e.g. HK_ID, PASSPORT etc
          enum:
          - HK_ID
          - PASSPORT
          - HK_BUSINESS_REGISTRATION
          - HK_CERTIFICATE_OF_INCORPORATION
          type: string
        values:
          description: The possible values of the detail. For e.g. A123456 for HK_ID
          items:
            type: string
          maxItems: 10
          type: array
      type: object
    PaymentSchedule:
      example:
        amount: 100
        frequency: DAILY
      properties:
        amount:
          description: Amount to be paid, in currency’s smallest unit or “minor unit”,
            as defined in ISO 4217. For example, HKD 100.01 is represented as amount
            = 10001 (minor unit = cents). For currencies without minor units (e.g.
            VND, JPY), the amount is represented as is, without modification. For
            example, VND 15101 is represented as amount = 15101.
          example: 100
          type: integer
        frequency:
          description: Frequency of the payment. Possible values (DAILY, WEEKLY, MONTHLY,
            QUARTERLY, YEARLY)
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - QUARTERLY
          - YEARLY
          type: string
      required:
      - amount
      - frequency
      type: object
    TransactionLimits:
      example:
        period: DAILY
        max_period_amount: 0
        max_period_count: 6
        max_transaction_amount: 1
      properties:
        max_period_amount:
          description: Maximum amount of money that can be paid during the reference
            period (across any number of transactions). Expressed in currency's smallest
            unit or “minor unit”, as defined in ISO 4217.
          type: integer
        max_period_count:
          description: Maximum number of transactions (of any amount) that can be
            executed during the reference period.
          type: integer
        max_transaction_amount:
          description: The maximum amount of money that can be transferred in a single
            transaction under this mandate. Expressed in currency's smallest unit
            or “minor unit”, as defined in ISO 4217.
          type: integer
        period:
          description: Reference calendar periods for the payment limits. Possible
            values (DAILY, WEEKLY, MONTHLY, QUARTERLY, YEARLY)
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - QUARTERLY
          - YEARLY
          nullable: true
          type: string
      type: object
    GetMandateAuthLinkResponse:
      example:
        access_token: access_token
        link_url: link_url
        token_type: Bearer
        expires_in: 0
      properties:
        access_token:
          description: Short-lived access-token to interact with Finverse Link
          type: string
        expires_in:
          description: Access token validity duration (in seconds)
          type: integer
        link_url:
          description: URL to launch Finverse Link to authorize the mandate
          type: string
        token_type:
          enum:
          - Bearer
          type: string
      required:
      - access_token
      - expires_in
      - link_url
      - token_type
      type: object
    GetMandateAuthLinkRequest:
      example:
        link_customizations:
          products_supported:
          - ACCOUNTS
          - TRANSACTIONS
          - MANDATE
          institution_status: alpha beta supported
          user_type:
          - PERSONAL
          link_mode: real
          language: en
          countries:
          - HKG
          - SGP
          redirect_uri: redirect_uri
          ui_mode: redirect
          institution_id: hsbc-hk
        mandate_id: mandate_id
      properties:
        mandate_id:
          description: Mandate ID
          type: string
        link_customizations:
          $ref: '#/components/schemas/MandateAuthLinkCustomizations'
      required:
      - link_customizations
      - mandate_id
      type: object
    PaymentLinkCustomizations:
      example:
        language: en
        redirect_uri: redirect_uri
        ui_mode: redirect
      properties:
        language:
          description: ISO639-1 language code. Language to display when user open
            the link, default to English (en) if not specified
          example: en
          type: string
        ui_mode:
          description: The UI mode link is intended to be used in - "iframe", "auto_redirect",
            "redirect" or "standalone"
          enum:
          - iframe
          - redirect
          - auto_redirect
          - standalone
          example: redirect
          type: string
        redirect_uri:
          description: URI to redirect to. Only needed if ui_mode = redirect
          type: string
      type: object
    MandateAuthLinkCustomizations:
      example:
        products_supported:
        - ACCOUNTS
        - TRANSACTIONS
        - MANDATE
        institution_status: alpha beta supported
        user_type:
        - PERSONAL
        link_mode: real
        language: en
        countries:
        - HKG
        - SGP
        redirect_uri: redirect_uri
        ui_mode: redirect
        institution_id: hsbc-hk
      properties:
        countries:
          description: institution's country filter
          example:
          - HKG
          - SGP
          items:
            type: string
          type: array
        institution_id:
          description: Institution to preselect
          example: hsbc-hk
          type: string
        institution_status:
          description: institution's status filter
          example: alpha beta supported
          type: string
        language:
          description: ISO639-1 language code. Language to display when user open
            the link, default to English (en) if not specified
          example: en
          type: string
        link_mode:
          description: Space separated list of the tags of the institutions to view.
          example: real
          type: string
        products_supported:
          description: institution's supported product filter. For mandate authorization,
            this field should contain ["MANDATE"]
          example:
          - ACCOUNTS
          - TRANSACTIONS
          - MANDATE
          items:
            type: string
          type: array
        ui_mode:
          description: The UI mode link is intended to be used in - "iframe", "auto_redirect",
            "redirect" or "standalone"
          enum:
          - iframe
          - redirect
          - auto_redirect
          - standalone
          example: redirect
          type: string
        redirect_uri:
          description: The URI to redirect to. Required if ui_mode is "redirect" or
            "auto_redirect"
          type: string
        user_type:
          description: institution's supported user_type filter
          example:
          - PERSONAL
          items:
            type: string
          type: array
      type: object
    GetMandateAuthResponse:
      example:
        mandate_status: CREATED
        mandate_details:
          end_date: 2000-01-23
          payment_schedule:
            amount: 100
            frequency: DAILY
          transaction_limits:
            period: DAILY
            max_period_amount: 0
            max_period_count: 6
            max_transaction_amount: 1
          mandate_bank_reference: mandate_bank_reference
          description: description
          currency: currency
          start_date: 2000-01-23
        sender_type: INDIVIDUAL
        last_update: 2000-01-23T04:56:07.000+00:00
        recipient:
          name: name
        mandate_id: mandate_id
        recipient_account_id: recipient_account_id
        encryption_info:
          key_id: key_id
          jwks_url: jwks_url
        error:
          error_code: CREDENTIALS_INVALID
          details: details
          type: LINKING_ERROR
          message: message
          request_id: request_id
        institution_id: institution_id
        auth_checklist:
        - group_id: group_id
          options:
          - submitted_at: 2000-01-23T04:56:07.000+00:00
            name: INSTITUTION_CREDENTIALS_LOGIN
            submitted_by: CUSTOMER_APP
            redirect_url: redirect_url
          - submitted_at: 2000-01-23T04:56:07.000+00:00
            name: INSTITUTION_CREDENTIALS_LOGIN
            submitted_by: CUSTOMER_APP
            redirect_url: redirect_url
          type: ACCOUNT_IDENTIFICATION
          helper_text: helper_text
          required: "YES"
        - group_id: group_id
          options:
          - submitted_at: 2000-01-23T04:56:07.000+00:00
            name: INSTITUTION_CREDENTIALS_LOGIN
            submitted_by: CUSTOMER_APP
            redirect_url: redirect_url
          - submitted_at: 2000-01-23T04:56:07.000+00:00
            name: INSTITUTION_CREDENTIALS_LOGIN
            submitted_by: CUSTOMER_APP
            redirect_url: redirect_url
          type: ACCOUNT_IDENTIFICATION
          helper_text: helper_text
          required: "YES"
      properties:
        mandate_id:
          description: Finverse Mandate ID
          type: string
        mandate_status:
          description: Mandate status
          enum:
          - CREATED
          - PROCESSING
          - SUBMITTED
          - ERROR
          type: string
        recipient_account_id:
          description: Merchant account ID assigned by Finverse
          type: string
        institution_id:
          description: Finverse Institution ID. Only returned if institution_id was
            included in the request.
          type: string
        sender_type:
          description: Type of account held by the Sender at the Institution. Possible
            values are INDIVIDUAL, BUSINESS
          enum:
          - INDIVIDUAL
          - BUSINESS
          type: string
        auth_checklist:
          description: Checklist of the authorization factors needed to complete Mandate
            authorization
          items:
            $ref: '#/components/schemas/AuthChecklistFactor'
          type: array
        encryption_info:
          $ref: '#/components/schemas/MandateAuthEncryptionInfo'
        last_update:
          description: Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/FvErrorModelV2'
        mandate_details:
          $ref: '#/components/schemas/MandateDetails'
        recipient:
          $ref: '#/components/schemas/MandateRecipient'
      required:
      - auth_checklist
      - encryption_info
      - institution_id
      - last_update
      - mandate_id
      - mandate_status
      - recipient_account_id
      type: object
    MandateAuthEncryptionInfo:
      example:
        key_id: key_id
        jwks_url: jwks_url
      properties:
        jwks_url:
          type: string
        key_id:
          type: string
      required:
      - jwks_url
      - key_id
      type: object
    AuthChecklistFactor:
      example:
        group_id: group_id
        options:
        - submitted_at: 2000-01-23T04:56:07.000+00:00
          name: INSTITUTION_CREDENTIALS_LOGIN
          submitted_by: CUSTOMER_APP
          redirect_url: redirect_url
        - submitted_at: 2000-01-23T04:56:07.000+00:00
          name: INSTITUTION_CREDENTIALS_LOGIN
          submitted_by: CUSTOMER_APP
          redirect_url: redirect_url
        type: ACCOUNT_IDENTIFICATION
        helper_text: helper_text
        required: "YES"
      properties:
        type:
          description: Type of authorization factor
          enum:
          - ACCOUNT_IDENTIFICATION
          - USER_IDENTIFICATION
          - ENDUSER_CONSENT
          - ACCOUNTHOLDER_AUTHENTICATION
          type: string
        group_id:
          description: Allows grouping similar checklist item types together
          type: string
        required:
          description: Indicates whether authorization factor is known to be required
            at this time.  Possible values are YES, NO, OPTIONAL
          enum:
          - "YES"
          - "NO"
          - OPTIONAL
          type: string
        helper_text:
          description: Helper text that applies to a specific checklist item
          type: string
        options:
          description: Array of the options accepted for a specific authorization
            factor
          items:
            $ref: '#/components/schemas/AuthChecklistOptions'
          type: array
      required:
      - group_id
      - options
      - required
      - type
      type: object
    AuthChecklistOptions:
      example:
        submitted_at: 2000-01-23T04:56:07.000+00:00
        name: INSTITUTION_CREDENTIALS_LOGIN
        submitted_by: CUSTOMER_APP
        redirect_url: redirect_url
      properties:
        name:
          description: Name of authorization factor. Possible values are INSTITUTION_CREDENTIALS_LOGIN,
            INSTITUTION_OAUTH_LOGIN,
          enum:
          - INSTITUTION_CREDENTIALS_LOGIN
          - INSTITUTION_OAUTH_LOGIN
          type: string
        submitted_at:
          description: Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ) for when
            the authorization factor was submitted to Finverse
          format: date-time
          nullable: true
          type: string
        submitted_by:
          description: Indicates who submitted the authorization factor to Finverse.
            Possible values are CUSTOMER_APP, FINVERSE_LINK
          enum:
          - CUSTOMER_APP
          - FINVERSE_LINK
          type: string
        redirect_url:
          description: Redirect to bank for authentication
          type: string
      required:
      - name
      type: object
    SubmitAuthChecklistResponse:
      example:
        mandate_status: CREATED
        last_update: 2000-01-23T04:56:07.000+00:00
        mandate_id: mandate_id
        auth_checklist:
        - group_id: group_id
          options:
          - submitted_at: 2000-01-23T04:56:07.000+00:00
            name: INSTITUTION_CREDENTIALS_LOGIN
            submitted_by: CUSTOMER_APP
            redirect_url: redirect_url
          - submitted_at: 2000-01-23T04:56:07.000+00:00
            name: INSTITUTION_CREDENTIALS_LOGIN
            submitted_by: CUSTOMER_APP
            redirect_url: redirect_url
          type: ACCOUNT_IDENTIFICATION
          helper_text: helper_text
          required: "YES"
        - group_id: group_id
          options:
          - submitted_at: 2000-01-23T04:56:07.000+00:00
            name: INSTITUTION_CREDENTIALS_LOGIN
            submitted_by: CUSTOMER_APP
            redirect_url: redirect_url
          - submitted_at: 2000-01-23T04:56:07.000+00:00
            name: INSTITUTION_CREDENTIALS_LOGIN
            submitted_by: CUSTOMER_APP
            redirect_url: redirect_url
          type: ACCOUNT_IDENTIFICATION
          helper_text: helper_text
          required: "YES"
      properties:
        mandate_id:
          description: Finverse Mandate ID
          type: string
        auth_checklist:
          description: Checklist of the authorization factors needed to complete Mandate
            authorization
          items:
            $ref: '#/components/schemas/AuthChecklistFactor'
          type: array
        mandate_status:
          description: Mandate status
          enum:
          - CREATED
          - PROCESSING
          - SUBMITTED
          - ERROR
          type: string
        last_update:
          description: Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
      required:
      - auth_checklist
      - last_update
      - mandate_id
      - mandate_status
      type: object
    AuthorizeMandateRequest:
      example:
        enduser_consent: true
      properties:
        enduser_consent:
          description: Whether a consent was provided by the enduser to authorize
            a mandate
          type: boolean
      required:
      - enduser_consent
      type: object
    SubmitAuthChecklistRequest:
      example:
        message_authentication_code: message_authentication_code
        ciphertext: ciphertext
        key_id: key_id
        initialization_vector: initialization_vector
        envelope_encryption_key: envelope_encryption_key
      properties:
        key_id:
          description: The key_id that was used to encrypt the envelope key
          type: string
        envelope_encryption_key:
          description: The encrypted envelope key
          type: string
        initialization_vector:
          description: The initialization vector used for enncrypting the payload
          type: string
        message_authentication_code:
          description: The authentication code is used to authenticate the origin
            of the message
          type: string
        ciphertext:
          description: The encrypted payload that contains auth checklist items
          type: string
      required:
      - ciphertext
      - envelope_encryption_key
      - initialization_vector
      - key_id
      - message_authentication_code
      type: object
    CreateRecipientAccount:
      properties:
        accountholder_name:
          description: Accountholder name of the recipient's account
          example: Chan Li Pak
          type: string
        account_number:
          $ref: '#/components/schemas/RecipientAccountNumber'
        account_type:
          description: Type of recipient account.
          enum:
          - EXTERNAL_ACCOUNT
          example: EXTERNAL_ACCOUNT
          type: string
        currencies:
          description: List of currencies supported by the recipient account
          example:
          - HKD
          - SGD
          items:
            type: string
          type: array
        institution_id:
          description: Finverse Institution ID for the recipient’s institution.
          example: hsbc-hk
          type: string
      required:
      - account_number
      - account_type
      - accountholder_name
      - currencies
      - institution_id
      type: object
    RecipientAccountResponse:
      properties:
        recipient_account_id:
          description: A unique identifier generated after creating recipient
          type: string
        accountholder_name:
          description: Accountholder name of the recipient's account
          example: Chan Li Pak
          type: string
        account_number:
          $ref: '#/components/schemas/RecipientAccountNumber'
        account_type:
          description: Type of recipient account.
          enum:
          - EXTERNAL_ACCOUNT
          - SETTLEMENT_ACCOUNT
          example: EXTERNAL_ACCOUNT
          type: string
        currencies:
          description: List of currencies supported by the recipient account
          example:
          - HKD
          - SGD
          items:
            type: string
          type: array
        institution_id:
          description: Finverse Institution ID for the recipient’s institution.
          example: hsbc-hk
          type: string
        bank_code:
          description: 3-digit code associated with bank
          example: "004"
          type: string
        branch_code:
          description: 3-digit code used to identify specific bank branch
          example: "123"
          type: string
      type: object
    RecipientAccountNumber:
      example:
        number: number
        type: LOCAL
      properties:
        type:
          description: 'Type of account number. Possible values: LOCAL, IBAN'
          enum:
          - LOCAL
          - IBAN
          type: string
        number:
          description: Account number value
          type: string
      required:
      - number
      - type
      type: object
    MandateSenderAccount:
      example:
        account_number:
          number: number
          type: LOCAL
        account_type: EXTERNAL_ACCOUNT
        metadata:
          key: metadata
        account_id: sender_account_id
        user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
        account_number_masked: account_number_masked
        accountholder_name: Chan Li Pak
        institution_id: hsbc-hk
      properties:
        account_id:
          description: A unique identifier generated after creating sender account
          example: sender_account_id
          type: string
        accountholder_name:
          description: Accountholder name of the sender's account
          example: Chan Li Pak
          type: string
        account_number:
          $ref: '#/components/schemas/RecipientAccountNumber'
        account_number_masked:
          description: Masked Account number of the sender’s account
          type: string
        account_type:
          description: Type of sender account.
          enum:
          - EXTERNAL_ACCOUNT
          example: EXTERNAL_ACCOUNT
          type: string
        institution_id:
          description: Finverse Institution ID for the sender’s institution.
          example: hsbc-hk
          type: string
        user_id:
          description: A unique identifier generated after creating sender (Finverse
            Payment User ID)
          example: 01GY6H0JA7BS8EVGY56NSHFX2E
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the sender account in key:value format
            (e.g. sender_id: 1234). It supports up to 10 key:value pairs, whereas
            the key and value supports up to 50 and 500 characters respectively.'
          type: object
      type: object
    GetPaymentUserResponse:
      example:
        customer_app_id: customer_app_id
        autopay_consent: true
        payment_user_id: payment_user_id
      properties:
        payment_user_id:
          type: string
        customer_app_id:
          type: string
        autopay_consent:
          type: boolean
      required:
      - autopay_consent
      - customer_app_id
      - payment_user_id
      type: object
    SetAutopayConsentRequest:
      example:
        autopay_consent: true
      properties:
        autopay_consent:
          type: boolean
      required:
      - autopay_consent
      type: object
    ManualPaymentConfirmationRequest:
      example:
        account_number_last4: account_number_last4
      properties:
        account_number_last4:
          maxLength: 4
          minLength: 4
          type: string
      required:
      - account_number_last4
      type: object
    ManualPaymentConfirmationResponse:
      example:
        payment_id: payment_id
      properties:
        payment_id:
          type: string
      type: object
    ListPaymentAccountsResponse:
      example:
        payment_accounts:
        - account_number:
            number: number
            type: LOCAL
          bank_code: "004"
          account_type: EXTERNAL_ACCOUNT
          metadata:
            key: metadata
          created_at: 2000-01-23T04:56:07.000+00:00
          institution_id: hsbc-hk
          branch_code: "123"
          account_id: account_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
          account_number_masked: account_number_masked
          accountholder_name: Chan Li Pak
          currencies:
          - HKD
          - SGD
        - account_number:
            number: number
            type: LOCAL
          bank_code: "004"
          account_type: EXTERNAL_ACCOUNT
          metadata:
            key: metadata
          created_at: 2000-01-23T04:56:07.000+00:00
          institution_id: hsbc-hk
          branch_code: "123"
          account_id: account_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
          account_number_masked: account_number_masked
          accountholder_name: Chan Li Pak
          currencies:
          - HKD
          - SGD
      properties:
        payment_accounts:
          items:
            $ref: '#/components/schemas/PaymentAccountDetails'
          type: array
      type: object
    PaymentAccountDetails:
      example:
        account_number:
          number: number
          type: LOCAL
        bank_code: "004"
        account_type: EXTERNAL_ACCOUNT
        metadata:
          key: metadata
        created_at: 2000-01-23T04:56:07.000+00:00
        institution_id: hsbc-hk
        branch_code: "123"
        account_id: account_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
        account_number_masked: account_number_masked
        accountholder_name: Chan Li Pak
        currencies:
        - HKD
        - SGD
      properties:
        account_id:
          description: Payment account id
          type: string
        account_number:
          $ref: '#/components/schemas/RecipientAccountNumber'
        account_number_masked:
          description: Masked Account number of the payment account
          type: string
        account_type:
          description: Type of payment account.
          enum:
          - EXTERNAL_ACCOUNT
          - SETTLEMENT_ACCOUNT
          example: EXTERNAL_ACCOUNT
          type: string
        accountholder_name:
          description: Accountholder name of the payment account
          example: Chan Li Pak
          type: string
        institution_id:
          description: Finverse Institution ID for the payment institution.
          example: hsbc-hk
          type: string
        user_id:
          description: A unique identifier generated after creating user (Finverse
            Payment User ID)
          example: 01GY6H0JA7BS8EVGY56NSHFX2E
          type: string
        bank_code:
          description: 3-digit code associated with bank
          example: "004"
          type: string
        branch_code:
          description: 3-digit code used to identify specific bank branch
          example: "123"
          type: string
        currencies:
          description: List of currencies supported by the payment account
          example:
          - HKD
          - SGD
          items:
            type: string
          type: array
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the sender account in key:value format
            (e.g. sender_id: 1234). It supports up to 10 key:value pairs, whereas
            the key and value supports up to 50 and 500 characters respectively.'
          type: object
        created_at:
          description: Timestamp of when the payment link was created in ISO format
            (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
        updated_at:
          description: Timestamp of when the payment link was last updated in ISO
            format (YYYY-MM-DDTHH:MM:SS.SSSZ)
          format: date-time
          type: string
      type: object
    CreatePaymentAccountRequest:
      example:
        account_number:
          number: number
          type: LOCAL
        account_type: EXTERNAL_ACCOUNT
        metadata:
          key: metadata
        user_id: 01GY6H0JA7BS8EVGY56NSHFX2E
        accountholder_name: Chan Li Pak
        currencies:
        - HKD
        - SGD
        institution_id: hsbc-hk
      properties:
        account_number:
          $ref: '#/components/schemas/RecipientAccountNumber'
        account_type:
          description: Type of payment account. Currently only allow creating external
            account.
          enum:
          - EXTERNAL_ACCOUNT
          example: EXTERNAL_ACCOUNT
          type: string
        accountholder_name:
          description: Accountholder name of the payment account
          example: Chan Li Pak
          type: string
        currencies:
          description: List of currencies supported by the payment account
          example:
          - HKD
          - SGD
          items:
            type: string
          type: array
        institution_id:
          description: Finverse Institution ID for the payment institution.
          example: hsbc-hk
          type: string
        user_id:
          description: A unique identifier generated after creating user (Finverse
            Payment User ID)
          example: 01GY6H0JA7BS8EVGY56NSHFX2E
          type: string
        metadata:
          additionalProperties:
            type: string
          description: 'Additional attributes of the payment in key:value format (e.g.
            payment_internal_id: 1234). It supports up to 10 key:value pairs, whereas
            the key and value supports up to 50 and 500 characters respectively.'
          type: object
      required:
      - account_number
      - account_type
      - accountholder_name
      - institution_id
      - user_id
      type: object
    CreatePaymentUserRequest:
      example:
        metadata:
          key: metadata
        user_type: INDIVIDUAL
        user_details:
        - values:
          - values
          - values
          - values
          - values
          - values
          details_type: HK_ID
        - values:
          - values
          - values
          - values
          - values
          - values
          details_type: HK_ID
        name: name
        email: email
        external_user_id: external_user_id
      properties:
        name:
          type: string
        external_user_id:
          type: string
        user_type:
          enum:
          - INDIVIDUAL
          - BUSINESS
          type: string
        email:
          type: string
        user_details:
          items:
            $ref: '#/components/schemas/SenderDetail'
          type: array
        metadata:
          additionalProperties:
            type: string
          type: object
      required:
      - external_user_id
      - name
      type: object
    PaymentUser:
      example:
        metadata:
          key: metadata
        user_type: INDIVIDUAL
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        user_details:
        - values:
          - values
          - values
          - values
          - values
          - values
          details_type: HK_ID
        - values:
          - values
          - values
          - values
          - values
          - values
          details_type: HK_ID
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        email: email
        external_user_id: external_user_id
      properties:
        created_at:
          format: date-time
          type: string
        email:
          type: string
        external_user_id:
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        user_details:
          items:
            $ref: '#/components/schemas/SenderDetail'
          type: array
        updated_at:
          format: date-time
          type: string
        user_id:
          type: string
        user_type:
          enum:
          - INDIVIDUAL
          - BUSINESS
          type: string
      type: object
    BadRequestModel_error:
      properties:
        code:
          example: 40004.0
          type: number
        name:
          example: CREDENTIAL_NOT_STORED
          type: string
        message:
          example: Credential for this LoginIdentity is not stored. Please relink.
          type: string
        link:
          description: A link to visit for further action
          example: link.finverse.com
          type: string
      type: object
    BadRequestModelV2_error:
      properties:
        type:
          description: The error type
          enum:
          - LINK_ERROR
          - API_ERROR
          example: LINKING_ERROR
          type: string
        error_code:
          example: CREDENTIALS_INVALID
          type: string
        code:
          example: 40004.0
          type: number
        message:
          type: string
        details:
          type: string
        request_id:
          description: The request_id provided in the request header
          type: string
      required:
      - code
      - error_code
      - message
      - request_id
      - type
      type: object
  securitySchemes:
    Oauth2:
      flows:
        clientCredentials:
          scopes:
            test: Test
            account: Account
            balance: Balance
            transaction: Transaction
            credit: Credit
            investment: Investment
            institution: Institution
            link: Link
          tokenUrl: https://finverse-dev.us.auth0.com/oauth/token
      type: oauth2
x-original-swagger-version: "2.0"
