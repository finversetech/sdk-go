/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// CardDetails struct for CardDetails
type CardDetails struct {
	CardAccounts []CardAccount `json:"card_accounts,omitempty"`
	CardTotal    *CardTotal    `json:"card_total,omitempty"`
}

// NewCardDetails instantiates a new CardDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardDetails() *CardDetails {
	this := CardDetails{}
	return &this
}

// NewCardDetailsWithDefaults instantiates a new CardDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardDetailsWithDefaults() *CardDetails {
	this := CardDetails{}
	return &this
}

// GetCardAccounts returns the CardAccounts field value if set, zero value otherwise.
func (o *CardDetails) GetCardAccounts() []CardAccount {
	if o == nil || o.CardAccounts == nil {
		var ret []CardAccount
		return ret
	}
	return o.CardAccounts
}

// GetCardAccountsOk returns a tuple with the CardAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardDetails) GetCardAccountsOk() ([]CardAccount, bool) {
	if o == nil || o.CardAccounts == nil {
		return nil, false
	}
	return o.CardAccounts, true
}

// HasCardAccounts returns a boolean if a field has been set.
func (o *CardDetails) HasCardAccounts() bool {
	if o != nil && o.CardAccounts != nil {
		return true
	}

	return false
}

// SetCardAccounts gets a reference to the given []CardAccount and assigns it to the CardAccounts field.
func (o *CardDetails) SetCardAccounts(v []CardAccount) {
	o.CardAccounts = v
}

// GetCardTotal returns the CardTotal field value if set, zero value otherwise.
func (o *CardDetails) GetCardTotal() CardTotal {
	if o == nil || o.CardTotal == nil {
		var ret CardTotal
		return ret
	}
	return *o.CardTotal
}

// GetCardTotalOk returns a tuple with the CardTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardDetails) GetCardTotalOk() (*CardTotal, bool) {
	if o == nil || o.CardTotal == nil {
		return nil, false
	}
	return o.CardTotal, true
}

// HasCardTotal returns a boolean if a field has been set.
func (o *CardDetails) HasCardTotal() bool {
	if o != nil && o.CardTotal != nil {
		return true
	}

	return false
}

// SetCardTotal gets a reference to the given CardTotal and assigns it to the CardTotal field.
func (o *CardDetails) SetCardTotal(v CardTotal) {
	o.CardTotal = &v
}

func (o CardDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CardAccounts != nil {
		toSerialize["card_accounts"] = o.CardAccounts
	}
	if o.CardTotal != nil {
		toSerialize["card_total"] = o.CardTotal
	}
	return json.Marshal(toSerialize)
}

type NullableCardDetails struct {
	value *CardDetails
	isSet bool
}

func (v NullableCardDetails) Get() *CardDetails {
	return v.value
}

func (v *NullableCardDetails) Set(val *CardDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCardDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCardDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardDetails(val *CardDetails) *NullableCardDetails {
	return &NullableCardDetails{value: val, isSet: true}
}

func (v NullableCardDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
