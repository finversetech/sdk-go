/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the PaymentFvLinkResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentFvLinkResponse{}

// PaymentFvLinkResponse struct for PaymentFvLinkResponse
type PaymentFvLinkResponse struct {
	PaymentId            *string               `json:"payment_id,omitempty"`
	Status               *string               `json:"status,omitempty"`
	PaymentDetails       *PaymentFvLinkDetails `json:"payment_details,omitempty"`
	Error                *FvEmbeddedErrorModel `json:"error,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentFvLinkResponse PaymentFvLinkResponse

// NewPaymentFvLinkResponse instantiates a new PaymentFvLinkResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentFvLinkResponse() *PaymentFvLinkResponse {
	this := PaymentFvLinkResponse{}
	return &this
}

// NewPaymentFvLinkResponseWithDefaults instantiates a new PaymentFvLinkResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentFvLinkResponseWithDefaults() *PaymentFvLinkResponse {
	this := PaymentFvLinkResponse{}
	return &this
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *PaymentFvLinkResponse) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFvLinkResponse) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *PaymentFvLinkResponse) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *PaymentFvLinkResponse) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentFvLinkResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFvLinkResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentFvLinkResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PaymentFvLinkResponse) SetStatus(v string) {
	o.Status = &v
}

// GetPaymentDetails returns the PaymentDetails field value if set, zero value otherwise.
func (o *PaymentFvLinkResponse) GetPaymentDetails() PaymentFvLinkDetails {
	if o == nil || IsNil(o.PaymentDetails) {
		var ret PaymentFvLinkDetails
		return ret
	}
	return *o.PaymentDetails
}

// GetPaymentDetailsOk returns a tuple with the PaymentDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFvLinkResponse) GetPaymentDetailsOk() (*PaymentFvLinkDetails, bool) {
	if o == nil || IsNil(o.PaymentDetails) {
		return nil, false
	}
	return o.PaymentDetails, true
}

// HasPaymentDetails returns a boolean if a field has been set.
func (o *PaymentFvLinkResponse) HasPaymentDetails() bool {
	if o != nil && !IsNil(o.PaymentDetails) {
		return true
	}

	return false
}

// SetPaymentDetails gets a reference to the given PaymentFvLinkDetails and assigns it to the PaymentDetails field.
func (o *PaymentFvLinkResponse) SetPaymentDetails(v PaymentFvLinkDetails) {
	o.PaymentDetails = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *PaymentFvLinkResponse) GetError() FvEmbeddedErrorModel {
	if o == nil || IsNil(o.Error) {
		var ret FvEmbeddedErrorModel
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentFvLinkResponse) GetErrorOk() (*FvEmbeddedErrorModel, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *PaymentFvLinkResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given FvEmbeddedErrorModel and assigns it to the Error field.
func (o *PaymentFvLinkResponse) SetError(v FvEmbeddedErrorModel) {
	o.Error = &v
}

func (o PaymentFvLinkResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentFvLinkResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentId) {
		toSerialize["payment_id"] = o.PaymentId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.PaymentDetails) {
		toSerialize["payment_details"] = o.PaymentDetails
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentFvLinkResponse) UnmarshalJSON(data []byte) (err error) {
	varPaymentFvLinkResponse := _PaymentFvLinkResponse{}

	err = json.Unmarshal(data, &varPaymentFvLinkResponse)

	if err != nil {
		return err
	}

	*o = PaymentFvLinkResponse(varPaymentFvLinkResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "payment_id")
		delete(additionalProperties, "status")
		delete(additionalProperties, "payment_details")
		delete(additionalProperties, "error")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentFvLinkResponse struct {
	value *PaymentFvLinkResponse
	isSet bool
}

func (v NullablePaymentFvLinkResponse) Get() *PaymentFvLinkResponse {
	return v.value
}

func (v *NullablePaymentFvLinkResponse) Set(val *PaymentFvLinkResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentFvLinkResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentFvLinkResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentFvLinkResponse(val *PaymentFvLinkResponse) *NullablePaymentFvLinkResponse {
	return &NullablePaymentFvLinkResponse{value: val, isSet: true}
}

func (v NullablePaymentFvLinkResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentFvLinkResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
