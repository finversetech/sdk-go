/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// RelinkRequest struct for RelinkRequest
type RelinkRequest struct {
	StoreCredential bool `json:"store_credential"`
}

// NewRelinkRequest instantiates a new RelinkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelinkRequest(storeCredential bool) *RelinkRequest {
	this := RelinkRequest{}
	this.StoreCredential = storeCredential
	return &this
}

// NewRelinkRequestWithDefaults instantiates a new RelinkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelinkRequestWithDefaults() *RelinkRequest {
	this := RelinkRequest{}
	return &this
}

// GetStoreCredential returns the StoreCredential field value
func (o *RelinkRequest) GetStoreCredential() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.StoreCredential
}

// GetStoreCredentialOk returns a tuple with the StoreCredential field value
// and a boolean to check if the value has been set.
func (o *RelinkRequest) GetStoreCredentialOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StoreCredential, true
}

// SetStoreCredential sets field value
func (o *RelinkRequest) SetStoreCredential(v bool) {
	o.StoreCredential = v
}

func (o RelinkRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["store_credential"] = o.StoreCredential
	}
	return json.Marshal(toSerialize)
}

type NullableRelinkRequest struct {
	value *RelinkRequest
	isSet bool
}

func (v NullableRelinkRequest) Get() *RelinkRequest {
	return v.value
}

func (v *NullableRelinkRequest) Set(val *RelinkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRelinkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRelinkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelinkRequest(val *RelinkRequest) *NullableRelinkRequest {
	return &NullableRelinkRequest{value: val, isSet: true}
}

func (v NullableRelinkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelinkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


