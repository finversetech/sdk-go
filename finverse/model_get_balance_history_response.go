/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// GetBalanceHistoryResponse struct for GetBalanceHistoryResponse
type GetBalanceHistoryResponse struct {
	Account        *Account            `json:"account,omitempty"`
	LoginIdentity  *LoginIdentityShort `json:"login_identity,omitempty"`
	Institution    *InstitutionShort   `json:"institution,omitempty"`
	BalanceHistory []BalanceHistory    `json:"balance_history,omitempty"`
}

// NewGetBalanceHistoryResponse instantiates a new GetBalanceHistoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBalanceHistoryResponse() *GetBalanceHistoryResponse {
	this := GetBalanceHistoryResponse{}
	return &this
}

// NewGetBalanceHistoryResponseWithDefaults instantiates a new GetBalanceHistoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBalanceHistoryResponseWithDefaults() *GetBalanceHistoryResponse {
	this := GetBalanceHistoryResponse{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *GetBalanceHistoryResponse) GetAccount() Account {
	if o == nil || o.Account == nil {
		var ret Account
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBalanceHistoryResponse) GetAccountOk() (*Account, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *GetBalanceHistoryResponse) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given Account and assigns it to the Account field.
func (o *GetBalanceHistoryResponse) SetAccount(v Account) {
	o.Account = &v
}

// GetLoginIdentity returns the LoginIdentity field value if set, zero value otherwise.
func (o *GetBalanceHistoryResponse) GetLoginIdentity() LoginIdentityShort {
	if o == nil || o.LoginIdentity == nil {
		var ret LoginIdentityShort
		return ret
	}
	return *o.LoginIdentity
}

// GetLoginIdentityOk returns a tuple with the LoginIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBalanceHistoryResponse) GetLoginIdentityOk() (*LoginIdentityShort, bool) {
	if o == nil || o.LoginIdentity == nil {
		return nil, false
	}
	return o.LoginIdentity, true
}

// HasLoginIdentity returns a boolean if a field has been set.
func (o *GetBalanceHistoryResponse) HasLoginIdentity() bool {
	if o != nil && o.LoginIdentity != nil {
		return true
	}

	return false
}

// SetLoginIdentity gets a reference to the given LoginIdentityShort and assigns it to the LoginIdentity field.
func (o *GetBalanceHistoryResponse) SetLoginIdentity(v LoginIdentityShort) {
	o.LoginIdentity = &v
}

// GetInstitution returns the Institution field value if set, zero value otherwise.
func (o *GetBalanceHistoryResponse) GetInstitution() InstitutionShort {
	if o == nil || o.Institution == nil {
		var ret InstitutionShort
		return ret
	}
	return *o.Institution
}

// GetInstitutionOk returns a tuple with the Institution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBalanceHistoryResponse) GetInstitutionOk() (*InstitutionShort, bool) {
	if o == nil || o.Institution == nil {
		return nil, false
	}
	return o.Institution, true
}

// HasInstitution returns a boolean if a field has been set.
func (o *GetBalanceHistoryResponse) HasInstitution() bool {
	if o != nil && o.Institution != nil {
		return true
	}

	return false
}

// SetInstitution gets a reference to the given InstitutionShort and assigns it to the Institution field.
func (o *GetBalanceHistoryResponse) SetInstitution(v InstitutionShort) {
	o.Institution = &v
}

// GetBalanceHistory returns the BalanceHistory field value if set, zero value otherwise.
func (o *GetBalanceHistoryResponse) GetBalanceHistory() []BalanceHistory {
	if o == nil || o.BalanceHistory == nil {
		var ret []BalanceHistory
		return ret
	}
	return o.BalanceHistory
}

// GetBalanceHistoryOk returns a tuple with the BalanceHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBalanceHistoryResponse) GetBalanceHistoryOk() ([]BalanceHistory, bool) {
	if o == nil || o.BalanceHistory == nil {
		return nil, false
	}
	return o.BalanceHistory, true
}

// HasBalanceHistory returns a boolean if a field has been set.
func (o *GetBalanceHistoryResponse) HasBalanceHistory() bool {
	if o != nil && o.BalanceHistory != nil {
		return true
	}

	return false
}

// SetBalanceHistory gets a reference to the given []BalanceHistory and assigns it to the BalanceHistory field.
func (o *GetBalanceHistoryResponse) SetBalanceHistory(v []BalanceHistory) {
	o.BalanceHistory = v
}

func (o GetBalanceHistoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.LoginIdentity != nil {
		toSerialize["login_identity"] = o.LoginIdentity
	}
	if o.Institution != nil {
		toSerialize["institution"] = o.Institution
	}
	if o.BalanceHistory != nil {
		toSerialize["balance_history"] = o.BalanceHistory
	}
	return json.Marshal(toSerialize)
}

type NullableGetBalanceHistoryResponse struct {
	value *GetBalanceHistoryResponse
	isSet bool
}

func (v NullableGetBalanceHistoryResponse) Get() *GetBalanceHistoryResponse {
	return v.value
}

func (v *NullableGetBalanceHistoryResponse) Set(val *GetBalanceHistoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBalanceHistoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBalanceHistoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBalanceHistoryResponse(val *GetBalanceHistoryResponse) *NullableGetBalanceHistoryResponse {
	return &NullableGetBalanceHistoryResponse{value: val, isSet: true}
}

func (v NullableGetBalanceHistoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBalanceHistoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
