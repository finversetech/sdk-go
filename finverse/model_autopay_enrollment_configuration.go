/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"fmt"
)

// checks if the AutopayEnrollmentConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutopayEnrollmentConfiguration{}

// AutopayEnrollmentConfiguration struct for AutopayEnrollmentConfiguration
type AutopayEnrollmentConfiguration struct {
	// Indicate whether the autopay enrollment screen should be prompted to the end user
	DisplayEnrollmentScreen bool `json:"display_enrollment_screen"`
	// Indicate what value should be prefilled on the autopay enrollment screen
	EnrollmentPrefillValue string `json:"enrollment_prefill_value"`
	AdditionalProperties   map[string]interface{}
}

type _AutopayEnrollmentConfiguration AutopayEnrollmentConfiguration

// NewAutopayEnrollmentConfiguration instantiates a new AutopayEnrollmentConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutopayEnrollmentConfiguration(displayEnrollmentScreen bool, enrollmentPrefillValue string) *AutopayEnrollmentConfiguration {
	this := AutopayEnrollmentConfiguration{}
	this.DisplayEnrollmentScreen = displayEnrollmentScreen
	this.EnrollmentPrefillValue = enrollmentPrefillValue
	return &this
}

// NewAutopayEnrollmentConfigurationWithDefaults instantiates a new AutopayEnrollmentConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutopayEnrollmentConfigurationWithDefaults() *AutopayEnrollmentConfiguration {
	this := AutopayEnrollmentConfiguration{}
	return &this
}

// GetDisplayEnrollmentScreen returns the DisplayEnrollmentScreen field value
func (o *AutopayEnrollmentConfiguration) GetDisplayEnrollmentScreen() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DisplayEnrollmentScreen
}

// GetDisplayEnrollmentScreenOk returns a tuple with the DisplayEnrollmentScreen field value
// and a boolean to check if the value has been set.
func (o *AutopayEnrollmentConfiguration) GetDisplayEnrollmentScreenOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayEnrollmentScreen, true
}

// SetDisplayEnrollmentScreen sets field value
func (o *AutopayEnrollmentConfiguration) SetDisplayEnrollmentScreen(v bool) {
	o.DisplayEnrollmentScreen = v
}

// GetEnrollmentPrefillValue returns the EnrollmentPrefillValue field value
func (o *AutopayEnrollmentConfiguration) GetEnrollmentPrefillValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnrollmentPrefillValue
}

// GetEnrollmentPrefillValueOk returns a tuple with the EnrollmentPrefillValue field value
// and a boolean to check if the value has been set.
func (o *AutopayEnrollmentConfiguration) GetEnrollmentPrefillValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnrollmentPrefillValue, true
}

// SetEnrollmentPrefillValue sets field value
func (o *AutopayEnrollmentConfiguration) SetEnrollmentPrefillValue(v string) {
	o.EnrollmentPrefillValue = v
}

func (o AutopayEnrollmentConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutopayEnrollmentConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["display_enrollment_screen"] = o.DisplayEnrollmentScreen
	toSerialize["enrollment_prefill_value"] = o.EnrollmentPrefillValue

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AutopayEnrollmentConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"display_enrollment_screen",
		"enrollment_prefill_value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutopayEnrollmentConfiguration := _AutopayEnrollmentConfiguration{}

	err = json.Unmarshal(data, &varAutopayEnrollmentConfiguration)

	if err != nil {
		return err
	}

	*o = AutopayEnrollmentConfiguration(varAutopayEnrollmentConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "display_enrollment_screen")
		delete(additionalProperties, "enrollment_prefill_value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAutopayEnrollmentConfiguration struct {
	value *AutopayEnrollmentConfiguration
	isSet bool
}

func (v NullableAutopayEnrollmentConfiguration) Get() *AutopayEnrollmentConfiguration {
	return v.value
}

func (v *NullableAutopayEnrollmentConfiguration) Set(val *AutopayEnrollmentConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAutopayEnrollmentConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAutopayEnrollmentConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutopayEnrollmentConfiguration(val *AutopayEnrollmentConfiguration) *NullableAutopayEnrollmentConfiguration {
	return &NullableAutopayEnrollmentConfiguration{value: val, isSet: true}
}

func (v NullableAutopayEnrollmentConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutopayEnrollmentConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
