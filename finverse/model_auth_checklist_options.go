/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"time"
)

// AuthChecklistOptions struct for AuthChecklistOptions
type AuthChecklistOptions struct {
	// Name of authorization factor. Possible values are INSTITUTION_CREDENTIALS_LOGIN, INSTITUTION_OAUTH_LOGIN,
	Name string `json:"name"`
	// Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ) for when the authorization factor was submitted to Finverse
	SubmittedAt NullableTime `json:"submitted_at,omitempty"`
	// Indicates who submitted the authorization factor to Finverse. Possible values are CUSTOMER_APP, FINVERSE_LINK
	SubmittedBy *string `json:"submitted_by,omitempty"`
	// Redirect to bank for authentication
	RedirectUrl *string `json:"redirect_url,omitempty"`
}

// NewAuthChecklistOptions instantiates a new AuthChecklistOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthChecklistOptions(name string) *AuthChecklistOptions {
	this := AuthChecklistOptions{}
	this.Name = name
	return &this
}

// NewAuthChecklistOptionsWithDefaults instantiates a new AuthChecklistOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthChecklistOptionsWithDefaults() *AuthChecklistOptions {
	this := AuthChecklistOptions{}
	return &this
}

// GetName returns the Name field value
func (o *AuthChecklistOptions) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AuthChecklistOptions) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AuthChecklistOptions) SetName(v string) {
	o.Name = v
}

// GetSubmittedAt returns the SubmittedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthChecklistOptions) GetSubmittedAt() time.Time {
	if o == nil || o.SubmittedAt.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.SubmittedAt.Get()
}

// GetSubmittedAtOk returns a tuple with the SubmittedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthChecklistOptions) GetSubmittedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubmittedAt.Get(), o.SubmittedAt.IsSet()
}

// HasSubmittedAt returns a boolean if a field has been set.
func (o *AuthChecklistOptions) HasSubmittedAt() bool {
	if o != nil && o.SubmittedAt.IsSet() {
		return true
	}

	return false
}

// SetSubmittedAt gets a reference to the given NullableTime and assigns it to the SubmittedAt field.
func (o *AuthChecklistOptions) SetSubmittedAt(v time.Time) {
	o.SubmittedAt.Set(&v)
}

// SetSubmittedAtNil sets the value for SubmittedAt to be an explicit nil
func (o *AuthChecklistOptions) SetSubmittedAtNil() {
	o.SubmittedAt.Set(nil)
}

// UnsetSubmittedAt ensures that no value is present for SubmittedAt, not even an explicit nil
func (o *AuthChecklistOptions) UnsetSubmittedAt() {
	o.SubmittedAt.Unset()
}

// GetSubmittedBy returns the SubmittedBy field value if set, zero value otherwise.
func (o *AuthChecklistOptions) GetSubmittedBy() string {
	if o == nil || o.SubmittedBy == nil {
		var ret string
		return ret
	}
	return *o.SubmittedBy
}

// GetSubmittedByOk returns a tuple with the SubmittedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthChecklistOptions) GetSubmittedByOk() (*string, bool) {
	if o == nil || o.SubmittedBy == nil {
		return nil, false
	}
	return o.SubmittedBy, true
}

// HasSubmittedBy returns a boolean if a field has been set.
func (o *AuthChecklistOptions) HasSubmittedBy() bool {
	if o != nil && o.SubmittedBy != nil {
		return true
	}

	return false
}

// SetSubmittedBy gets a reference to the given string and assigns it to the SubmittedBy field.
func (o *AuthChecklistOptions) SetSubmittedBy(v string) {
	o.SubmittedBy = &v
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *AuthChecklistOptions) GetRedirectUrl() string {
	if o == nil || o.RedirectUrl == nil {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthChecklistOptions) GetRedirectUrlOk() (*string, bool) {
	if o == nil || o.RedirectUrl == nil {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *AuthChecklistOptions) HasRedirectUrl() bool {
	if o != nil && o.RedirectUrl != nil {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *AuthChecklistOptions) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

func (o AuthChecklistOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.SubmittedAt.IsSet() {
		toSerialize["submitted_at"] = o.SubmittedAt.Get()
	}
	if o.SubmittedBy != nil {
		toSerialize["submitted_by"] = o.SubmittedBy
	}
	if o.RedirectUrl != nil {
		toSerialize["redirect_url"] = o.RedirectUrl
	}
	return json.Marshal(toSerialize)
}

type NullableAuthChecklistOptions struct {
	value *AuthChecklistOptions
	isSet bool
}

func (v NullableAuthChecklistOptions) Get() *AuthChecklistOptions {
	return v.value
}

func (v *NullableAuthChecklistOptions) Set(val *AuthChecklistOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthChecklistOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthChecklistOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthChecklistOptions(val *AuthChecklistOptions) *NullableAuthChecklistOptions {
	return &NullableAuthChecklistOptions{value: val, isSet: true}
}

func (v NullableAuthChecklistOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthChecklistOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
