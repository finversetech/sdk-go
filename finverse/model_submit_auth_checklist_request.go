/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: devs@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// SubmitAuthChecklistRequest struct for SubmitAuthChecklistRequest
type SubmitAuthChecklistRequest struct {
	// The key_id that was used to encrypt the envelope key
	KeyId string `json:"key_id"`
	// Finverse Institution ID
	InstitutionId string `json:"institution_id"`
	// Type of account held by the Sender at the Institution. Possible values are INDIVIDUAL, BUSINESS
	SenderType *string `json:"sender_type,omitempty"`
	// The encrypted envelope key
	EnvelopeEncryptionKey string `json:"envelope_encryption_key"`
	// The initialization vector used for enncrypting the payload
	InitializationVector string `json:"initialization_vector"`
	// The authentication code is used to authenticate the origin of the message
	MessageAuthenticationCode string `json:"message_authentication_code"`
	// The encrypted payload that contains auth checklist items
	Ciphertext string `json:"ciphertext"`
}

// NewSubmitAuthChecklistRequest instantiates a new SubmitAuthChecklistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitAuthChecklistRequest(keyId string, institutionId string, envelopeEncryptionKey string, initializationVector string, messageAuthenticationCode string, ciphertext string) *SubmitAuthChecklistRequest {
	this := SubmitAuthChecklistRequest{}
	this.KeyId = keyId
	this.InstitutionId = institutionId
	this.EnvelopeEncryptionKey = envelopeEncryptionKey
	this.InitializationVector = initializationVector
	this.MessageAuthenticationCode = messageAuthenticationCode
	this.Ciphertext = ciphertext
	return &this
}

// NewSubmitAuthChecklistRequestWithDefaults instantiates a new SubmitAuthChecklistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitAuthChecklistRequestWithDefaults() *SubmitAuthChecklistRequest {
	this := SubmitAuthChecklistRequest{}
	return &this
}

// GetKeyId returns the KeyId field value
func (o *SubmitAuthChecklistRequest) GetKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistRequest) GetKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyId, true
}

// SetKeyId sets field value
func (o *SubmitAuthChecklistRequest) SetKeyId(v string) {
	o.KeyId = v
}

// GetInstitutionId returns the InstitutionId field value
func (o *SubmitAuthChecklistRequest) GetInstitutionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionId
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistRequest) GetInstitutionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstitutionId, true
}

// SetInstitutionId sets field value
func (o *SubmitAuthChecklistRequest) SetInstitutionId(v string) {
	o.InstitutionId = v
}

// GetSenderType returns the SenderType field value if set, zero value otherwise.
func (o *SubmitAuthChecklistRequest) GetSenderType() string {
	if o == nil || o.SenderType == nil {
		var ret string
		return ret
	}
	return *o.SenderType
}

// GetSenderTypeOk returns a tuple with the SenderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistRequest) GetSenderTypeOk() (*string, bool) {
	if o == nil || o.SenderType == nil {
		return nil, false
	}
	return o.SenderType, true
}

// HasSenderType returns a boolean if a field has been set.
func (o *SubmitAuthChecklistRequest) HasSenderType() bool {
	if o != nil && o.SenderType != nil {
		return true
	}

	return false
}

// SetSenderType gets a reference to the given string and assigns it to the SenderType field.
func (o *SubmitAuthChecklistRequest) SetSenderType(v string) {
	o.SenderType = &v
}

// GetEnvelopeEncryptionKey returns the EnvelopeEncryptionKey field value
func (o *SubmitAuthChecklistRequest) GetEnvelopeEncryptionKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvelopeEncryptionKey
}

// GetEnvelopeEncryptionKeyOk returns a tuple with the EnvelopeEncryptionKey field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistRequest) GetEnvelopeEncryptionKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvelopeEncryptionKey, true
}

// SetEnvelopeEncryptionKey sets field value
func (o *SubmitAuthChecklistRequest) SetEnvelopeEncryptionKey(v string) {
	o.EnvelopeEncryptionKey = v
}

// GetInitializationVector returns the InitializationVector field value
func (o *SubmitAuthChecklistRequest) GetInitializationVector() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InitializationVector
}

// GetInitializationVectorOk returns a tuple with the InitializationVector field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistRequest) GetInitializationVectorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitializationVector, true
}

// SetInitializationVector sets field value
func (o *SubmitAuthChecklistRequest) SetInitializationVector(v string) {
	o.InitializationVector = v
}

// GetMessageAuthenticationCode returns the MessageAuthenticationCode field value
func (o *SubmitAuthChecklistRequest) GetMessageAuthenticationCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageAuthenticationCode
}

// GetMessageAuthenticationCodeOk returns a tuple with the MessageAuthenticationCode field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistRequest) GetMessageAuthenticationCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageAuthenticationCode, true
}

// SetMessageAuthenticationCode sets field value
func (o *SubmitAuthChecklistRequest) SetMessageAuthenticationCode(v string) {
	o.MessageAuthenticationCode = v
}

// GetCiphertext returns the Ciphertext field value
func (o *SubmitAuthChecklistRequest) GetCiphertext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ciphertext
}

// GetCiphertextOk returns a tuple with the Ciphertext field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistRequest) GetCiphertextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ciphertext, true
}

// SetCiphertext sets field value
func (o *SubmitAuthChecklistRequest) SetCiphertext(v string) {
	o.Ciphertext = v
}

func (o SubmitAuthChecklistRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key_id"] = o.KeyId
	}
	if true {
		toSerialize["institution_id"] = o.InstitutionId
	}
	if o.SenderType != nil {
		toSerialize["sender_type"] = o.SenderType
	}
	if true {
		toSerialize["envelope_encryption_key"] = o.EnvelopeEncryptionKey
	}
	if true {
		toSerialize["initialization_vector"] = o.InitializationVector
	}
	if true {
		toSerialize["message_authentication_code"] = o.MessageAuthenticationCode
	}
	if true {
		toSerialize["ciphertext"] = o.Ciphertext
	}
	return json.Marshal(toSerialize)
}

type NullableSubmitAuthChecklistRequest struct {
	value *SubmitAuthChecklistRequest
	isSet bool
}

func (v NullableSubmitAuthChecklistRequest) Get() *SubmitAuthChecklistRequest {
	return v.value
}

func (v *NullableSubmitAuthChecklistRequest) Set(val *SubmitAuthChecklistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitAuthChecklistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitAuthChecklistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitAuthChecklistRequest(val *SubmitAuthChecklistRequest) *NullableSubmitAuthChecklistRequest {
	return &NullableSubmitAuthChecklistRequest{value: val, isSet: true}
}

func (v NullableSubmitAuthChecklistRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitAuthChecklistRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
