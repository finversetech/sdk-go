/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SubmitAuthChecklistRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubmitAuthChecklistRequest{}

// SubmitAuthChecklistRequest struct for SubmitAuthChecklistRequest
type SubmitAuthChecklistRequest struct {
	// The key_id that was used to encrypt the envelope key
	KeyId string `json:"key_id"`
	// The encrypted envelope key
	EnvelopeEncryptionKey string `json:"envelope_encryption_key"`
	// The initialization vector used for enncrypting the payload
	InitializationVector string `json:"initialization_vector"`
	// The authentication code is used to authenticate the origin of the message
	MessageAuthenticationCode string `json:"message_authentication_code"`
	// The encrypted payload that contains auth checklist items
	Ciphertext string `json:"ciphertext"`
}

type _SubmitAuthChecklistRequest SubmitAuthChecklistRequest

// NewSubmitAuthChecklistRequest instantiates a new SubmitAuthChecklistRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitAuthChecklistRequest(keyId string, envelopeEncryptionKey string, initializationVector string, messageAuthenticationCode string, ciphertext string) *SubmitAuthChecklistRequest {
	this := SubmitAuthChecklistRequest{}
	this.KeyId = keyId
	this.EnvelopeEncryptionKey = envelopeEncryptionKey
	this.InitializationVector = initializationVector
	this.MessageAuthenticationCode = messageAuthenticationCode
	this.Ciphertext = ciphertext
	return &this
}

// NewSubmitAuthChecklistRequestWithDefaults instantiates a new SubmitAuthChecklistRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitAuthChecklistRequestWithDefaults() *SubmitAuthChecklistRequest {
	this := SubmitAuthChecklistRequest{}
	return &this
}

// GetKeyId returns the KeyId field value
func (o *SubmitAuthChecklistRequest) GetKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistRequest) GetKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyId, true
}

// SetKeyId sets field value
func (o *SubmitAuthChecklistRequest) SetKeyId(v string) {
	o.KeyId = v
}

// GetEnvelopeEncryptionKey returns the EnvelopeEncryptionKey field value
func (o *SubmitAuthChecklistRequest) GetEnvelopeEncryptionKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvelopeEncryptionKey
}

// GetEnvelopeEncryptionKeyOk returns a tuple with the EnvelopeEncryptionKey field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistRequest) GetEnvelopeEncryptionKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvelopeEncryptionKey, true
}

// SetEnvelopeEncryptionKey sets field value
func (o *SubmitAuthChecklistRequest) SetEnvelopeEncryptionKey(v string) {
	o.EnvelopeEncryptionKey = v
}

// GetInitializationVector returns the InitializationVector field value
func (o *SubmitAuthChecklistRequest) GetInitializationVector() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InitializationVector
}

// GetInitializationVectorOk returns a tuple with the InitializationVector field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistRequest) GetInitializationVectorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitializationVector, true
}

// SetInitializationVector sets field value
func (o *SubmitAuthChecklistRequest) SetInitializationVector(v string) {
	o.InitializationVector = v
}

// GetMessageAuthenticationCode returns the MessageAuthenticationCode field value
func (o *SubmitAuthChecklistRequest) GetMessageAuthenticationCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageAuthenticationCode
}

// GetMessageAuthenticationCodeOk returns a tuple with the MessageAuthenticationCode field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistRequest) GetMessageAuthenticationCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageAuthenticationCode, true
}

// SetMessageAuthenticationCode sets field value
func (o *SubmitAuthChecklistRequest) SetMessageAuthenticationCode(v string) {
	o.MessageAuthenticationCode = v
}

// GetCiphertext returns the Ciphertext field value
func (o *SubmitAuthChecklistRequest) GetCiphertext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ciphertext
}

// GetCiphertextOk returns a tuple with the Ciphertext field value
// and a boolean to check if the value has been set.
func (o *SubmitAuthChecklistRequest) GetCiphertextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ciphertext, true
}

// SetCiphertext sets field value
func (o *SubmitAuthChecklistRequest) SetCiphertext(v string) {
	o.Ciphertext = v
}

func (o SubmitAuthChecklistRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubmitAuthChecklistRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key_id"] = o.KeyId
	toSerialize["envelope_encryption_key"] = o.EnvelopeEncryptionKey
	toSerialize["initialization_vector"] = o.InitializationVector
	toSerialize["message_authentication_code"] = o.MessageAuthenticationCode
	toSerialize["ciphertext"] = o.Ciphertext
	return toSerialize, nil
}

func (o *SubmitAuthChecklistRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"key_id",
		"envelope_encryption_key",
		"initialization_vector",
		"message_authentication_code",
		"ciphertext",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubmitAuthChecklistRequest := _SubmitAuthChecklistRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSubmitAuthChecklistRequest)

	if err != nil {
		return err
	}

	*o = SubmitAuthChecklistRequest(varSubmitAuthChecklistRequest)

	return err
}

type NullableSubmitAuthChecklistRequest struct {
	value *SubmitAuthChecklistRequest
	isSet bool
}

func (v NullableSubmitAuthChecklistRequest) Get() *SubmitAuthChecklistRequest {
	return v.value
}

func (v *NullableSubmitAuthChecklistRequest) Set(val *SubmitAuthChecklistRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitAuthChecklistRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitAuthChecklistRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitAuthChecklistRequest(val *SubmitAuthChecklistRequest) *NullableSubmitAuthChecklistRequest {
	return &NullableSubmitAuthChecklistRequest{value: val, isSet: true}
}

func (v NullableSubmitAuthChecklistRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitAuthChecklistRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
