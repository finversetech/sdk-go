/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"time"
)

// checks if the FVCard type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FVCard{}

// FVCard struct for FVCard
type FVCard struct {
	// Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// Card Status
	Status               *string                  `json:"status,omitempty"`
	Error                *FvEmbeddedErrorModel    `json:"error,omitempty"`
	CardDetails          *FVCardDetails           `json:"card_details,omitempty"`
	RecipientAccount     *MandateRecipientAccount `json:"recipient_account,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FVCard FVCard

// NewFVCard instantiates a new FVCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFVCard() *FVCard {
	this := FVCard{}
	return &this
}

// NewFVCardWithDefaults instantiates a new FVCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFVCardWithDefaults() *FVCard {
	this := FVCard{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FVCard) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FVCard) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FVCard) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *FVCard) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FVCard) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FVCard) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FVCard) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *FVCard) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FVCard) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FVCard) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FVCard) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *FVCard) SetStatus(v string) {
	o.Status = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *FVCard) GetError() FvEmbeddedErrorModel {
	if o == nil || IsNil(o.Error) {
		var ret FvEmbeddedErrorModel
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FVCard) GetErrorOk() (*FvEmbeddedErrorModel, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *FVCard) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given FvEmbeddedErrorModel and assigns it to the Error field.
func (o *FVCard) SetError(v FvEmbeddedErrorModel) {
	o.Error = &v
}

// GetCardDetails returns the CardDetails field value if set, zero value otherwise.
func (o *FVCard) GetCardDetails() FVCardDetails {
	if o == nil || IsNil(o.CardDetails) {
		var ret FVCardDetails
		return ret
	}
	return *o.CardDetails
}

// GetCardDetailsOk returns a tuple with the CardDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FVCard) GetCardDetailsOk() (*FVCardDetails, bool) {
	if o == nil || IsNil(o.CardDetails) {
		return nil, false
	}
	return o.CardDetails, true
}

// HasCardDetails returns a boolean if a field has been set.
func (o *FVCard) HasCardDetails() bool {
	if o != nil && !IsNil(o.CardDetails) {
		return true
	}

	return false
}

// SetCardDetails gets a reference to the given FVCardDetails and assigns it to the CardDetails field.
func (o *FVCard) SetCardDetails(v FVCardDetails) {
	o.CardDetails = &v
}

// GetRecipientAccount returns the RecipientAccount field value if set, zero value otherwise.
func (o *FVCard) GetRecipientAccount() MandateRecipientAccount {
	if o == nil || IsNil(o.RecipientAccount) {
		var ret MandateRecipientAccount
		return ret
	}
	return *o.RecipientAccount
}

// GetRecipientAccountOk returns a tuple with the RecipientAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FVCard) GetRecipientAccountOk() (*MandateRecipientAccount, bool) {
	if o == nil || IsNil(o.RecipientAccount) {
		return nil, false
	}
	return o.RecipientAccount, true
}

// HasRecipientAccount returns a boolean if a field has been set.
func (o *FVCard) HasRecipientAccount() bool {
	if o != nil && !IsNil(o.RecipientAccount) {
		return true
	}

	return false
}

// SetRecipientAccount gets a reference to the given MandateRecipientAccount and assigns it to the RecipientAccount field.
func (o *FVCard) SetRecipientAccount(v MandateRecipientAccount) {
	o.RecipientAccount = &v
}

func (o FVCard) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FVCard) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.CardDetails) {
		toSerialize["card_details"] = o.CardDetails
	}
	if !IsNil(o.RecipientAccount) {
		toSerialize["recipient_account"] = o.RecipientAccount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FVCard) UnmarshalJSON(data []byte) (err error) {
	varFVCard := _FVCard{}

	err = json.Unmarshal(data, &varFVCard)

	if err != nil {
		return err
	}

	*o = FVCard(varFVCard)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "status")
		delete(additionalProperties, "error")
		delete(additionalProperties, "card_details")
		delete(additionalProperties, "recipient_account")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFVCard struct {
	value *FVCard
	isSet bool
}

func (v NullableFVCard) Get() *FVCard {
	return v.value
}

func (v *NullableFVCard) Set(val *FVCard) {
	v.value = val
	v.isSet = true
}

func (v NullableFVCard) IsSet() bool {
	return v.isSet
}

func (v *NullableFVCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFVCard(val *FVCard) *NullableFVCard {
	return &NullableFVCard{value: val, isSet: true}
}

func (v NullableFVCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFVCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
