/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// checks if the BadRequestModelError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BadRequestModelError{}

// BadRequestModelError struct for BadRequestModelError
type BadRequestModelError struct {
	Code    *float32 `json:"code,omitempty"`
	Name    *string  `json:"name,omitempty"`
	Message *string  `json:"message,omitempty"`
	// A link to visit for further action
	Link                 *string `json:"link,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BadRequestModelError BadRequestModelError

// NewBadRequestModelError instantiates a new BadRequestModelError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBadRequestModelError() *BadRequestModelError {
	this := BadRequestModelError{}
	return &this
}

// NewBadRequestModelErrorWithDefaults instantiates a new BadRequestModelError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBadRequestModelErrorWithDefaults() *BadRequestModelError {
	this := BadRequestModelError{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *BadRequestModelError) GetCode() float32 {
	if o == nil || IsNil(o.Code) {
		var ret float32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BadRequestModelError) GetCodeOk() (*float32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *BadRequestModelError) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given float32 and assigns it to the Code field.
func (o *BadRequestModelError) SetCode(v float32) {
	o.Code = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BadRequestModelError) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BadRequestModelError) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BadRequestModelError) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BadRequestModelError) SetName(v string) {
	o.Name = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *BadRequestModelError) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BadRequestModelError) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *BadRequestModelError) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *BadRequestModelError) SetMessage(v string) {
	o.Message = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *BadRequestModelError) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BadRequestModelError) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *BadRequestModelError) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *BadRequestModelError) SetLink(v string) {
	o.Link = &v
}

func (o BadRequestModelError) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BadRequestModelError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BadRequestModelError) UnmarshalJSON(data []byte) (err error) {
	varBadRequestModelError := _BadRequestModelError{}

	err = json.Unmarshal(data, &varBadRequestModelError)

	if err != nil {
		return err
	}

	*o = BadRequestModelError(varBadRequestModelError)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "name")
		delete(additionalProperties, "message")
		delete(additionalProperties, "link")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBadRequestModelError struct {
	value *BadRequestModelError
	isSet bool
}

func (v NullableBadRequestModelError) Get() *BadRequestModelError {
	return v.value
}

func (v *NullableBadRequestModelError) Set(val *BadRequestModelError) {
	v.value = val
	v.isSet = true
}

func (v NullableBadRequestModelError) IsSet() bool {
	return v.isSet
}

func (v *NullableBadRequestModelError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBadRequestModelError(val *BadRequestModelError) *NullableBadRequestModelError {
	return &NullableBadRequestModelError{value: val, isSet: true}
}

func (v NullableBadRequestModelError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBadRequestModelError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
