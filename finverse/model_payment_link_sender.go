/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
	"fmt"
)

// checks if the PaymentLinkSender type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentLinkSender{}

// PaymentLinkSender struct for PaymentLinkSender
type PaymentLinkSender struct {
	Email *string `json:"email,omitempty"`
	// Customer App's user ID, representing the end-user making the payment.
	ExternalUserId string `json:"external_user_id"`
	// Accountholder name of the sender's account
	Name                 string `json:"name"`
	AdditionalProperties map[string]interface{}
}

type _PaymentLinkSender PaymentLinkSender

// NewPaymentLinkSender instantiates a new PaymentLinkSender object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentLinkSender(externalUserId string, name string) *PaymentLinkSender {
	this := PaymentLinkSender{}
	this.ExternalUserId = externalUserId
	this.Name = name
	return &this
}

// NewPaymentLinkSenderWithDefaults instantiates a new PaymentLinkSender object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentLinkSenderWithDefaults() *PaymentLinkSender {
	this := PaymentLinkSender{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PaymentLinkSender) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentLinkSender) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PaymentLinkSender) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PaymentLinkSender) SetEmail(v string) {
	o.Email = &v
}

// GetExternalUserId returns the ExternalUserId field value
func (o *PaymentLinkSender) GetExternalUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalUserId
}

// GetExternalUserIdOk returns a tuple with the ExternalUserId field value
// and a boolean to check if the value has been set.
func (o *PaymentLinkSender) GetExternalUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalUserId, true
}

// SetExternalUserId sets field value
func (o *PaymentLinkSender) SetExternalUserId(v string) {
	o.ExternalUserId = v
}

// GetName returns the Name field value
func (o *PaymentLinkSender) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PaymentLinkSender) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PaymentLinkSender) SetName(v string) {
	o.Name = v
}

func (o PaymentLinkSender) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentLinkSender) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	toSerialize["external_user_id"] = o.ExternalUserId
	toSerialize["name"] = o.Name

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentLinkSender) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"external_user_id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentLinkSender := _PaymentLinkSender{}

	err = json.Unmarshal(data, &varPaymentLinkSender)

	if err != nil {
		return err
	}

	*o = PaymentLinkSender(varPaymentLinkSender)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "email")
		delete(additionalProperties, "external_user_id")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentLinkSender struct {
	value *PaymentLinkSender
	isSet bool
}

func (v NullablePaymentLinkSender) Get() *PaymentLinkSender {
	return v.value
}

func (v *NullablePaymentLinkSender) Set(val *PaymentLinkSender) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentLinkSender) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentLinkSender) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentLinkSender(val *PaymentLinkSender) *NullablePaymentLinkSender {
	return &NullablePaymentLinkSender{value: val, isSet: true}
}

func (v NullablePaymentLinkSender) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentLinkSender) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
