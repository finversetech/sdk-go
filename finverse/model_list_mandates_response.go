/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"encoding/json"
)

// ListMandatesResponse struct for ListMandatesResponse
type ListMandatesResponse struct {
	Mandates []GetMandateResponse `json:"mandates,omitempty"`
}

// NewListMandatesResponse instantiates a new ListMandatesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListMandatesResponse() *ListMandatesResponse {
	this := ListMandatesResponse{}
	return &this
}

// NewListMandatesResponseWithDefaults instantiates a new ListMandatesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListMandatesResponseWithDefaults() *ListMandatesResponse {
	this := ListMandatesResponse{}
	return &this
}

// GetMandates returns the Mandates field value if set, zero value otherwise.
func (o *ListMandatesResponse) GetMandates() []GetMandateResponse {
	if o == nil || o.Mandates == nil {
		var ret []GetMandateResponse
		return ret
	}
	return o.Mandates
}

// GetMandatesOk returns a tuple with the Mandates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMandatesResponse) GetMandatesOk() ([]GetMandateResponse, bool) {
	if o == nil || o.Mandates == nil {
		return nil, false
	}
	return o.Mandates, true
}

// HasMandates returns a boolean if a field has been set.
func (o *ListMandatesResponse) HasMandates() bool {
	if o != nil && o.Mandates != nil {
		return true
	}

	return false
}

// SetMandates gets a reference to the given []GetMandateResponse and assigns it to the Mandates field.
func (o *ListMandatesResponse) SetMandates(v []GetMandateResponse) {
	o.Mandates = v
}

func (o ListMandatesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Mandates != nil {
		toSerialize["mandates"] = o.Mandates
	}
	return json.Marshal(toSerialize)
}

type NullableListMandatesResponse struct {
	value *ListMandatesResponse
	isSet bool
}

func (v NullableListMandatesResponse) Get() *ListMandatesResponse {
	return v.value
}

func (v *NullableListMandatesResponse) Set(val *ListMandatesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListMandatesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListMandatesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMandatesResponse(val *ListMandatesResponse) *NullableListMandatesResponse {
	return &NullableListMandatesResponse{value: val, isSet: true}
}

func (v NullableListMandatesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMandatesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
