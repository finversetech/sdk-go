/*
Finverse Public

Documentation of the early finverse services

API version: 0.0.1
Contact: info@finverse.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package finverse

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ListMandatesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListMandatesResponse{}

// ListMandatesResponse struct for ListMandatesResponse
type ListMandatesResponse struct {
	Mandates      []GetMandateResponse `json:"mandates,omitempty"`
	TotalMandates int32                `json:"total_mandates"`
}

type _ListMandatesResponse ListMandatesResponse

// NewListMandatesResponse instantiates a new ListMandatesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListMandatesResponse(totalMandates int32) *ListMandatesResponse {
	this := ListMandatesResponse{}
	this.TotalMandates = totalMandates
	return &this
}

// NewListMandatesResponseWithDefaults instantiates a new ListMandatesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListMandatesResponseWithDefaults() *ListMandatesResponse {
	this := ListMandatesResponse{}
	return &this
}

// GetMandates returns the Mandates field value if set, zero value otherwise.
func (o *ListMandatesResponse) GetMandates() []GetMandateResponse {
	if o == nil || IsNil(o.Mandates) {
		var ret []GetMandateResponse
		return ret
	}
	return o.Mandates
}

// GetMandatesOk returns a tuple with the Mandates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListMandatesResponse) GetMandatesOk() ([]GetMandateResponse, bool) {
	if o == nil || IsNil(o.Mandates) {
		return nil, false
	}
	return o.Mandates, true
}

// HasMandates returns a boolean if a field has been set.
func (o *ListMandatesResponse) HasMandates() bool {
	if o != nil && !IsNil(o.Mandates) {
		return true
	}

	return false
}

// SetMandates gets a reference to the given []GetMandateResponse and assigns it to the Mandates field.
func (o *ListMandatesResponse) SetMandates(v []GetMandateResponse) {
	o.Mandates = v
}

// GetTotalMandates returns the TotalMandates field value
func (o *ListMandatesResponse) GetTotalMandates() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalMandates
}

// GetTotalMandatesOk returns a tuple with the TotalMandates field value
// and a boolean to check if the value has been set.
func (o *ListMandatesResponse) GetTotalMandatesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalMandates, true
}

// SetTotalMandates sets field value
func (o *ListMandatesResponse) SetTotalMandates(v int32) {
	o.TotalMandates = v
}

func (o ListMandatesResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListMandatesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mandates) {
		toSerialize["mandates"] = o.Mandates
	}
	toSerialize["total_mandates"] = o.TotalMandates
	return toSerialize, nil
}

func (o *ListMandatesResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"total_mandates",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListMandatesResponse := _ListMandatesResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListMandatesResponse)

	if err != nil {
		return err
	}

	*o = ListMandatesResponse(varListMandatesResponse)

	return err
}

type NullableListMandatesResponse struct {
	value *ListMandatesResponse
	isSet bool
}

func (v NullableListMandatesResponse) Get() *ListMandatesResponse {
	return v.value
}

func (v *NullableListMandatesResponse) Set(val *ListMandatesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListMandatesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListMandatesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMandatesResponse(val *ListMandatesResponse) *NullableListMandatesResponse {
	return &NullableListMandatesResponse{value: val, isSet: true}
}

func (v NullableListMandatesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMandatesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
